{"ast":null,"code":"/**\n * @license Angular v4.4.7\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { share } from 'rxjs/operator/share';\nimport { Subject } from 'rxjs/Subject';\n\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n *\n * ```typescript\n * var t = new OpaqueToken(\"value\");\n *\n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n *\n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n *\n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n *\n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nclass OpaqueToken {\n  /**\n   * @param {?} _desc\n   */\n  constructor(_desc) {\n    this._desc = _desc;\n  }\n  /**\n   * @return {?}\n   */\n  toString() {\n    return `Token ${this._desc}`;\n  }\n}\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nclass InjectionToken extends OpaqueToken {\n  /**\n   * @param {?} desc\n   */\n  constructor(desc) {\n    super(desc);\n  }\n  /**\n   * @return {?}\n   */\n  toString() {\n    return `InjectionToken ${this._desc}`;\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _global = __window || __global || __self;\nlet _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n  if (!_symbolIterator) {\n    const /** @type {?} */Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const /** @type {?} */keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let /** @type {?} */i = 0; i < keys.length; ++i) {\n        const /** @type {?} */key = keys[i];\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n  if (typeof token === 'string') {\n    return token;\n  }\n  if (token == null) {\n    return '' + token;\n  }\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n  if (token.name) {\n    return `${token.name}`;\n  }\n  const /** @type {?} */res = token.toString();\n  if (res == null) {\n    return '' + res;\n  }\n  const /** @type {?} */newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet _nextClassId = 0;\nconst Reflect = _global['Reflect'];\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation) {\n  if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray, key) {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function || fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n  if (typeof fnOrArray === 'function') {\n    return fnOrArray;\n  }\n  if (Array.isArray(fnOrArray)) {\n    const /** @type {?} */annotations = fnOrArray;\n    const /** @type {?} */annoLength = annotations.length - 1;\n    const /** @type {?} */fn = fnOrArray[annoLength];\n    if (typeof fn !== 'function') {\n      throw new Error(`Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    if (annoLength != fn.length) {\n      throw new Error(`Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n    }\n    const /** @type {?} */paramsAnnotations = [];\n    for (let /** @type {?} */i = 0, /** @type {?} */ii = annotations.length - 1; i < ii; i++) {\n      const /** @type {?} */paramAnnotations = [];\n      paramsAnnotations.push(paramAnnotations);\n      const /** @type {?} */annotation = annotations[i];\n      if (Array.isArray(annotation)) {\n        for (let /** @type {?} */j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (typeof annotation === 'function') {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  }\n  throw new Error(`Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n *\n * ## Basic Example\n *\n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n *\n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n *\n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n *\n * or equivalent to ES5:\n *\n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n *\n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n *\n * ### Example with parameter annotations\n *\n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class MyService {\n *   constructor(name: string, \\@Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n *\n * ### Example with inheritance\n *\n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n *\n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * \\@stable\n * @param {?} clsDef\n * @return {?}\n */\nfunction Class(clsDef) {\n  const /** @type {?} */constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n  let /** @type {?} */proto = constructor.prototype;\n  if (clsDef.hasOwnProperty('extends')) {\n    if (typeof clsDef.extends === 'function') {\n      constructor.prototype = proto = Object.create(clsDef.extends.prototype);\n    } else {\n      throw new Error(`Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n  for (const /** @type {?} */key in clsDef) {\n    if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams(clsDef[key], key);\n    }\n  }\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n  const /** @type {?} */constructorName = constructor['name'];\n  if (!constructorName || constructorName === 'constructor') {\n    constructor['overriddenName'] = `class${_nextClassId++}`;\n  }\n  return constructor;\n}\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n  const /** @type {?} */metaCtor = makeMetadataCtor(props);\n  /**\n   * @param {?} objOrType\n   * @return {?}\n   */\n  function DecoratorFactory(objOrType) {\n    if (!(Reflect && Reflect.getOwnMetadata)) {\n      throw 'reflect-metadata shim is required when using class decorators';\n    }\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this;\n    }\n    const /** @type {?} */annotationInstance = new DecoratorFactory(objOrType);\n    const /** @type {?} */chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n    chainAnnotation.push(annotationInstance);\n    const /** @type {?} */TypeDecorator = function TypeDecorator(cls) {\n      const /** @type {?} */annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n      annotations.push(annotationInstance);\n      Reflect.defineMetadata('annotations', annotations, cls);\n      return cls;\n    };\n    TypeDecorator.annotations = chainAnnotation;\n    TypeDecorator.Class = Class;\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  DecoratorFactory.annotationCls = DecoratorFactory;\n  return DecoratorFactory;\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n  return function ctor(...args) {\n    if (props) {\n      const /** @type {?} */values = props(...args);\n      for (const /** @type {?} */propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n  const /** @type {?} */metaCtor = makeMetadataCtor(props);\n  /**\n   * @param {...?} args\n   * @return {?}\n   */\n  function ParamDecoratorFactory(...args) {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const /** @type {?} */annotationInstance = new ParamDecoratorFactory(...args);\n    ParamDecorator.annotation = annotationInstance;\n    return ParamDecorator;\n    /**\n     * @param {?} cls\n     * @param {?} unusedKey\n     * @param {?} index\n     * @return {?}\n     */\n    function ParamDecorator(cls, unusedKey, index) {\n      const /** @type {?} */parameters = Reflect.getOwnMetadata('parameters', cls) || [];\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n      parameters[index] = parameters[index] || []; /** @type {?} */\n      parameters[index].push(annotationInstance);\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n  const /** @type {?} */metaCtor = makeMetadataCtor(props);\n  /**\n   * @param {...?} args\n   * @return {?}\n   */\n  function PropDecoratorFactory(...args) {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const /** @type {?} */decoratorInstance = new PropDecoratorFactory(...args);\n    return function PropDecorator(target, name) {\n      const /** @type {?} */meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n      Reflect.defineMetadata('propMetadata', meta, target.constructor);\n    };\n  }\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nconst ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Attribute = makeParamDecorator('Attribute', attributeName => ({\n  attributeName\n}));\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nclass Query {}\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nconst ContentChildren = makePropDecorator('ContentChildren', (selector, data = {}) => Object.assign({\n  selector,\n  first: false,\n  isViewQuery: false,\n  descendants: false\n}, data), Query);\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst ContentChild = makePropDecorator('ContentChild', (selector, data = {}) => Object.assign({\n  selector,\n  first: true,\n  isViewQuery: false,\n  descendants: true\n}, data), Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst ViewChildren = makePropDecorator('ViewChildren', (selector, data = {}) => Object.assign({\n  selector,\n  first: false,\n  isViewQuery: true,\n  descendants: true\n}, data), Query);\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst ViewChild = makePropDecorator('ViewChild', (selector, data) => Object.assign({\n  selector,\n  first: true,\n  isViewQuery: true,\n  descendants: true\n}, data), Query);\nlet ChangeDetectionStrategy = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nlet ChangeDetectorStatus = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n  return changeDetectionStrategy == null || changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Directive = makeDecorator('Directive', (dir = {}) => dir);\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Component = makeDecorator('Component', (c = {}) => Object.assign({\n  changeDetection: ChangeDetectionStrategy.Default\n}, c), Directive);\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Pipe = makeDecorator('Pipe', p => Object.assign({\n  pure: true\n}, p));\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Input = makePropDecorator('Input', bindingPropertyName => ({\n  bindingPropertyName\n}));\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Output = makePropDecorator('Output', bindingPropertyName => ({\n  bindingPropertyName\n}));\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst HostBinding = makePropDecorator('HostBinding', hostPropertyName => ({\n  hostPropertyName\n}));\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst HostListener = makePropDecorator('HostListener', (eventName, args) => ({\n  eventName,\n  args\n}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nconst CUSTOM_ELEMENTS_SCHEMA = {\n  name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nconst NO_ERRORS_SCHEMA = {\n  name: 'no-errors-schema'\n};\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst NgModule = makeDecorator('NgModule', ngModule => ngModule);\nlet ViewEncapsulation = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/**\n * Metadata properties available for configuring Views.\n *\n * For details on the `\\@Component` annotation, see {\\@link Component}.\n *\n * ### Example\n *\n * ```\n * \\@Component({\n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n *\n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n *\n * @deprecated Use Component instead.\n *\n * {\\@link Component}\n */\nclass ViewMetadata {\n  /**\n   * @param {?=} opts\n   */\n  constructor(opts = {}) {\n    this.templateUrl = opts.templateUrl;\n    this.template = opts.template;\n    this.styleUrls = opts.styleUrls;\n    this.styles = opts.styles;\n    this.encapsulation = opts.encapsulation;\n    this.animations = opts.animations;\n    this.interpolation = opts.interpolation;\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nclass Version {\n  /**\n   * @param {?} full\n   */\n  constructor(full) {\n    this.full = full;\n  }\n  /**\n   * @return {?}\n   */\n  get major() {\n    return this.full.split('.')[0];\n  }\n  /**\n   * @return {?}\n   */\n  get minor() {\n    return this.full.split('.')[1];\n  }\n  /**\n   * @return {?}\n   */\n  get patch() {\n    return this.full.split('.').slice(2).join('.');\n  }\n}\n/**\n * \\@stable\n */\nconst VERSION = new Version('4.4.7');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Inject = makeParamDecorator('Inject', token => ({\n  token\n}));\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Optional = makeParamDecorator('Optional');\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Injectable = makeDecorator('Injectable');\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n  forwardRefFn.__forward_ref__ = forwardRef;\n  forwardRefFn.toString = function () {\n    return stringify(this());\n  };\n  return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') && type.__forward_ref__ === forwardRef) {\n    return type();\n  } else {\n    return type;\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _THROW_IF_NOT_FOUND = new Object();\nconst THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nclass _NullInjector {\n  /**\n   * @param {?} token\n   * @param {?=} notFoundValue\n   * @return {?}\n   */\n  get(token, notFoundValue = _THROW_IF_NOT_FOUND) {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      throw new Error(`No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nclass Injector {\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * If not found:\n   * - Throws an error if no `notFoundValue` that is not equal to\n   * Injector.THROW_IF_NOT_FOUND is given\n   * - Returns the `notFoundValue` otherwise\n   * @abstract\n   * @template T\n   * @param {?} token\n   * @param {?=} notFoundValue\n   * @return {?}\n   */\n  get(token, notFoundValue) {}\n  /**\n   * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n   * @suppress {duplicate}\n   * @abstract\n   * @param {?} token\n   * @param {?=} notFoundValue\n   * @return {?}\n   */\n  get(token, notFoundValue) {}\n}\nInjector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nInjector.NULL = new _NullInjector();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst ERROR_COMPONENT_TYPE = 'ngComponentType';\nconst ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nconst ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nconst ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n  return error[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n  return error[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n  return error[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console, ...values) {\n  console.error(...values);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nclass ErrorHandler {\n  /**\n   * @param {?=} deprecatedParameter\n   */\n  constructor(\n  /**\n   * @deprecated since v4.0 parameter no longer has an effect, as ErrorHandler will never\n   * rethrow.\n   */\n  deprecatedParameter) {\n    /**\n     * \\@internal\n     */\n    this._console = console;\n  }\n  /**\n   * @param {?} error\n   * @return {?}\n   */\n  handleError(error) {\n    const /** @type {?} */originalError = this._findOriginalError(error);\n    const /** @type {?} */context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const /** @type {?} */errorLogger = getErrorLogger(error);\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n  /**\n   * \\@internal\n   * @param {?} error\n   * @return {?}\n   */\n  _findContext(error) {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) : this._findContext(getOriginalError(error));\n    }\n    return null;\n  }\n  /**\n   * \\@internal\n   * @param {?} error\n   * @return {?}\n   */\n  _findOriginalError(error) {\n    let /** @type {?} */e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n    return e;\n  }\n}\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n  const /** @type {?} */msg = `${message} caused by: ${originalError instanceof Error ? originalError.message : originalError}`;\n  const /** @type {?} */error = Error(msg);\n  error[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n  const /** @type {?} */res = [];\n  for (let /** @type {?} */i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n  if (keys.length > 1) {\n    const /** @type {?} */reversed = findFirstClosedCycle(keys.slice().reverse());\n    const /** @type {?} */tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n  return '';\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n  const /** @type {?} */keys = [key];\n  const /** @type {?} */errMsg = constructResolvingMessage(keys);\n  const /** @type {?} */error = originalError ? wrappedError(errMsg, originalError) : Error(errMsg);\n  error.addKey = addKey;\n  error.keys = keys;\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  error[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  // Note: This updated message won't be reflected in the `.stack` property\n  this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n  return injectionError(injector, key, function (keys) {\n    const /** @type {?} */first = stringify(keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n  return injectionError(injector, key, function (keys) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n  return injectionError(injector, key, function (keys) {\n    const /** @type {?} */first = stringify(keys[0].token);\n    return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n  }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n  return Error(`Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n  const /** @type {?} */signature = [];\n  for (let /** @type {?} */i = 0, /** @type {?} */ii = params.length; i < ii; i++) {\n    const /** @type {?} */parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' + signature.join(', ') + '). ' + 'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' + stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * \\@experimental\n */\nclass ReflectiveKey {\n  /**\n   * Private\n   * @param {?} token\n   * @param {?} id\n   */\n  constructor(token, id) {\n    this.token = token;\n    this.id = id;\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n  }\n  /**\n   * Returns a stringified token.\n   * @return {?}\n   */\n  get displayName() {\n    return stringify(this.token);\n  }\n  /**\n   * Retrieves a `Key` for a token.\n   * @param {?} token\n   * @return {?}\n   */\n  static get(token) {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n  /**\n   * @return {?} the number of keys registered in the system.\n   */\n  static get numberOfKeys() {\n    return _globalKeyRegistry.numberOfKeys;\n  }\n}\n/**\n * \\@internal\n */\nclass KeyRegistry {\n  constructor() {\n    this._allKeys = new Map();\n  }\n  /**\n   * @param {?} token\n   * @return {?}\n   */\n  get(token) {\n    if (token instanceof ReflectiveKey) return token;\n    if (this._allKeys.has(token)) {\n      return this._allKeys.get(token);\n    }\n    const /** @type {?} */newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n  /**\n   * @return {?}\n   */\n  get numberOfKeys() {\n    return this._allKeys.size;\n  }\n}\nconst _globalKeyRegistry = new KeyRegistry();\n\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nconst Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n  return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nconst DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nclass ReflectionCapabilities {\n  /**\n   * @param {?=} reflect\n   */\n  constructor(reflect) {\n    this._reflect = reflect || _global['Reflect'];\n  }\n  /**\n   * @return {?}\n   */\n  isReflectionEnabled() {\n    return true;\n  }\n  /**\n   * @template T\n   * @param {?} t\n   * @return {?}\n   */\n  factory(t) {\n    return (...args) => new t(...args);\n  }\n  /**\n   * \\@internal\n   * @param {?} paramTypes\n   * @param {?} paramAnnotations\n   * @return {?}\n   */\n  _zipTypesAndAnnotations(paramTypes, paramAnnotations) {\n    let /** @type {?} */result;\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n    for (let /** @type {?} */i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n  /**\n   * @param {?} type\n   * @param {?} parentCtor\n   * @return {?}\n   */\n  _ownParameters(type, parentCtor) {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n    // Prefer the direct API.\n    if (type.parameters && type.parameters !== parentCtor.parameters) {\n      return type.parameters;\n    }\n    // API of tsickle for lowering decorators to properties on the class.\n    const /** @type {?} */tsickleCtorParams = type.ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const /** @type {?} */ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const /** @type {?} */paramTypes = ctorParameters.map(ctorParam => ctorParam && ctorParam.type);\n      const /** @type {?} */paramAnnotations = ctorParameters.map(ctorParam => ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n    // API for metadata created by invoking the decorators.\n    if (this._reflect != null && this._reflect.getOwnMetadata != null) {\n      const /** @type {?} */paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n      const /** @type {?} */paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n      if (paramTypes || paramAnnotations) {\n        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n      }\n    }\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(type.length).fill(undefined);\n  }\n  /**\n   * @param {?} type\n   * @return {?}\n   */\n  parameters(type) {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const /** @type {?} */parentCtor = getParentCtor(type);\n    let /** @type {?} */parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n  /**\n   * @param {?} typeOrFunc\n   * @param {?} parentCtor\n   * @return {?}\n   */\n  _ownAnnotations(typeOrFunc, parentCtor) {\n    // Prefer the direct API.\n    if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n      let /** @type {?} */annotations = typeOrFunc.annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n    // API of tsickle for lowering decorators to properties on the class.\n    if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n    }\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n    }\n    return null;\n  }\n  /**\n   * @param {?} typeOrFunc\n   * @return {?}\n   */\n  annotations(typeOrFunc) {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const /** @type {?} */parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const /** @type {?} */parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n  /**\n   * @param {?} typeOrFunc\n   * @param {?} parentCtor\n   * @return {?}\n   */\n  _ownPropMetadata(typeOrFunc, parentCtor) {\n    // Prefer the direct API.\n    if (typeOrFunc.propMetadata && typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n      let /** @type {?} */propMetadata = typeOrFunc.propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n    // API of tsickle for lowering decorators to properties on the class.\n    if (typeOrFunc.propDecorators && typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n      const /** @type {?} */propDecorators = typeOrFunc.propDecorators;\n      const /** @type {?} */propMetadata = {};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n    }\n    return null;\n  }\n  /**\n   * @param {?} typeOrFunc\n   * @return {?}\n   */\n  propMetadata(typeOrFunc) {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const /** @type {?} */parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */propMetadata = {};\n    if (parentCtor !== Object) {\n      const /** @type {?} */parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach(propName => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const /** @type {?} */ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach(propName => {\n        const /** @type {?} */decorators = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n  /**\n   * @param {?} type\n   * @param {?} lcProperty\n   * @return {?}\n   */\n  hasLifecycleHook(type, lcProperty) {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n  /**\n   * @param {?} name\n   * @return {?}\n   */\n  getter(name) {\n    return new Function('o', 'return o.' + name + ';');\n  }\n  /**\n   * @param {?} name\n   * @return {?}\n   */\n  setter(name) {\n    return new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n  /**\n   * @param {?} name\n   * @return {?}\n   */\n  method(name) {\n    const /** @type {?} */functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return new Function('o', 'args', functionBody);\n  }\n  /**\n   * @param {?} type\n   * @return {?}\n   */\n  importUri(type) {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n  /**\n   * @param {?} type\n   * @return {?}\n   */\n  resourceUri(type) {\n    return `./${stringify(type)}`;\n  }\n  /**\n   * @param {?} name\n   * @param {?} moduleUrl\n   * @param {?} members\n   * @param {?} runtime\n   * @return {?}\n   */\n  resolveIdentifier(name, moduleUrl, members, runtime) {\n    return runtime;\n  }\n  /**\n   * @param {?} enumIdentifier\n   * @param {?} name\n   * @return {?}\n   */\n  resolveEnum(enumIdentifier, name) {\n    return enumIdentifier[name];\n  }\n}\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const /** @type {?} */decoratorType = decoratorInvocation.type;\n    const /** @type {?} */annotationCls = decoratorType.annotationCls;\n    const /** @type {?} */annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n  const /** @type {?} */parentProto = Object.getPrototypeOf(ctor.prototype);\n  const /** @type {?} */parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nclass Reflector {\n  /**\n   * @param {?} reflectionCapabilities\n   */\n  constructor(reflectionCapabilities) {\n    this.reflectionCapabilities = reflectionCapabilities;\n  }\n  /**\n   * @param {?} caps\n   * @return {?}\n   */\n  updateCapabilities(caps) {\n    this.reflectionCapabilities = caps;\n  }\n  /**\n   * @param {?} type\n   * @return {?}\n   */\n  factory(type) {\n    return this.reflectionCapabilities.factory(type);\n  }\n  /**\n   * @param {?} typeOrFunc\n   * @return {?}\n   */\n  parameters(typeOrFunc) {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n  /**\n   * @param {?} typeOrFunc\n   * @return {?}\n   */\n  annotations(typeOrFunc) {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n  /**\n   * @param {?} typeOrFunc\n   * @return {?}\n   */\n  propMetadata(typeOrFunc) {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n  /**\n   * @param {?} type\n   * @param {?} lcProperty\n   * @return {?}\n   */\n  hasLifecycleHook(type, lcProperty) {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n  /**\n   * @param {?} name\n   * @return {?}\n   */\n  getter(name) {\n    return this.reflectionCapabilities.getter(name);\n  }\n  /**\n   * @param {?} name\n   * @return {?}\n   */\n  setter(name) {\n    return this.reflectionCapabilities.setter(name);\n  }\n  /**\n   * @param {?} name\n   * @return {?}\n   */\n  method(name) {\n    return this.reflectionCapabilities.method(name);\n  }\n  /**\n   * @param {?} type\n   * @return {?}\n   */\n  importUri(type) {\n    return this.reflectionCapabilities.importUri(type);\n  }\n  /**\n   * @param {?} type\n   * @return {?}\n   */\n  resourceUri(type) {\n    return this.reflectionCapabilities.resourceUri(type);\n  }\n  /**\n   * @param {?} name\n   * @param {?} moduleUrl\n   * @param {?} members\n   * @param {?} runtime\n   * @return {?}\n   */\n  resolveIdentifier(name, moduleUrl, members, runtime) {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n  /**\n   * @param {?} identifier\n   * @param {?} name\n   * @return {?}\n   */\n  resolveEnum(identifier, name) {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nconst reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nclass ReflectiveDependency {\n  /**\n   * @param {?} key\n   * @param {?} optional\n   * @param {?} visibility\n   */\n  constructor(key, optional, visibility) {\n    this.key = key;\n    this.optional = optional;\n    this.visibility = visibility;\n  }\n  /**\n   * @param {?} key\n   * @return {?}\n   */\n  static fromKey(key) {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\nconst _EMPTY_LIST = [];\nclass ResolvedReflectiveProvider_ {\n  /**\n   * @param {?} key\n   * @param {?} resolvedFactories\n   * @param {?} multiProvider\n   */\n  constructor(key, resolvedFactories, multiProvider) {\n    this.key = key;\n    this.resolvedFactories = resolvedFactories;\n    this.multiProvider = multiProvider;\n  }\n  /**\n   * @return {?}\n   */\n  get resolvedFactory() {\n    return this.resolvedFactories[0];\n  }\n}\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nclass ResolvedReflectiveFactory {\n  /**\n   * @param {?} factory\n   * @param {?} dependencies\n   */\n  constructor(factory, dependencies) {\n    this.factory = factory;\n    this.dependencies = dependencies;\n  }\n}\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n  let /** @type {?} */factoryFn;\n  let /** @type {?} */resolvedDeps;\n  if (provider.useClass) {\n    const /** @type {?} */useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = aliasInstance => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n  return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n  const /** @type {?} */normalized = _normalizeProviders(providers, []);\n  const /** @type {?} */resolved = normalized.map(resolveReflectiveProvider);\n  const /** @type {?} */resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n  for (let /** @type {?} */i = 0; i < providers.length; i++) {\n    const /** @type {?} */provider = providers[i];\n    const /** @type {?} */existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let /** @type {?} */j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let /** @type {?} */resolvedProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({\n        provide: b,\n        useClass: b\n      });\n    } else if (b && typeof b == 'object' && b.provide !== undefined) {\n      res.push( /** @type {?} */b);\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n  return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const /** @type {?} */params = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n  const /** @type {?} */params = reflector.parameters(typeOrFunc);\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n  let /** @type {?} */token = null;\n  let /** @type {?} */optional = false;\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata.token, optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n  let /** @type {?} */visibility = null;\n  for (let /** @type {?} */i = 0; i < metadata.length; ++i) {\n    const /** @type {?} */paramMetadata = metadata[i];\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata.token;\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n  token = resolveForwardRef(token);\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nconst UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * \\@stable\n * @abstract\n */\nclass ReflectiveInjector {\n  /**\n   * Turns an array of provider definitions into an array of resolved providers.\n   *\n   * A resolution is a process of flattening multiple nested arrays and converting individual\n   * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n   *\n   * ```typescript\n   * \\@Injectable()\n   * class Engine {\n   * }\n   *\n   * \\@Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n   *\n   * expect(providers.length).toEqual(2);\n   *\n   * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n   * expect(providers[0].key.displayName).toBe(\"Car\");\n   * expect(providers[0].dependencies.length).toEqual(1);\n   * expect(providers[0].factory).toBeDefined();\n   *\n   * expect(providers[1].key.displayName).toBe(\"Engine\");\n   * });\n   * ```\n   *\n   * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n   * @param {?} providers\n   * @return {?}\n   */\n  static resolve(providers) {\n    return resolveReflectiveProviders(providers);\n  }\n  /**\n   * Resolves an array of providers and creates an injector from those providers.\n   *\n   * The passed-in providers can be an array of `Type`, {\\@link Provider},\n   * or a recursive array of more providers.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n   *\n   * ```typescript\n   * \\@Injectable()\n   * class Engine {\n   * }\n   *\n   * \\@Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   *\n   * This function is slower than the corresponding `fromResolvedProviders`\n   * because it needs to resolve the passed-in providers first.\n   * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n   * @param {?} providers\n   * @param {?=} parent\n   * @return {?}\n   */\n  static resolveAndCreate(providers, parent) {\n    const /** @type {?} */ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n  /**\n   * Creates an injector from previously resolved providers.\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n   *\n   * ```typescript\n   * \\@Injectable()\n   * class Engine {\n   * }\n   *\n   * \\@Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, Engine]);\n   * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   * \\@experimental\n   * @param {?} providers\n   * @param {?=} parent\n   * @return {?}\n   */\n  static fromResolvedProviders(providers, parent) {\n    return new ReflectiveInjector_(providers, parent);\n  }\n  /**\n   * Parent of this injector.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n   *\n   * ```typescript\n   * var parent = ReflectiveInjector.resolveAndCreate([]);\n   * var child = parent.resolveAndCreateChild([]);\n   * expect(child.parent).toBe(parent);\n   * ```\n   * @abstract\n   * @return {?}\n   */\n  parent() {}\n  /**\n   * Resolves an array of providers and creates a child injector from those providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * The passed-in providers can be an array of `Type`, {\\@link Provider},\n   * or a recursive array of more providers.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n   * var child = parent.resolveAndCreateChild([ChildProvider]);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   *\n   * This function is slower than the corresponding `createChildFromResolved`\n   * because it needs to resolve the passed-in providers first.\n   * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#createChildFromResolved}.\n   * @abstract\n   * @param {?} providers\n   * @return {?}\n   */\n  resolveAndCreateChild(providers) {}\n  /**\n   * Creates a child injector from previously resolved providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n   * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n   *\n   * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n   * var child = parent.createChildFromResolved(childProviders);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   * @abstract\n   * @param {?} providers\n   * @return {?}\n   */\n  createChildFromResolved(providers) {}\n  /**\n   * Resolves a provider and instantiates an object in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n   *\n   * ```typescript\n   * \\@Injectable()\n   * class Engine {\n   * }\n   *\n   * \\@Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   *\n   * var car = injector.resolveAndInstantiate(Car);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n   * ```\n   * @abstract\n   * @param {?} provider\n   * @return {?}\n   */\n  resolveAndInstantiate(provider) {}\n  /**\n   * Instantiates an object using a resolved provider in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n   *\n   * ```typescript\n   * \\@Injectable()\n   * class Engine {\n   * }\n   *\n   * \\@Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   * var carProvider = ReflectiveInjector.resolve([Car])[0];\n   * var car = injector.instantiateResolved(carProvider);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n   * ```\n   * @abstract\n   * @param {?} provider\n   * @return {?}\n   */\n  instantiateResolved(provider) {}\n  /**\n   * @abstract\n   * @param {?} token\n   * @param {?=} notFoundValue\n   * @return {?}\n   */\n  get(token, notFoundValue) {}\n}\nclass ReflectiveInjector_ {\n  /**\n   * Private\n   * @param {?} _providers\n   * @param {?=} _parent\n   */\n  constructor(_providers, _parent) {\n    /**\n     * \\@internal\n     */\n    this._constructionCounter = 0;\n    this._providers = _providers;\n    this._parent = _parent || null;\n    const len = _providers.length;\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n    for (let i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n  /**\n   * @param {?} token\n   * @param {?=} notFoundValue\n   * @return {?}\n   */\n  get(token, notFoundValue = THROW_IF_NOT_FOUND) {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n  /**\n   * @return {?}\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * @param {?} providers\n   * @return {?}\n   */\n  resolveAndCreateChild(providers) {\n    const /** @type {?} */ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n  /**\n   * @param {?} providers\n   * @return {?}\n   */\n  createChildFromResolved(providers) {\n    const /** @type {?} */inj = new ReflectiveInjector_(providers);\n    inj._parent = this;\n    return inj;\n  }\n  /**\n   * @param {?} provider\n   * @return {?}\n   */\n  resolveAndInstantiate(provider) {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n  /**\n   * @param {?} provider\n   * @return {?}\n   */\n  instantiateResolved(provider) {\n    return this._instantiateProvider(provider);\n  }\n  /**\n   * @param {?} index\n   * @return {?}\n   */\n  getProviderAtIndex(index) {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n  /**\n   * \\@internal\n   * @param {?} provider\n   * @return {?}\n   */\n  _new(provider) {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n  /**\n   * @return {?}\n   */\n  _getMaxNumberOfObjects() {\n    return this.objs.length;\n  }\n  /**\n   * @param {?} provider\n   * @return {?}\n   */\n  _instantiateProvider(provider) {\n    if (provider.multiProvider) {\n      const /** @type {?} */res = new Array(provider.resolvedFactories.length);\n      for (let /** @type {?} */i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n  /**\n   * @param {?} provider\n   * @param {?} ResolvedReflectiveFactory\n   * @return {?}\n   */\n  _instantiate(provider, ResolvedReflectiveFactory$$1) {\n    const /** @type {?} */factory = ResolvedReflectiveFactory$$1.factory;\n    let /** @type {?} */deps;\n    try {\n      deps = ResolvedReflectiveFactory$$1.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch (e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n    let /** @type {?} */obj;\n    try {\n      obj = factory(...deps);\n    } catch (e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n    return obj;\n  }\n  /**\n   * @param {?} dep\n   * @return {?}\n   */\n  _getByReflectiveDependency(dep) {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n  /**\n   * @param {?} key\n   * @param {?} visibility\n   * @param {?} notFoundValue\n   * @return {?}\n   */\n  _getByKey(key, visibility, notFoundValue) {\n    if (key === INJECTOR_KEY) {\n      return this;\n    }\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n  /**\n   * @param {?} keyId\n   * @return {?}\n   */\n  _getObjByKeyId(keyId) {\n    for (let /** @type {?} */i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n        return this.objs[i];\n      }\n    }\n    return UNDEFINED;\n  }\n  /**\n   * \\@internal\n   * @param {?} key\n   * @param {?} notFoundValue\n   * @return {?}\n   */\n  _throwOrNull(key, notFoundValue) {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n  /**\n   * \\@internal\n   * @param {?} key\n   * @param {?} notFoundValue\n   * @return {?}\n   */\n  _getByKeySelf(key, notFoundValue) {\n    const /** @type {?} */obj = this._getObjByKeyId(key.id);\n    return obj !== UNDEFINED ? obj : this._throwOrNull(key, notFoundValue);\n  }\n  /**\n   * \\@internal\n   * @param {?} key\n   * @param {?} notFoundValue\n   * @param {?} visibility\n   * @return {?}\n   */\n  _getByKeyDefault(key, notFoundValue, visibility) {\n    let /** @type {?} */inj;\n    if (visibility instanceof SkipSelf) {\n      inj = this._parent;\n    } else {\n      inj = this;\n    }\n    while (inj instanceof ReflectiveInjector_) {\n      const /** @type {?} */inj_ = inj;\n      const /** @type {?} */obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_._parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  get displayName() {\n    const /** @type {?} */providers = _mapProviders(this, b => ' \"' + b.key.displayName + '\" ').join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n  /**\n   * @return {?}\n   */\n  toString() {\n    return this.displayName;\n  }\n}\nconst INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n  const /** @type {?} */res = new Array(injector._providers.length);\n  for (let /** @type {?} */i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n  return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nconst APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nclass ApplicationInitStatus {\n  /**\n   * @param {?} appInits\n   */\n  constructor(appInits) {\n    this.appInits = appInits;\n    this.initialized = false;\n    this._done = false;\n    this._donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n  /**\n   * \\@internal\n   * @return {?}\n   */\n  runInitializers() {\n    if (this.initialized) {\n      return;\n    }\n    const /** @type {?} */asyncInitPromises = [];\n    const /** @type {?} */complete = () => {\n      this._done = true;\n      this.resolve();\n    };\n    if (this.appInits) {\n      for (let /** @type {?} */i = 0; i < this.appInits.length; i++) {\n        const /** @type {?} */initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n    Promise.all(asyncInitPromises).then(() => {\n      complete();\n    }).catch(e => {\n      this.reject(e);\n    });\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n  /**\n   * @return {?}\n   */\n  get done() {\n    return this._done;\n  }\n  /**\n   * @return {?}\n   */\n  get donePromise() {\n    return this._donePromise;\n  }\n}\nApplicationInitStatus.decorators = [{\n  type: Injectable\n}];\n/**\n * @nocollapse\n */\nApplicationInitStatus.ctorParameters = () => [{\n  type: Array,\n  decorators: [{\n    type: Inject,\n    args: [APP_INITIALIZER]\n  }, {\n    type: Optional\n  }]\n}];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nconst APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nconst APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: []\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nconst PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nconst PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nconst APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nconst PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass Console {\n  /**\n   * @param {?} message\n   * @return {?}\n   */\n  log(message) {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n  /**\n   * @param {?} message\n   * @return {?}\n   */\n  warn(message) {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\n}\nConsole.decorators = [{\n  type: Injectable\n}];\n/**\n * @nocollapse\n */\nConsole.ctorParameters = () => [];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nclass ModuleWithComponentFactories {\n  /**\n   * @param {?} ngModuleFactory\n   * @param {?} componentFactories\n   */\n  constructor(ngModuleFactory, componentFactories) {\n    this.ngModuleFactory = ngModuleFactory;\n    this.componentFactories = componentFactories;\n  }\n}\n/**\n * @return {?}\n */\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nclass Compiler {\n  /**\n   * Compiles the given NgModule and all of its components. All templates of the components listed\n   * in `entryComponents` have to be inlined.\n   * @template T\n   * @param {?} moduleType\n   * @return {?}\n   */\n  compileModuleSync(moduleType) {\n    throw _throwError();\n  }\n  /**\n   * Compiles the given NgModule and all of its components\n   * @template T\n   * @param {?} moduleType\n   * @return {?}\n   */\n  compileModuleAsync(moduleType) {\n    throw _throwError();\n  }\n  /**\n   * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n   * @template T\n   * @param {?} moduleType\n   * @return {?}\n   */\n  compileModuleAndAllComponentsSync(moduleType) {\n    throw _throwError();\n  }\n  /**\n   * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n   * @template T\n   * @param {?} moduleType\n   * @return {?}\n   */\n  compileModuleAndAllComponentsAsync(moduleType) {\n    throw _throwError();\n  }\n  /**\n   * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n   * the template of the given component.\n   * This is used by the `upgrade` library to compile the appropriate transclude content\n   * in the AngularJS wrapper component.\n   *\n   * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n   * @param {?} component\n   * @return {?}\n   */\n  getNgContentSelectors(component) {\n    throw _throwError();\n  }\n  /**\n   * Clears all caches.\n   * @return {?}\n   */\n  clearCache() {}\n  /**\n   * Clears the cache for the given component/ngModule.\n   * @param {?} type\n   * @return {?}\n   */\n  clearCacheFor(type) {}\n}\nCompiler.decorators = [{\n  type: Injectable\n}];\n/**\n * @nocollapse\n */\nCompiler.ctorParameters = () => [];\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nconst COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nclass CompilerFactory {\n  /**\n   * @abstract\n   * @param {?=} options\n   * @return {?}\n   */\n  createCompiler(options) {}\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nclass ComponentRef {\n  /**\n   * Location of the Host Element of this Component Instance.\n   * @abstract\n   * @return {?}\n   */\n  location() {}\n  /**\n   * The injector on which the component instance exists.\n   * @abstract\n   * @return {?}\n   */\n  injector() {}\n  /**\n   * The instance of the Component.\n   * @abstract\n   * @return {?}\n   */\n  instance() {}\n  /**\n   * The {\\@link ViewRef} of the Host View of this Component instance.\n   * @abstract\n   * @return {?}\n   */\n  hostView() {}\n  /**\n   * The {\\@link ChangeDetectorRef} of the Component instance.\n   * @abstract\n   * @return {?}\n   */\n  changeDetectorRef() {}\n  /**\n   * The component type.\n   * @abstract\n   * @return {?}\n   */\n  componentType() {}\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   * @abstract\n   * @return {?}\n   */\n  destroy() {}\n  /**\n   * Allows to register a callback that will be called when the component is destroyed.\n   * @abstract\n   * @param {?} callback\n   * @return {?}\n   */\n  onDestroy(callback) {}\n}\n/**\n * \\@stable\n * @abstract\n */\nclass ComponentFactory {\n  /**\n   * @abstract\n   * @return {?}\n   */\n  selector() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  componentType() {}\n  /**\n   * selector for all <ng-content> elements in the component.\n   * @abstract\n   * @return {?}\n   */\n  ngContentSelectors() {}\n  /**\n   * the inputs of the component.\n   * @abstract\n   * @return {?}\n   */\n  inputs() {}\n  /**\n   * the outputs of the component.\n   * @abstract\n   * @return {?}\n   */\n  outputs() {}\n  /**\n   * Creates a new component.\n   * @abstract\n   * @param {?} injector\n   * @param {?=} projectableNodes\n   * @param {?=} rootSelectorOrNode\n   * @param {?=} ngModule\n   * @return {?}\n   */\n  create(injector, projectableNodes, rootSelectorOrNode, ngModule) {}\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n  const /** @type {?} */error = Error(`No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  error[ERROR_COMPONENT] = component;\n  return error;\n}\nconst ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nclass _NullComponentFactoryResolver {\n  /**\n   * @template T\n   * @param {?} component\n   * @return {?}\n   */\n  resolveComponentFactory(component) {\n    throw noComponentFactoryError(component);\n  }\n}\n/**\n * \\@stable\n * @abstract\n */\nclass ComponentFactoryResolver {\n  /**\n   * @abstract\n   * @template T\n   * @param {?} component\n   * @return {?}\n   */\n  resolveComponentFactory(component) {}\n}\nComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\nclass CodegenComponentFactoryResolver {\n  /**\n   * @param {?} factories\n   * @param {?} _parent\n   * @param {?} _ngModule\n   */\n  constructor(factories, _parent, _ngModule) {\n    this._parent = _parent;\n    this._ngModule = _ngModule;\n    this._factories = new Map();\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n  /**\n   * @template T\n   * @param {?} component\n   * @return {?}\n   */\n  resolveComponentFactory(component) {\n    let /** @type {?} */factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\nclass ComponentFactoryBoundToModule extends ComponentFactory {\n  /**\n   * @param {?} factory\n   * @param {?} ngModule\n   */\n  constructor(factory, ngModule) {\n    super();\n    this.factory = factory;\n    this.ngModule = ngModule;\n  }\n  /**\n   * @return {?}\n   */\n  get selector() {\n    return this.factory.selector;\n  }\n  /**\n   * @return {?}\n   */\n  get componentType() {\n    return this.factory.componentType;\n  }\n  /**\n   * @return {?}\n   */\n  get ngContentSelectors() {\n    return this.factory.ngContentSelectors;\n  }\n  /**\n   * @return {?}\n   */\n  get inputs() {\n    return this.factory.inputs;\n  }\n  /**\n   * @return {?}\n   */\n  get outputs() {\n    return this.factory.outputs;\n  }\n  /**\n   * @param {?} injector\n   * @param {?=} projectableNodes\n   * @param {?=} rootSelectorOrNode\n   * @param {?=} ngModule\n   * @return {?}\n   */\n  create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n    return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nclass NgModuleRef {\n  /**\n   * The injector that contains all of the providers of the NgModule.\n   * @abstract\n   * @return {?}\n   */\n  injector() {}\n  /**\n   * The ComponentFactoryResolver to get hold of the ComponentFactories\n   * declared in the `entryComponents` property of the module.\n   * @abstract\n   * @return {?}\n   */\n  componentFactoryResolver() {}\n  /**\n   * The NgModule instance.\n   * @abstract\n   * @return {?}\n   */\n  instance() {}\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   * @abstract\n   * @return {?}\n   */\n  destroy() {}\n  /**\n   * Allows to register a callback that will be called when the module is destroyed.\n   * @abstract\n   * @param {?} callback\n   * @return {?}\n   */\n  onDestroy(callback) {}\n}\n/**\n * \\@experimental\n * @abstract\n */\nclass NgModuleFactory {\n  /**\n   * @abstract\n   * @return {?}\n   */\n  moduleType() {}\n  /**\n   * @abstract\n   * @param {?} parentInjector\n   * @return {?}\n   */\n  create(parentInjector) {}\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet trace;\nlet events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n  const /** @type {?} */wtf = _global /** TODO #9100 */['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope$1(signature, flags = null) {\n  return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n  return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n  trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nconst wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n  return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nconst wtfCreateScope = wtfEnabled ? createScope$1 : (signature, flags) => noopScope;\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nconst wtfLeave = wtfEnabled ? leave : (s, r) => r;\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nconst wtfStartTimeRange = wtfEnabled ? startTimeRange : (rangeType, action) => null;\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nconst wtfEndTimeRange = wtfEnabled ? endTimeRange : r => null;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nclass EventEmitter extends Subject {\n  /**\n   * Creates an instance of {\\@link EventEmitter}, which depending on `isAsync`,\n   * delivers events synchronously or asynchronously.\n   *\n   * @param {?=} isAsync By default, events are delivered synchronously (default value: `false`).\n   * Set to `true` for asynchronous event delivery.\n   */\n  constructor(isAsync = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n  /**\n   * @param {?=} value\n   * @return {?}\n   */\n  emit(value) {\n    super.next(value);\n  }\n  /**\n   * @param {?=} generatorOrNext\n   * @param {?=} error\n   * @param {?=} complete\n   * @return {?}\n   */\n  subscribe(generatorOrNext, error, complete) {\n    let /** @type {?} */schedulerFn;\n    let /** @type {?} */errorFn = err => null;\n    let /** @type {?} */completeFn = () => null;\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? value => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : value => {\n        generatorOrNext.next(value);\n      };\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? err => {\n          setTimeout(() => generatorOrNext.error(err));\n        } : err => {\n          generatorOrNext.error(err);\n        };\n      }\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => {\n          setTimeout(() => generatorOrNext.complete());\n        } : () => {\n          generatorOrNext.complete();\n        };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? value => {\n        setTimeout(() => generatorOrNext(value));\n      } : value => {\n        generatorOrNext(value);\n      };\n      if (error) {\n        errorFn = this.__isAsync ? err => {\n          setTimeout(() => error(err));\n        } : err => {\n          error(err);\n        };\n      }\n      if (complete) {\n        completeFn = this.__isAsync ? () => {\n          setTimeout(() => complete());\n        } : () => {\n          complete();\n        };\n      }\n    }\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nclass NgZone {\n  /**\n   * @param {?} __0\n   */\n  constructor({\n    enableLongStackTrace = false\n  }) {\n    this.hasPendingMicrotasks = false;\n    this.hasPendingMacrotasks = false;\n    /**\n     * Whether there are no outstanding microtasks or macrotasks.\n     */\n    this.isStable = true;\n    /**\n     * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n     */\n    this.onUnstable = new EventEmitter(false);\n    /**\n     * Notifies when there is no more microtasks enqueue in the current VM Turn.\n     * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n     * For this reason this event can fire multiple times per VM Turn.\n     */\n    this.onMicrotaskEmpty = new EventEmitter(false);\n    /**\n     * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n     * implies we are about to relinquish VM turn.\n     * This event gets called just once.\n     */\n    this.onStable = new EventEmitter(false);\n    /**\n     * Notifies that an error has been delivered.\n     */\n    this.onError = new EventEmitter(false);\n    if (typeof Zone == 'undefined') {\n      throw new Error('Angular requires Zone.js prolyfill.');\n    }\n    Zone.assertZonePatched();\n    const self = this;\n    self._nesting = 0;\n    self._outer = self._inner = Zone.current;\n    if (Zone['wtfZoneSpec']) {\n      self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n    }\n    if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n    }\n    forkInnerZoneWithAngularBehavior(self);\n  }\n  /**\n   * @return {?}\n   */\n  static isInAngularZone() {\n    return Zone.current.get('isAngularZone') === true;\n  }\n  /**\n   * @return {?}\n   */\n  static assertInAngularZone() {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n  /**\n   * @return {?}\n   */\n  static assertNotInAngularZone() {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n  /**\n   * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n   * the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   * @param {?} fn\n   * @return {?}\n   */\n  run(fn) {\n    return this._inner.run(fn);\n  }\n  /**\n   * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n   * rethrown.\n   * @param {?} fn\n   * @return {?}\n   */\n  runGuarded(fn) {\n    return this._inner.runGuarded(fn);\n  }\n  /**\n   * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n   * the function.\n   *\n   * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n   * work that\n   * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * outside of the Angular zone.\n   *\n   * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n   * @param {?} fn\n   * @return {?}\n   */\n  runOutsideAngular(fn) {\n    return this._outer.run(fn);\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: /** @type {?} */{\n      'isAngularZone': true\n    },\n    onInvokeTask: (delegate, current, target, task, applyThis, applyArgs) => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n    onInvoke: (delegate, current, target, callback, applyThis, applyArgs, source) => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n    onHasTask: (delegate, current, target, hasTaskState) => {\n      delegate.hasTask(target, hasTaskState);\n      if (current === target) {\n        // We are only interested in hasTask events which originate from our zone\n        // (A child hasTask event is not interesting to us)\n        if (hasTaskState.change == 'microTask') {\n          zone.hasPendingMicrotasks = hasTaskState.microTask;\n          checkStable(zone);\n        } else if (hasTaskState.change == 'macroTask') {\n          zone.hasPendingMacrotasks = hasTaskState.macroTask;\n        }\n      }\n    },\n    onHandleError: (delegate, current, target, error) => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n  zone._nesting--;\n  checkStable(zone);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nclass Testability {\n  /**\n   * @param {?} _ngZone\n   */\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    /**\n     * \\@internal\n     */\n    this._pendingCount = 0;\n    /**\n     * \\@internal\n     */\n    this._isZoneStable = true;\n    /**\n     * Whether any work was done since the last 'whenStable' callback. This is\n     * useful to detect if this could have potentially destabilized another\n     * component while it is stabilizing.\n     * \\@internal\n     */\n    this._didWork = false;\n    /**\n     * \\@internal\n     */\n    this._callbacks = [];\n    this._watchAngularEvents();\n  }\n  /**\n   * \\@internal\n   * @return {?}\n   */\n  _watchAngularEvents() {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n  /**\n   * @return {?}\n   */\n  increasePendingRequestCount() {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n  /**\n   * @return {?}\n   */\n  decreasePendingRequestCount() {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n  /**\n   * @return {?}\n   */\n  isStable() {\n    return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n  /**\n   * \\@internal\n   * @return {?}\n   */\n  _runCallbacksIfReady() {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          this._callbacks.pop()(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Not Ready\n      this._didWork = true;\n    }\n  }\n  /**\n   * @param {?} callback\n   * @return {?}\n   */\n  whenStable(callback) {\n    this._callbacks.push(callback);\n    this._runCallbacksIfReady();\n  }\n  /**\n   * @return {?}\n   */\n  getPendingRequestCount() {\n    return this._pendingCount;\n  }\n  /**\n   * @deprecated use findProviders\n   * @param {?} using\n   * @param {?} provider\n   * @param {?} exactMatch\n   * @return {?}\n   */\n  findBindings(using, provider, exactMatch) {\n    // TODO(juliemr): implement.\n    return [];\n  }\n  /**\n   * @param {?} using\n   * @param {?} provider\n   * @param {?} exactMatch\n   * @return {?}\n   */\n  findProviders(using, provider, exactMatch) {\n    // TODO(juliemr): implement.\n    return [];\n  }\n}\nTestability.decorators = [{\n  type: Injectable\n}];\n/**\n * @nocollapse\n */\nTestability.ctorParameters = () => [{\n  type: NgZone\n}];\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nclass TestabilityRegistry {\n  constructor() {\n    /**\n     * \\@internal\n     */\n    this._applications = new Map();\n    _testabilityGetter.addToWindow(this);\n  }\n  /**\n   * @param {?} token\n   * @param {?} testability\n   * @return {?}\n   */\n  registerApplication(token, testability) {\n    this._applications.set(token, testability);\n  }\n  /**\n   * @param {?} elem\n   * @return {?}\n   */\n  getTestability(elem) {\n    return this._applications.get(elem) || null;\n  }\n  /**\n   * @return {?}\n   */\n  getAllTestabilities() {\n    return Array.from(this._applications.values());\n  }\n  /**\n   * @return {?}\n   */\n  getAllRootElements() {\n    return Array.from(this._applications.keys());\n  }\n  /**\n   * @param {?} elem\n   * @param {?=} findInAncestors\n   * @return {?}\n   */\n  findTestabilityInTree(elem, findInAncestors = true) {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\n}\nTestabilityRegistry.decorators = [{\n  type: Injectable\n}];\n/**\n * @nocollapse\n */\nTestabilityRegistry.ctorParameters = () => [];\nclass _NoopGetTestability {\n  /**\n   * @param {?} registry\n   * @return {?}\n   */\n  addToWindow(registry) {}\n  /**\n   * @param {?} registry\n   * @param {?} elem\n   * @param {?} findInAncestors\n   * @return {?}\n   */\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    return null;\n  }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n  _testabilityGetter = getter;\n}\nlet _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet _devMode = true;\nlet _runModeLocked = false;\nlet _platform;\nconst ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n  _runModeLocked = true;\n  return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nclass NgProbeToken {\n  /**\n   * @param {?} name\n   * @param {?} token\n   */\n  constructor(name, token) {\n    this.name = name;\n    this.token = token;\n  }\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n  if (_platform && !_platform.destroyed && !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const /** @type {?} */inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach(init => init());\n  return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers = []) {\n  const /** @type {?} */marker = new InjectionToken(`Platform: ${name}`);\n  return (extraProviders = []) => {\n    let /** @type {?} */platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(providers.concat(extraProviders).concat({\n          provide: marker,\n          useValue: true\n        }));\n      } else {\n        createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({\n          provide: marker,\n          useValue: true\n        })));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n  const /** @type {?} */platform = getPlatform();\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n  }\n  return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n * @abstract\n */\nclass PlatformRef {\n  /**\n   * Creates an instance of an `\\@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * \\@NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {platformBrowser} from '\\@angular/platform-browser';\n   *\n   * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   *\n   * \\@experimental APIs related to application bootstrap are currently under review.\n   * @abstract\n   * @template M\n   * @param {?} moduleFactory\n   * @return {?}\n   */\n  bootstrapModuleFactory(moduleFactory) {}\n  /**\n   * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * \\@NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   * \\@stable\n   * @abstract\n   * @template M\n   * @param {?} moduleType\n   * @param {?=} compilerOptions\n   * @return {?}\n   */\n  bootstrapModule(moduleType, compilerOptions) {}\n  /**\n   * Register a listener to be called when the platform is disposed.\n   * @abstract\n   * @param {?} callback\n   * @return {?}\n   */\n  onDestroy(callback) {}\n  /**\n   * Retrieve the platform {\\@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   * @abstract\n   * @return {?}\n   */\n  injector() {}\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   * @abstract\n   * @return {?}\n   */\n  destroy() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  destroyed() {}\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n  try {\n    const /** @type {?} */result = callback();\n    if (isPromise(result)) {\n      return result.catch(e => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n    return result;\n  } catch (e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nclass PlatformRef_ extends PlatformRef {\n  /**\n   * @param {?} _injector\n   */\n  constructor(_injector) {\n    super();\n    this._injector = _injector;\n    this._modules = [];\n    this._destroyListeners = [];\n    this._destroyed = false;\n  }\n  /**\n   * @param {?} callback\n   * @return {?}\n   */\n  onDestroy(callback) {\n    this._destroyListeners.push(callback);\n  }\n  /**\n   * @return {?}\n   */\n  get injector() {\n    return this._injector;\n  }\n  /**\n   * @return {?}\n   */\n  get destroyed() {\n    return this._destroyed;\n  }\n  /**\n   * @return {?}\n   */\n  destroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n  /**\n   * @template M\n   * @param {?} moduleFactory\n   * @return {?}\n   */\n  bootstrapModuleFactory(moduleFactory) {\n    return this._bootstrapModuleFactoryWithZone(moduleFactory);\n  }\n  /**\n   * @template M\n   * @param {?} moduleFactory\n   * @param {?=} ngZone\n   * @return {?}\n   */\n  _bootstrapModuleFactoryWithZone(moduleFactory, ngZone) {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    if (!ngZone) ngZone = new NgZone({\n      enableLongStackTrace: isDevMode()\n    });\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const /** @type {?} */ngZoneInjector = ReflectiveInjector.resolveAndCreate([{\n        provide: NgZone,\n        useValue: ngZone\n      }], this.injector);\n      const /** @type {?} */moduleRef = moduleFactory.create(ngZoneInjector);\n      const /** @type {?} */exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef)); /** @type {?} */\n      ngZone.runOutsideAngular(() => ngZone.onError.subscribe({\n        next: error => {\n          exceptionHandler.handleError(error);\n        }\n      }));\n      return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ngZone, () => {\n        const /** @type {?} */initStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n  /**\n   * @template M\n   * @param {?} moduleType\n   * @param {?=} compilerOptions\n   * @return {?}\n   */\n  bootstrapModule(moduleType, compilerOptions = []) {\n    return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n  }\n  /**\n   * @template M\n   * @param {?} moduleType\n   * @param {?=} compilerOptions\n   * @param {?=} ngZone\n   * @return {?}\n   */\n  _bootstrapModuleWithZone(moduleType, compilerOptions = [], ngZone) {\n    const /** @type {?} */compilerFactory = this.injector.get(CompilerFactory);\n    const /** @type {?} */compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n    return compiler.compileModuleAsync(moduleType).then(moduleFactory => this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone));\n  }\n  /**\n   * @param {?} moduleRef\n   * @return {?}\n   */\n  _moduleDoBootstrap(moduleRef) {\n    const /** @type {?} */appRef = moduleRef.injector.get(ApplicationRef);\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(`The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` + `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\n}\nPlatformRef_.decorators = [{\n  type: Injectable\n}];\n/**\n * @nocollapse\n */\nPlatformRef_.ctorParameters = () => [{\n  type: Injector\n}];\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n * @abstract\n */\nclass ApplicationRef {\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the [componentType]'s\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * [componentType]'s selector.\n   *\n   * ### Example\n   * {\\@example core/ts/platform/platform.ts region='longform'}\n   * @abstract\n   * @template C\n   * @param {?} componentFactory\n   * @param {?=} rootSelectorOrNode\n   * @return {?}\n   */\n  bootstrap(componentFactory, rootSelectorOrNode) {}\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   * @abstract\n   * @return {?}\n   */\n  tick() {}\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   * @abstract\n   * @return {?}\n   */\n  componentTypes() {}\n  /**\n   * Get a list of components registered to this application.\n   * @abstract\n   * @return {?}\n   */\n  components() {}\n  /**\n   * Attaches a view so that it will be dirty checked.\n   * The view will be automatically detached when it is destroyed.\n   * This will throw if the view is already attached to a ViewContainer.\n   * @abstract\n   * @param {?} view\n   * @return {?}\n   */\n  attachView(view) {}\n  /**\n   * Detaches a view from dirty checking again.\n   * @abstract\n   * @param {?} view\n   * @return {?}\n   */\n  detachView(view) {}\n  /**\n   * Returns the number of attached views.\n   * @abstract\n   * @return {?}\n   */\n  viewCount() {}\n  /**\n   * Returns an Observable that indicates when the application is stable or unstable.\n   * @abstract\n   * @return {?}\n   */\n  isStable() {}\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nclass ApplicationRef_ extends ApplicationRef {\n  /**\n   * @param {?} _zone\n   * @param {?} _console\n   * @param {?} _injector\n   * @param {?} _exceptionHandler\n   * @param {?} _componentFactoryResolver\n   * @param {?} _initStatus\n   */\n  constructor(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n    super();\n    this._zone = _zone;\n    this._console = _console;\n    this._injector = _injector;\n    this._exceptionHandler = _exceptionHandler;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._initStatus = _initStatus;\n    this._bootstrapListeners = [];\n    this._rootComponents = [];\n    this._rootComponentTypes = [];\n    this._views = [];\n    this._runningTick = false;\n    this._enforceNoNewChanges = false;\n    this._stable = true;\n    this._enforceNoNewChanges = isDevMode();\n    this._zone.onMicrotaskEmpty.subscribe({\n      next: () => {\n        this._zone.run(() => {\n          this.tick();\n        });\n      }\n    });\n    const isCurrentlyStable = new Observable(observer => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n    const isStable = new Observable(observer => {\n      // Create the subscription to onStable outside the Angular Zone so that\n      // the callback is run outside the Angular Zone.\n      let stableSub;\n      this._zone.runOutsideAngular(() => {\n        stableSub = this._zone.onStable.subscribe(() => {\n          NgZone.assertNotInAngularZone();\n          // Check whether there are no pending macro/micro tasks in the next tick\n          // to allow for NgZone to update the state.\n          scheduleMicroTask(() => {\n            if (!this._stable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks) {\n              this._stable = true;\n              observer.next(true);\n            }\n          });\n        });\n      });\n      const unstableSub = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => {\n            observer.next(false);\n          });\n        }\n      });\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n    this._isStable = merge(isCurrentlyStable, share.call(isStable));\n  }\n  /**\n   * @param {?} viewRef\n   * @return {?}\n   */\n  attachView(viewRef) {\n    const /** @type {?} */view = viewRef;\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n  /**\n   * @param {?} viewRef\n   * @return {?}\n   */\n  detachView(viewRef) {\n    const /** @type {?} */view = viewRef;\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n  /**\n   * @template C\n   * @param {?} componentOrFactory\n   * @param {?=} rootSelectorOrNode\n   * @return {?}\n   */\n  bootstrap(componentOrFactory, rootSelectorOrNode) {\n    if (!this._initStatus.done) {\n      throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let /** @type {?} */componentFactory;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n    }\n    this._rootComponentTypes.push(componentFactory.componentType);\n    // Create a factory associated with the current module if it's not bound to some other\n    const /** @type {?} */ngModule = componentFactory instanceof ComponentFactoryBoundToModule ? null : this._injector.get(NgModuleRef);\n    const /** @type {?} */selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const /** @type {?} */compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n    compRef.onDestroy(() => {\n      this._unloadComponent(compRef);\n    });\n    const /** @type {?} */testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry).registerApplication(compRef.location.nativeElement, testability);\n    }\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(`Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n  /**\n   * @param {?} componentRef\n   * @return {?}\n   */\n  _loadComponent(componentRef) {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this._rootComponents.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const /** @type {?} */listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach(listener => listener(componentRef));\n  }\n  /**\n   * @param {?} componentRef\n   * @return {?}\n   */\n  _unloadComponent(componentRef) {\n    this.detachView(componentRef.hostView);\n    remove(this._rootComponents, componentRef);\n  }\n  /**\n   * @return {?}\n   */\n  tick() {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n    const /** @type {?} */scope = ApplicationRef_._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach(view => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach(view => view.checkNoChanges());\n      }\n    } catch (e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach(view => view.destroy());\n  }\n  /**\n   * @return {?}\n   */\n  get viewCount() {\n    return this._views.length;\n  }\n  /**\n   * @return {?}\n   */\n  get componentTypes() {\n    return this._rootComponentTypes;\n  }\n  /**\n   * @return {?}\n   */\n  get components() {\n    return this._rootComponents;\n  }\n  /**\n   * @return {?}\n   */\n  get isStable() {\n    return this._isStable;\n  }\n}\n/**\n * \\@internal\n */\nApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\nApplicationRef_.decorators = [{\n  type: Injectable\n}];\n/**\n * @nocollapse\n */\nApplicationRef_.ctorParameters = () => [{\n  type: NgZone\n}, {\n  type: Console\n}, {\n  type: Injector\n}, {\n  type: ErrorHandler\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: ApplicationInitStatus\n}];\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n  const /** @type {?} */index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nclass RenderComponentType {\n  /**\n   * @param {?} id\n   * @param {?} templateUrl\n   * @param {?} slotCount\n   * @param {?} encapsulation\n   * @param {?} styles\n   * @param {?} animations\n   */\n  constructor(id, templateUrl, slotCount, encapsulation, styles, animations) {\n    this.id = id;\n    this.templateUrl = templateUrl;\n    this.slotCount = slotCount;\n    this.encapsulation = encapsulation;\n    this.styles = styles;\n    this.animations = animations;\n  }\n}\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nclass RenderDebugInfo {\n  /**\n   * @abstract\n   * @return {?}\n   */\n  injector() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  component() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  providerTokens() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  references() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  context() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  source() {}\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nclass Renderer {\n  /**\n   * @abstract\n   * @param {?} selectorOrNode\n   * @param {?=} debugInfo\n   * @return {?}\n   */\n  selectRootElement(selectorOrNode, debugInfo) {}\n  /**\n   * @abstract\n   * @param {?} parentElement\n   * @param {?} name\n   * @param {?=} debugInfo\n   * @return {?}\n   */\n  createElement(parentElement, name, debugInfo) {}\n  /**\n   * @abstract\n   * @param {?} hostElement\n   * @return {?}\n   */\n  createViewRoot(hostElement) {}\n  /**\n   * @abstract\n   * @param {?} parentElement\n   * @param {?=} debugInfo\n   * @return {?}\n   */\n  createTemplateAnchor(parentElement, debugInfo) {}\n  /**\n   * @abstract\n   * @param {?} parentElement\n   * @param {?} value\n   * @param {?=} debugInfo\n   * @return {?}\n   */\n  createText(parentElement, value, debugInfo) {}\n  /**\n   * @abstract\n   * @param {?} parentElement\n   * @param {?} nodes\n   * @return {?}\n   */\n  projectNodes(parentElement, nodes) {}\n  /**\n   * @abstract\n   * @param {?} node\n   * @param {?} viewRootNodes\n   * @return {?}\n   */\n  attachViewAfter(node, viewRootNodes) {}\n  /**\n   * @abstract\n   * @param {?} viewRootNodes\n   * @return {?}\n   */\n  detachView(viewRootNodes) {}\n  /**\n   * @abstract\n   * @param {?} hostElement\n   * @param {?} viewAllNodes\n   * @return {?}\n   */\n  destroyView(hostElement, viewAllNodes) {}\n  /**\n   * @abstract\n   * @param {?} renderElement\n   * @param {?} name\n   * @param {?} callback\n   * @return {?}\n   */\n  listen(renderElement, name, callback) {}\n  /**\n   * @abstract\n   * @param {?} target\n   * @param {?} name\n   * @param {?} callback\n   * @return {?}\n   */\n  listenGlobal(target, name, callback) {}\n  /**\n   * @abstract\n   * @param {?} renderElement\n   * @param {?} propertyName\n   * @param {?} propertyValue\n   * @return {?}\n   */\n  setElementProperty(renderElement, propertyName, propertyValue) {}\n  /**\n   * @abstract\n   * @param {?} renderElement\n   * @param {?} attributeName\n   * @param {?} attributeValue\n   * @return {?}\n   */\n  setElementAttribute(renderElement, attributeName, attributeValue) {}\n  /**\n   * Used only in debug mode to serialize property changes to dom nodes as attributes.\n   * @abstract\n   * @param {?} renderElement\n   * @param {?} propertyName\n   * @param {?} propertyValue\n   * @return {?}\n   */\n  setBindingDebugInfo(renderElement, propertyName, propertyValue) {}\n  /**\n   * @abstract\n   * @param {?} renderElement\n   * @param {?} className\n   * @param {?} isAdd\n   * @return {?}\n   */\n  setElementClass(renderElement, className, isAdd) {}\n  /**\n   * @abstract\n   * @param {?} renderElement\n   * @param {?} styleName\n   * @param {?} styleValue\n   * @return {?}\n   */\n  setElementStyle(renderElement, styleName, styleValue) {}\n  /**\n   * @abstract\n   * @param {?} renderElement\n   * @param {?} methodName\n   * @param {?=} args\n   * @return {?}\n   */\n  invokeElementMethod(renderElement, methodName, args) {}\n  /**\n   * @abstract\n   * @param {?} renderNode\n   * @param {?} text\n   * @return {?}\n   */\n  setText(renderNode, text) {}\n  /**\n   * @abstract\n   * @param {?} element\n   * @param {?} startingStyles\n   * @param {?} keyframes\n   * @param {?} duration\n   * @param {?} delay\n   * @param {?} easing\n   * @param {?=} previousPlayers\n   * @return {?}\n   */\n  animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {}\n}\nconst Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nclass RootRenderer {\n  /**\n   * @abstract\n   * @param {?} componentType\n   * @return {?}\n   */\n  renderComponent(componentType) {}\n}\n/**\n * \\@experimental\n * @abstract\n */\nclass RendererFactory2 {\n  /**\n   * @abstract\n   * @param {?} hostElement\n   * @param {?} type\n   * @return {?}\n   */\n  createRenderer(hostElement, type) {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  begin() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  end() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  whenRenderingDone() {}\n}\nlet RendererStyleFlags2 = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nclass Renderer2 {\n  /**\n   * This field can be used to store arbitrary data on this renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   * @abstract\n   * @return {?}\n   */\n  data() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  destroy() {}\n  /**\n   * @abstract\n   * @param {?} name\n   * @param {?=} namespace\n   * @return {?}\n   */\n  createElement(name, namespace) {}\n  /**\n   * @abstract\n   * @param {?} value\n   * @return {?}\n   */\n  createComment(value) {}\n  /**\n   * @abstract\n   * @param {?} value\n   * @return {?}\n   */\n  createText(value) {}\n  /**\n   * @abstract\n   * @param {?} parent\n   * @param {?} newChild\n   * @return {?}\n   */\n  appendChild(parent, newChild) {}\n  /**\n   * @abstract\n   * @param {?} parent\n   * @param {?} newChild\n   * @param {?} refChild\n   * @return {?}\n   */\n  insertBefore(parent, newChild, refChild) {}\n  /**\n   * @abstract\n   * @param {?} parent\n   * @param {?} oldChild\n   * @return {?}\n   */\n  removeChild(parent, oldChild) {}\n  /**\n   * @abstract\n   * @param {?} selectorOrNode\n   * @return {?}\n   */\n  selectRootElement(selectorOrNode) {}\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   * @abstract\n   * @param {?} node\n   * @return {?}\n   */\n  parentNode(node) {}\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   * @abstract\n   * @param {?} node\n   * @return {?}\n   */\n  nextSibling(node) {}\n  /**\n   * @abstract\n   * @param {?} el\n   * @param {?} name\n   * @param {?} value\n   * @param {?=} namespace\n   * @return {?}\n   */\n  setAttribute(el, name, value, namespace) {}\n  /**\n   * @abstract\n   * @param {?} el\n   * @param {?} name\n   * @param {?=} namespace\n   * @return {?}\n   */\n  removeAttribute(el, name, namespace) {}\n  /**\n   * @abstract\n   * @param {?} el\n   * @param {?} name\n   * @return {?}\n   */\n  addClass(el, name) {}\n  /**\n   * @abstract\n   * @param {?} el\n   * @param {?} name\n   * @return {?}\n   */\n  removeClass(el, name) {}\n  /**\n   * @abstract\n   * @param {?} el\n   * @param {?} style\n   * @param {?} value\n   * @param {?=} flags\n   * @return {?}\n   */\n  setStyle(el, style, value, flags) {}\n  /**\n   * @abstract\n   * @param {?} el\n   * @param {?} style\n   * @param {?=} flags\n   * @return {?}\n   */\n  removeStyle(el, style, flags) {}\n  /**\n   * @abstract\n   * @param {?} el\n   * @param {?} name\n   * @param {?} value\n   * @return {?}\n   */\n  setProperty(el, name, value) {}\n  /**\n   * @abstract\n   * @param {?} node\n   * @param {?} value\n   * @return {?}\n   */\n  setValue(node, value) {}\n  /**\n   * @abstract\n   * @param {?} target\n   * @param {?} eventName\n   * @param {?} callback\n   * @return {?}\n   */\n  listen(target, eventName, callback) {}\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\nclass ElementRef {\n  /**\n   * @param {?} nativeElement\n   */\n  constructor(nativeElement) {\n    this.nativeElement = nativeElement;\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nclass NgModuleFactoryLoader {\n  /**\n   * @abstract\n   * @param {?} path\n   * @return {?}\n   */\n  load(path) {}\n}\nlet moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n  const /** @type {?} */existing = moduleFactories.get(id);\n  if (existing) {\n    throw new Error(`Duplicate module registered for ${id} - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n  }\n  moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n  const /** @type {?} */factory = moduleFactories.get(id);\n  if (!factory) throw new Error(`No module with ID ${id} loaded`);\n  return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nclass QueryList {\n  constructor() {\n    this._dirty = true;\n    this._results = [];\n    this._emitter = new EventEmitter();\n  }\n  /**\n   * @return {?}\n   */\n  get changes() {\n    return this._emitter;\n  }\n  /**\n   * @return {?}\n   */\n  get length() {\n    return this._results.length;\n  }\n  /**\n   * @return {?}\n   */\n  get first() {\n    return this._results[0];\n  }\n  /**\n   * @return {?}\n   */\n  get last() {\n    return this._results[this.length - 1];\n  }\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   * @template U\n   * @param {?} fn\n   * @return {?}\n   */\n  map(fn) {\n    return this._results.map(fn);\n  }\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   * @param {?} fn\n   * @return {?}\n   */\n  filter(fn) {\n    return this._results.filter(fn);\n  }\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   * @param {?} fn\n   * @return {?}\n   */\n  find(fn) {\n    return this._results.find(fn);\n  }\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   * @template U\n   * @param {?} fn\n   * @param {?} init\n   * @return {?}\n   */\n  reduce(fn, init) {\n    return this._results.reduce(fn, init);\n  }\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   * @param {?} fn\n   * @return {?}\n   */\n  forEach(fn) {\n    this._results.forEach(fn);\n  }\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   * @param {?} fn\n   * @return {?}\n   */\n  some(fn) {\n    return this._results.some(fn);\n  }\n  /**\n   * @return {?}\n   */\n  toArray() {\n    return this._results.slice();\n  }\n  /**\n   * @return {?}\n   */\n  [getSymbolIterator()]() {\n    return this._results[getSymbolIterator()]();\n  }\n  /**\n   * @return {?}\n   */\n  toString() {\n    return this._results.toString();\n  }\n  /**\n   * @param {?} res\n   * @return {?}\n   */\n  reset(res) {\n    this._results = flatten(res);\n    this._dirty = false;\n  }\n  /**\n   * @return {?}\n   */\n  notifyOnChanges() {\n    this._emitter.emit(this);\n  }\n  /**\n   * internal\n   * @return {?}\n   */\n  setDirty() {\n    this._dirty = true;\n  }\n  /**\n   * internal\n   * @return {?}\n   */\n  get dirty() {\n    return this._dirty;\n  }\n  /**\n   * internal\n   * @return {?}\n   */\n  destroy() {\n    this._emitter.complete();\n    this._emitter.unsubscribe();\n  }\n}\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n  return list.reduce((flat, item) => {\n    const /** @type {?} */flatItem = Array.isArray(item) ? flatten(item) : item;\n    return flat.concat(flatItem);\n  }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _SEPARATOR = '#';\nconst FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nclass SystemJsNgModuleLoaderConfig {}\nconst DEFAULT_CONFIG = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory'\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nclass SystemJsNgModuleLoader {\n  /**\n   * @param {?} _compiler\n   * @param {?=} config\n   */\n  constructor(_compiler, config) {\n    this._compiler = _compiler;\n    this._config = config || DEFAULT_CONFIG;\n  }\n  /**\n   * @param {?} path\n   * @return {?}\n   */\n  load(path) {\n    const /** @type {?} */offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n  /**\n   * @param {?} path\n   * @return {?}\n   */\n  loadAndCompile(path) {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n    return System.import(module).then(module => module[exportName]).then(type => checkNotEmpty(type, module, exportName)).then(type => this._compiler.compileModuleAsync(type));\n  }\n  /**\n   * @param {?} path\n   * @return {?}\n   */\n  loadFactory(path) {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let /** @type {?} */factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix).then(module => module[exportName + factoryClassSuffix]).then(factory => checkNotEmpty(factory, module, exportName));\n  }\n}\nSystemJsNgModuleLoader.decorators = [{\n  type: Injectable\n}];\n/**\n * @nocollapse\n */\nSystemJsNgModuleLoader.ctorParameters = () => [{\n  type: Compiler\n}, {\n  type: SystemJsNgModuleLoaderConfig,\n  decorators: [{\n    type: Optional\n  }]\n}];\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nclass TemplateRef {\n  /**\n   * @abstract\n   * @return {?}\n   */\n  elementRef() {}\n  /**\n   * @abstract\n   * @param {?} context\n   * @return {?}\n   */\n  createEmbeddedView(context) {}\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nclass ViewContainerRef {\n  /**\n   * Anchor element that specifies the location of this container in the containing View.\n   * <!-- TODO: rename to anchorElement -->\n   * @abstract\n   * @return {?}\n   */\n  element() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  injector() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  parentInjector() {}\n  /**\n   * Destroys all Views in this container.\n   * @abstract\n   * @return {?}\n   */\n  clear() {}\n  /**\n   * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n   * @abstract\n   * @param {?} index\n   * @return {?}\n   */\n  get(index) {}\n  /**\n   * Returns the number of Views currently attached to this container.\n   * @abstract\n   * @return {?}\n   */\n  length() {}\n  /**\n   * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n   * into this container at the specified `index`.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * Returns the {\\@link ViewRef} for the newly created View.\n   * @abstract\n   * @template C\n   * @param {?} templateRef\n   * @param {?=} context\n   * @param {?=} index\n   * @return {?}\n   */\n  createEmbeddedView(templateRef, context, index) {}\n  /**\n   * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n   * specified `index`.\n   *\n   * The component is instantiated using its {\\@link ComponentFactory} which can be\n   * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n   *\n   * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n   * @abstract\n   * @template C\n   * @param {?} componentFactory\n   * @param {?=} index\n   * @param {?=} injector\n   * @param {?=} projectableNodes\n   * @param {?=} ngModule\n   * @return {?}\n   */\n  createComponent(componentFactory, index, injector, projectableNodes, ngModule) {}\n  /**\n   * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * Returns the inserted {\\@link ViewRef}.\n   * @abstract\n   * @param {?} viewRef\n   * @param {?=} index\n   * @return {?}\n   */\n  insert(viewRef, index) {}\n  /**\n   * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n   *\n   * Returns the inserted {\\@link ViewRef}.\n   * @abstract\n   * @param {?} viewRef\n   * @param {?} currentIndex\n   * @return {?}\n   */\n  move(viewRef, currentIndex) {}\n  /**\n   * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n   * `-1` if this container doesn't contain the View.\n   * @abstract\n   * @param {?} viewRef\n   * @return {?}\n   */\n  indexOf(viewRef) {}\n  /**\n   * Destroys a View attached to this container at the specified `index`.\n   *\n   * If `index` is not specified, the last View in the container will be removed.\n   * @abstract\n   * @param {?=} index\n   * @return {?}\n   */\n  remove(index) {}\n  /**\n   * Use along with {\\@link #insert} to move a View within the current container.\n   *\n   * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n   * @abstract\n   * @param {?=} index\n   * @return {?}\n   */\n  detach(index) {}\n}\n\n/**\n * \\@stable\n * @abstract\n */\nclass ChangeDetectorRef {\n  /**\n   * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n   *\n   * ```typescript\n   * \\@Component({\n   *   selector: 'cmp',\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   *   template: `Number of ticks: {{numberOfTicks}}`\n   * })\n   * class Cmp {\n   *   numberOfTicks = 0;\n   *\n   *   constructor(private ref: ChangeDetectorRef) {\n   *     setInterval(() => {\n   *       this.numberOfTicks++;\n   *       // the following is required, otherwise the view will not be updated\n   *       this.ref.markForCheck();\n   *     }, 1000);\n   *   }\n   * }\n   *\n   * \\@Component({\n   *   selector: 'app',\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   *   template: `\n   *     <cmp><cmp>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   * @abstract\n   * @return {?}\n   */\n  markForCheck() {}\n  /**\n   * Detaches the change detector from the change detector tree.\n   *\n   * The detached change detector will not be checked until it is reattached.\n   *\n   * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n   * local change\n   * detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds. We can do that by detaching\n   * the component's change detector and doing a local check every five seconds.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   // in a real application the returned data will be different every time\n   *   get data() {\n   *     return [1,2,3,4,5];\n   *   }\n   * }\n   *\n   * \\@Component({\n   *   selector: 'giant-list',\n   *   template: `\n   *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n   *   `,\n   * })\n   * class GiantList {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n   *     ref.detach();\n   *     setInterval(() => {\n   *       this.ref.detectChanges();\n   *     }, 5000);\n   *   }\n   * }\n   *\n   * \\@Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     <giant-list><giant-list>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   * @abstract\n   * @return {?}\n   */\n  detach() {}\n  /**\n   * Checks the change detector and its children.\n   *\n   * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n   * change detection\n   * checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine, the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds.\n   *\n   * We can do that by detaching the component's change detector and doing a local change detection\n   * check\n   * every five seconds.\n   *\n   * See {\\@link ChangeDetectorRef#detach} for more information.\n   * @abstract\n   * @return {?}\n   */\n  detectChanges() {}\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * This is used in development mode to verify that running change detection doesn't introduce\n   * other changes.\n   * @abstract\n   * @return {?}\n   */\n  checkNoChanges() {}\n  /**\n   * Reattach the change detector to the change detector tree.\n   *\n   * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n   * checked during the next change detection run.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n   *\n   * The following example creates a component displaying `live` data. The component will detach\n   * its change detector from the main change detector tree when the component's live property\n   * is set to false.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   data = 1;\n   *\n   *   constructor() {\n   *     setInterval(() => {\n   *       this.data = this.data * 2;\n   *     }, 500);\n   *   }\n   * }\n   *\n   * \\@Component({\n   *   selector: 'live-data',\n   *   inputs: ['live'],\n   *   template: 'Data: {{dataProvider.data}}'\n   * })\n   * class LiveData {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n   *\n   *   set live(value) {\n   *     if (value) {\n   *       this.ref.reattach();\n   *     } else {\n   *       this.ref.detach();\n   *     }\n   *   }\n   * }\n   *\n   * \\@Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n   *     <live-data [live]=\"live\"><live-data>\n   *   `,\n   * })\n   * class App {\n   *   live = true;\n   * }\n   * ```\n   * @abstract\n   * @return {?}\n   */\n  reattach() {}\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nclass ViewRef extends ChangeDetectorRef {\n  /**\n   * Destroys the view and all of the data structures associated with it.\n   * @abstract\n   * @return {?}\n   */\n  destroy() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  destroyed() {}\n  /**\n   * @abstract\n   * @param {?} callback\n   * @return {?}\n   */\n  onDestroy(callback) {}\n}\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nclass EmbeddedViewRef extends ViewRef {\n  /**\n   * @abstract\n   * @return {?}\n   */\n  context() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  rootNodes() {}\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass EventListener {\n  /**\n   * @param {?} name\n   * @param {?} callback\n   */\n  constructor(name, callback) {\n    this.name = name;\n    this.callback = callback;\n  }\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nclass DebugNode {\n  /**\n   * @param {?} nativeNode\n   * @param {?} parent\n   * @param {?} _debugContext\n   */\n  constructor(nativeNode, parent, _debugContext) {\n    this._debugContext = _debugContext;\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n  /**\n   * @return {?}\n   */\n  get injector() {\n    return this._debugContext.injector;\n  }\n  /**\n   * @return {?}\n   */\n  get componentInstance() {\n    return this._debugContext.component;\n  }\n  /**\n   * @return {?}\n   */\n  get context() {\n    return this._debugContext.context;\n  }\n  /**\n   * @return {?}\n   */\n  get references() {\n    return this._debugContext.references;\n  }\n  /**\n   * @return {?}\n   */\n  get providerTokens() {\n    return this._debugContext.providerTokens;\n  }\n  /**\n   * @deprecated since v4\n   * @return {?}\n   */\n  get source() {\n    return 'Deprecated since v4';\n  }\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nclass DebugElement extends DebugNode {\n  /**\n   * @param {?} nativeNode\n   * @param {?} parent\n   * @param {?} _debugContext\n   */\n  constructor(nativeNode, parent, _debugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n  /**\n   * @param {?} child\n   * @return {?}\n   */\n  addChild(child) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n  /**\n   * @param {?} child\n   * @return {?}\n   */\n  removeChild(child) {\n    const /** @type {?} */childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n  /**\n   * @param {?} child\n   * @param {?} newChildren\n   * @return {?}\n   */\n  insertChildrenAfter(child, newChildren) {\n    const /** @type {?} */siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n  /**\n   * @param {?} refChild\n   * @param {?} newChild\n   * @return {?}\n   */\n  insertBefore(refChild, newChild) {\n    const /** @type {?} */refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n  /**\n   * @param {?} predicate\n   * @return {?}\n   */\n  query(predicate) {\n    const /** @type {?} */results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n  /**\n   * @param {?} predicate\n   * @return {?}\n   */\n  queryAll(predicate) {\n    const /** @type {?} */matches = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n  /**\n   * @param {?} predicate\n   * @return {?}\n   */\n  queryAllNodes(predicate) {\n    const /** @type {?} */matches = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n  /**\n   * @return {?}\n   */\n  get children() {\n    return this.childNodes.filter(node => node instanceof DebugElement);\n  }\n  /**\n   * @param {?} eventName\n   * @param {?} eventObj\n   * @return {?}\n   */\n  triggerEventHandler(eventName, eventObj) {\n    this.listeners.forEach(listener => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n  return debugEls.map(el => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n  const /** @type {?} */isListLikeIterableA = isListLikeIterable(a);\n  const /** @type {?} */isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const /** @type {?} */isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const /** @type {?} */isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nclass WrappedValue {\n  /**\n   * @param {?} wrapped\n   */\n  constructor(wrapped) {\n    this.wrapped = wrapped;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  static wrap(value) {\n    return new WrappedValue(value);\n  }\n}\n/**\n * Helper class for unwrapping WrappedValue s\n */\nclass ValueUnwrapper {\n  constructor() {\n    this.hasWrappedValue = false;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  unwrap(value) {\n    if (value instanceof WrappedValue) {\n      this.hasWrappedValue = true;\n      return value.wrapped;\n    }\n    return value;\n  }\n  /**\n   * @return {?}\n   */\n  reset() {\n    this.hasWrappedValue = false;\n  }\n}\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nclass SimpleChange {\n  /**\n   * @param {?} previousValue\n   * @param {?} currentValue\n   * @param {?} firstChange\n   */\n  constructor(previousValue, currentValue, firstChange) {\n    this.previousValue = previousValue;\n    this.currentValue = currentValue;\n    this.firstChange = firstChange;\n  }\n  /**\n   * Check whether the new value is the first value assigned.\n   * @return {?}\n   */\n  isFirstChange() {\n    return this.firstChange;\n  }\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) || !(obj instanceof Map) && getSymbolIterator() in obj; // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n  const /** @type {?} */iterator1 = a[getSymbolIterator()]();\n  const /** @type {?} */iterator2 = b[getSymbolIterator()]();\n  while (true) {\n    const /** @type {?} */item1 = iterator1.next();\n    const /** @type {?} */item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n  if (Array.isArray(obj)) {\n    for (let /** @type {?} */i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const /** @type {?} */iterator = obj[getSymbolIterator()]();\n    let /** @type {?} */item;\n    while (!(item = iterator.next()).done) {\n      fn(item.value);\n    }\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DefaultIterableDifferFactory {\n  constructor() {}\n  /**\n   * @param {?} obj\n   * @return {?}\n   */\n  supports(obj) {\n    return isListLikeIterable(obj);\n  }\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   * @template V\n   * @param {?=} cdRefOrTrackBy\n   * @param {?=} trackByFn\n   * @return {?}\n   */\n  create(cdRefOrTrackBy, trackByFn) {\n    return new DefaultIterableDiffer(trackByFn || cdRefOrTrackBy);\n  }\n}\nconst trackByIdentity = (index, item) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nclass DefaultIterableDiffer {\n  /**\n   * @param {?=} trackByFn\n   */\n  constructor(trackByFn) {\n    this._length = 0;\n    this._collection = null;\n    this._linkedRecords = null;\n    this._unlinkedRecords = null;\n    this._previousItHead = null;\n    this._itHead = null;\n    this._itTail = null;\n    this._additionsHead = null;\n    this._additionsTail = null;\n    this._movesHead = null;\n    this._movesTail = null;\n    this._removalsHead = null;\n    this._removalsTail = null;\n    this._identityChangesHead = null;\n    this._identityChangesTail = null;\n    this._trackByFn = trackByFn || trackByIdentity;\n  }\n  /**\n   * @return {?}\n   */\n  get collection() {\n    return this._collection;\n  }\n  /**\n   * @return {?}\n   */\n  get length() {\n    return this._length;\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachOperation(fn) {\n    let /** @type {?} */nextIt = this._itHead;\n    let /** @type {?} */nextRemove = this._removalsHead;\n    let /** @type {?} */addRemoveOffset = 0;\n    let /** @type {?} */moveOffsets = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const /** @type {?} */record = !nextRemove || nextIt && nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? nextIt : nextRemove;\n      const /** @type {?} */adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const /** @type {?} */currentIndex = record.currentIndex;\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = nextIt._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const /** @type {?} */localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const /** @type {?} */localCurrentIndex = currentIndex - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let /** @type {?} */i = 0; i < localMovePreviousIndex; i++) {\n              const /** @type {?} */offset = i < moveOffsets.length ? moveOffsets[i] : moveOffsets[i] = 0;\n              const /** @type {?} */index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const /** @type {?} */previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachPreviousItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachAddedItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachMovedItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachRemovedItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachIdentityChange(fn) {\n    let /** @type {?} */record;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} collection\n   * @return {?}\n   */\n  diff(collection) {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(`Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  onDestroy() {}\n  /**\n   * @param {?} collection\n   * @return {?}\n   */\n  check(collection) {\n    this._reset();\n    let /** @type {?} */record = this._itHead;\n    let /** @type {?} */mayBeDirty = false;\n    let /** @type {?} */index;\n    let /** @type {?} */item;\n    let /** @type {?} */itemTrackBy;\n    if (Array.isArray(collection)) {\n      this._length = collection.length;\n      for (let /** @type {?} */index = 0; index < this._length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, item => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      this._length = index;\n    }\n    this._truncate(record);\n    this._collection = collection;\n    return this.isDirty;\n  }\n  /**\n   * @return {?}\n   */\n  get isDirty() {\n    return this._additionsHead !== null || this._movesHead !== null || this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n  /**\n   * Reset the state of the change objects to show no changes. This means set previousKey to\n   * currentKey, and clear all of the queues (additions, moves, removals).\n   * Set the previousIndexes of moved and added items to their currentIndexes\n   * Reset the list of additions, moves and removals\n   *\n   * \\@internal\n   * @return {?}\n   */\n  _reset() {\n    if (this.isDirty) {\n      let /** @type {?} */record;\n      let /** @type {?} */nextRecord;\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n      // todo(vicb) when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n  /**\n   * This is the core function which handles differences between collections.\n   *\n   * - `record` is the record which we saw at this position last time. If null then it is a new\n   *   item.\n   * - `item` is the current item in the collection\n   * - `index` is the position of the item in the collection\n   *\n   * \\@internal\n   * @param {?} record\n   * @param {?} item\n   * @param {?} itemTrackBy\n   * @param {?} index\n   * @return {?}\n   */\n  _mismatch(record, item, itemTrackBy, index) {\n    // The previous record after which we will append the current one.\n    let /** @type {?} */previousRecord;\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record = this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n  /**\n   * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n   *\n   * Use case: `[a, a]` => `[b, a, a]`\n   *\n   * If we did not have this check then the insertion of `b` would:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) leave `a` at index `1` as is. <-- this is wrong!\n   *   3) reinsert `a` at index 2. <-- this is wrong!\n   *\n   * The correct behavior is:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) reinsert `a` at index 1.\n   *   3) move `a` at from `1` to `2`.\n   *\n   *\n   * Double check that we have not evicted a duplicate item. We need to check if the item type may\n   * have already been removed:\n   * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n   * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n   * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n   * at the end.\n   *\n   * \\@internal\n   * @param {?} record\n   * @param {?} item\n   * @param {?} itemTrackBy\n   * @param {?} index\n   * @return {?}\n   */\n  _verifyReinsertion(record, item, itemTrackBy, index) {\n    let /** @type {?} */reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, /** @type {?} */record._prev, index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n  /**\n   * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n   *\n   * - `record` The first excess {\\@link IterableChangeRecord_}.\n   *\n   * \\@internal\n   * @param {?} record\n   * @return {?}\n   */\n  _truncate(record) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const /** @type {?} */nextRecord = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n  /**\n   * \\@internal\n   * @param {?} record\n   * @param {?} prevRecord\n   * @param {?} index\n   * @return {?}\n   */\n  _reinsertAfter(record, prevRecord, index) {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const /** @type {?} */prev = record._prevRemoved;\n    const /** @type {?} */next = record._nextRemoved;\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n  /**\n   * \\@internal\n   * @param {?} record\n   * @param {?} prevRecord\n   * @param {?} index\n   * @return {?}\n   */\n  _moveAfter(record, prevRecord, index) {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n  /**\n   * \\@internal\n   * @param {?} record\n   * @param {?} prevRecord\n   * @param {?} index\n   * @return {?}\n   */\n  _addAfter(record, prevRecord, index) {\n    this._insertAfter(record, prevRecord, index);\n    if (this._additionsTail === null) {\n      // todo(vicb)\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n  /**\n   * \\@internal\n   * @param {?} record\n   * @param {?} prevRecord\n   * @param {?} index\n   * @return {?}\n   */\n  _insertAfter(record, prevRecord, index) {\n    // todo(vicb)\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n    const /** @type {?} */next = prevRecord === null ? this._itHead : prevRecord._next;\n    // todo(vicb)\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap();\n    }\n    this._linkedRecords.put(record);\n    record.currentIndex = index;\n    return record;\n  }\n  /**\n   * \\@internal\n   * @param {?} record\n   * @return {?}\n   */\n  _remove(record) {\n    return this._addToRemovals(this._unlink(record));\n  }\n  /**\n   * \\@internal\n   * @param {?} record\n   * @return {?}\n   */\n  _unlink(record) {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n    const /** @type {?} */prev = record._prev;\n    const /** @type {?} */next = record._next;\n    // todo(vicb)\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n    return record;\n  }\n  /**\n   * \\@internal\n   * @param {?} record\n   * @param {?} toIndex\n   * @return {?}\n   */\n  _addToMoves(record, toIndex) {\n    // todo(vicb)\n    // assert(record._nextMoved === null);\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n    if (this._movesTail === null) {\n      // todo(vicb)\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n    return record;\n  }\n  /**\n   * @param {?} record\n   * @return {?}\n   */\n  _addToRemovals(record) {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n    if (this._removalsTail === null) {\n      // todo(vicb)\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // todo(vicb)\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n  /**\n   * \\@internal\n   * @param {?} record\n   * @param {?} item\n   * @return {?}\n   */\n  _addIdentityChange(record, item) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n  /**\n   * @return {?}\n   */\n  toString() {\n    const /** @type {?} */list = [];\n    this.forEachItem(record => list.push(record));\n    const /** @type {?} */previous = [];\n    this.forEachPreviousItem(record => previous.push(record));\n    const /** @type {?} */additions = [];\n    this.forEachAddedItem(record => additions.push(record));\n    const /** @type {?} */moves = [];\n    this.forEachMovedItem(record => moves.push(record));\n    const /** @type {?} */removals = [];\n    this.forEachRemovedItem(record => removals.push(record));\n    const /** @type {?} */identityChanges = [];\n    this.forEachIdentityChange(record => identityChanges.push(record));\n    return 'collection: ' + list.join(', ') + '\\n' + 'previous: ' + previous.join(', ') + '\\n' + 'additions: ' + additions.join(', ') + '\\n' + 'moves: ' + moves.join(', ') + '\\n' + 'removals: ' + removals.join(', ') + '\\n' + 'identityChanges: ' + identityChanges.join(', ') + '\\n';\n  }\n}\n/**\n * \\@stable\n */\nclass IterableChangeRecord_ {\n  /**\n   * @param {?} item\n   * @param {?} trackById\n   */\n  constructor(item, trackById) {\n    this.item = item;\n    this.trackById = trackById;\n    this.currentIndex = null;\n    this.previousIndex = null;\n    /**\n     * \\@internal\n     */\n    this._nextPrevious = null;\n    /**\n     * \\@internal\n     */\n    this._prev = null;\n    /**\n     * \\@internal\n     */\n    this._next = null;\n    /**\n     * \\@internal\n     */\n    this._prevDup = null;\n    /**\n     * \\@internal\n     */\n    this._nextDup = null;\n    /**\n     * \\@internal\n     */\n    this._prevRemoved = null;\n    /**\n     * \\@internal\n     */\n    this._nextRemoved = null;\n    /**\n     * \\@internal\n     */\n    this._nextAdded = null;\n    /**\n     * \\@internal\n     */\n    this._nextMoved = null;\n    /**\n     * \\@internal\n     */\n    this._nextIdentityChange = null;\n  }\n  /**\n   * @return {?}\n   */\n  toString() {\n    return this.previousIndex === this.currentIndex ? stringify(this.item) : stringify(this.item) + '[' + stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n  }\n}\nclass _DuplicateItemRecordList {\n  constructor() {\n    /**\n     * \\@internal\n     */\n    this._head = null;\n    /**\n     * \\@internal\n     */\n    this._tail = null;\n  }\n  /**\n   * Append the record to the list of duplicates.\n   *\n   * Note: by design all records in the list of duplicates hold the same value in record.item.\n   * @param {?} record\n   * @return {?}\n   */\n  add(record) {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else {\n      // todo(vicb)\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n  /**\n   * @param {?} trackById\n   * @param {?} atOrAfterIndex\n   * @return {?}\n   */\n  get(trackById, atOrAfterIndex) {\n    let /** @type {?} */record;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) && looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n  /**\n   * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * Returns whether the list of duplicates is empty.\n   * @param {?} record\n   * @return {?}\n   */\n  remove(record) {\n    // todo(vicb)\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n    const /** @type {?} */prev = record._prevDup;\n    const /** @type {?} */next = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\nclass _DuplicateMap {\n  constructor() {\n    this.map = new Map();\n  }\n  /**\n   * @param {?} record\n   * @return {?}\n   */\n  put(record) {\n    const /** @type {?} */key = record.trackById;\n    let /** @type {?} */duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n  /**\n   * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n   * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n   *\n   * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n   * have any more `a`s needs to return the second `a`.\n   * @param {?} trackById\n   * @param {?} atOrAfterIndex\n   * @return {?}\n   */\n  get(trackById, atOrAfterIndex) {\n    const /** @type {?} */key = trackById;\n    const /** @type {?} */recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n  /**\n   * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * The list of duplicates also is removed from the map if it gets empty.\n   * @param {?} record\n   * @return {?}\n   */\n  remove(record) {\n    const /** @type {?} */key = record.trackById;\n    const /** @type {?} */recordList = this.map.get(key);\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n  /**\n   * @return {?}\n   */\n  get isEmpty() {\n    return this.map.size === 0;\n  }\n  /**\n   * @return {?}\n   */\n  clear() {\n    this.map.clear();\n  }\n  /**\n   * @return {?}\n   */\n  toString() {\n    return '_DuplicateMap(' + stringify(this.map) + ')';\n  }\n}\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n  const /** @type {?} */previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let /** @type {?} */moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DefaultKeyValueDifferFactory {\n  constructor() {}\n  /**\n   * @param {?} obj\n   * @return {?}\n   */\n  supports(obj) {\n    return obj instanceof Map || isJsObject(obj);\n  }\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   * @template K, V\n   * @param {?=} cd\n   * @return {?}\n   */\n  create(cd) {\n    return new DefaultKeyValueDiffer();\n  }\n}\nclass DefaultKeyValueDiffer {\n  constructor() {\n    this._records = new Map();\n    this._mapHead = null;\n    this._appendAfter = null;\n    this._previousMapHead = null;\n    this._changesHead = null;\n    this._changesTail = null;\n    this._additionsHead = null;\n    this._additionsTail = null;\n    this._removalsHead = null;\n    this._removalsTail = null;\n  }\n  /**\n   * @return {?}\n   */\n  get isDirty() {\n    return this._additionsHead !== null || this._changesHead !== null || this._removalsHead !== null;\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachPreviousItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachChangedItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachAddedItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  forEachRemovedItem(fn) {\n    let /** @type {?} */record;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n  /**\n   * @param {?=} map\n   * @return {?}\n   */\n  diff(map) {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(`Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n    return this.check(map) ? this : null;\n  }\n  /**\n   * @return {?}\n   */\n  onDestroy() {}\n  /**\n   * Check the current state of the map vs the previous.\n   * The algorithm is optimised for when the keys do no change.\n   * @param {?} map\n   * @return {?}\n   */\n  check(map) {\n    this._reset();\n    let /** @type {?} */insertBefore = this._mapHead;\n    this._appendAfter = null;\n    this._forEach(map, (value, key) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const /** @type {?} */record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n      this._removalsHead = insertBefore;\n      for (let /** @type {?} */record = insertBefore; record !== null; record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n    return this.isDirty;\n  }\n  /**\n   * Inserts a record before `before` or append at the end of the list when `before` is null.\n   *\n   * Notes:\n   * - This method appends at `this._appendAfter`,\n   * - This method updates `this._appendAfter`,\n   * - The return value is the new value for the insertion pointer.\n   * @param {?} before\n   * @param {?} record\n   * @return {?}\n   */\n  _insertBeforeOrAppend(before, record) {\n    if (before) {\n      const /** @type {?} */prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n      this._appendAfter = before;\n      return before;\n    }\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n    this._appendAfter = record;\n    return null;\n  }\n  /**\n   * @param {?} key\n   * @param {?} value\n   * @return {?}\n   */\n  _getOrCreateRecordForKey(key, value) {\n    if (this._records.has(key)) {\n      const /** @type {?} */record = this._records.get(key);\n      this._maybeAddToChanges(record, value);\n      const /** @type {?} */prev = record._prev;\n      const /** @type {?} */next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n      return record;\n    }\n    const /** @type {?} */record = new KeyValueChangeRecord_(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n  /**\n   * \\@internal\n   * @return {?}\n   */\n  _reset() {\n    if (this.isDirty) {\n      let /** @type {?} */record;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n  /**\n   * @param {?} record\n   * @param {?} newValue\n   * @return {?}\n   */\n  _maybeAddToChanges(record, newValue) {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n  /**\n   * @param {?} record\n   * @return {?}\n   */\n  _addToAdditions(record) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n  /**\n   * @param {?} record\n   * @return {?}\n   */\n  _addToChanges(record) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n  /**\n   * \\@internal\n   * @template K, V\n   * @param {?} obj\n   * @param {?} fn\n   * @return {?}\n   */\n  _forEach(obj, fn) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_ {\n  /**\n   * @param {?} key\n   */\n  constructor(key) {\n    this.key = key;\n    this.previousValue = null;\n    this.currentValue = null;\n    /**\n     * \\@internal\n     */\n    this._nextPrevious = null;\n    /**\n     * \\@internal\n     */\n    this._next = null;\n    /**\n     * \\@internal\n     */\n    this._prev = null;\n    /**\n     * \\@internal\n     */\n    this._nextAdded = null;\n    /**\n     * \\@internal\n     */\n    this._nextRemoved = null;\n    /**\n     * \\@internal\n     */\n    this._nextChanged = null;\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nclass IterableDiffers {\n  /**\n   * @param {?} factories\n   */\n  constructor(factories) {\n    this.factories = factories;\n  }\n  /**\n   * @param {?} factories\n   * @param {?=} parent\n   * @return {?}\n   */\n  static create(factories, parent) {\n    if (parent != null) {\n      const /** @type {?} */copied = parent.factories.slice();\n      factories = factories.concat(copied);\n      return new IterableDiffers(factories);\n    } else {\n      return new IterableDiffers(factories);\n    }\n  }\n  /**\n   * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n   * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n   * {\\@link IterableDiffers} instance.\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {\\@link IterableDiffer} available.\n   *\n   * ### Example\n   *\n   * ```\n   * \\@Component({\n   *   viewProviders: [\n   *     IterableDiffers.extend([new ImmutableListDiffer()])\n   *   ]\n   * })\n   * ```\n   * @param {?} factories\n   * @return {?}\n   */\n  static extend(factories) {\n    return {\n      provide: IterableDiffers,\n      useFactory: parent => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n  /**\n   * @param {?} iterable\n   * @return {?}\n   */\n  find(iterable) {\n    const /** @type {?} */factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(`Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n  return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nclass KeyValueDiffers {\n  /**\n   * @param {?} factories\n   */\n  constructor(factories) {\n    this.factories = factories;\n  }\n  /**\n   * @template S\n   * @param {?} factories\n   * @param {?=} parent\n   * @return {?}\n   */\n  static create(factories, parent) {\n    if (parent) {\n      const /** @type {?} */copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n  /**\n   * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n   * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n   * {\\@link KeyValueDiffers} instance.\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n   *\n   * ### Example\n   *\n   * ```\n   * \\@Component({\n   *   viewProviders: [\n   *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n   *   ]\n   * })\n   * ```\n   * @template S\n   * @param {?} factories\n   * @return {?}\n   */\n  static extend(factories) {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: parent => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n  /**\n   * @param {?} kv\n   * @return {?}\n   */\n  find(kv) {\n    const /** @type {?} */factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff = [new DefaultIterableDifferFactory()];\nconst defaultIterableDiffers = new IterableDiffers(iterableDiff);\nconst defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _reflector() {\n  return reflector;\n}\nconst _CORE_PLATFORM_PROVIDERS = [\n// Set a default platform name for platforms that don't set it explicitly.\n{\n  provide: PLATFORM_ID,\n  useValue: 'unknown'\n}, PlatformRef_, {\n  provide: PlatformRef,\n  useExisting: PlatformRef_\n}, {\n  provide: Reflector,\n  useFactory: _reflector,\n  deps: []\n}, TestabilityRegistry, Console];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nconst platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nconst LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nconst TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nconst TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\nlet MissingTranslationStrategy = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n  return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nclass ApplicationModule {\n  /**\n   * @param {?} appRef\n   */\n  constructor(appRef) {}\n}\nApplicationModule.decorators = [{\n  type: NgModule,\n  args: [{\n    providers: [ApplicationRef_, {\n      provide: ApplicationRef,\n      useExisting: ApplicationRef_\n    }, ApplicationInitStatus, Compiler, APP_ID_RANDOM_PROVIDER, {\n      provide: IterableDiffers,\n      useFactory: _iterableDiffersFactory\n    }, {\n      provide: KeyValueDiffers,\n      useFactory: _keyValueDiffersFactory\n    }, {\n      provide: LOCALE_ID,\n      useFactory: _localeFactory,\n      deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    }]\n  }]\n}];\n/**\n * @nocollapse\n */\nApplicationModule.ctorParameters = () => [{\n  type: ApplicationRef\n}];\nlet SecurityContext = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nclass Sanitizer {\n  /**\n   * @abstract\n   * @param {?} context\n   * @param {?} value\n   * @return {?}\n   */\n  sanitize(context, value) {}\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n  return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n  return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n  return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n  return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n  return view.nodes[index];\n}\n/**\n * @abstract\n */\nclass DebugContext {\n  /**\n   * @abstract\n   * @return {?}\n   */\n  view() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  nodeIndex() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  injector() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  component() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  providerTokens() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  references() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  context() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  componentRenderElement() {}\n  /**\n   * @abstract\n   * @return {?}\n   */\n  renderNode() {}\n  /**\n   * @abstract\n   * @param {?} console\n   * @param {...?} values\n   * @return {?}\n   */\n  logError(console, ...values) {}\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nconst Services = {\n  setCurrentNode: undefined,\n  createRootView: undefined,\n  createEmbeddedView: undefined,\n  createComponentView: undefined,\n  createNgModuleRef: undefined,\n  overrideProvider: undefined,\n  clearProviderOverrides: undefined,\n  checkAndUpdateView: undefined,\n  checkNoChangesView: undefined,\n  destroyView: undefined,\n  resolveDep: undefined,\n  createDebugContext: undefined,\n  handleEvent: undefined,\n  updateDirectives: undefined,\n  updateRenderer: undefined,\n  dirtyParentQueries: undefined\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n  let /** @type {?} */msg = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg += ` It seems like the view has been created after its parent and its children have been dirty checked.` + ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n  const /** @type {?} */err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n  err[ERROR_DEBUG_CONTEXT] = context;\n  err[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n  return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NOOP = () => {};\nconst _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n  let /** @type {?} */key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n  if (value instanceof WrappedValue) {\n    value = value.wrapped;\n    let /** @type {?} */globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    let /** @type {?} */oldValue = view.oldValues[globalBindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\nlet _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const /** @type {?} */isFilled = type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None || type.styles.length || Object.keys(type.data).length;\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n  const /** @type {?} */oldValues = view.oldValues;\n  if (view.state & 2 /* FirstCheck */ || !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n  const /** @type {?} */oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if (view.state & 1 /* BeforeFirstCheck */ || !devModeEqual(oldValue, value)) {\n    throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n  let /** @type {?} */currView = view;\n  while (currView) {\n    if (currView.def.flags & 2 /* OnPush */) {\n      currView.state |= 8 /* ChecksEnabled */;\n    }\n\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n  let /** @type {?} */currView = view;\n  while (currView && currView !== endView) {\n    currView.state |= 64 /* CheckProjectedViews */;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n  const /** @type {?} */nodeDef = view.def.nodes[nodeIndex];\n  const /** @type {?} */startView = nodeDef.flags & 33554432 /* ComponentView */ ? asElementData(view, nodeIndex).componentView : view;\n  markParentViewsForCheck(startView);\n  return Services.handleEvent(view, nodeIndex, eventName, event);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n  if (view.parent) {\n    const /** @type {?} */parentView = view.parent;\n    return asElementData(parentView, /** @type {?} */view.parentNodeDef.nodeIndex);\n  }\n  return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n  const /** @type {?} */parentView = view.parent;\n  if (parentView) {\n    return view.parentNodeDef.parent;\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n  switch (def.flags & 201347067 /* Types */) {\n    case 1 /* TypeElement */:\n      return asElementData(view, def.nodeIndex).renderElement;\n    case 2 /* TypeText */:\n      return asTextData(view, def.nodeIndex).renderText;\n  }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n  return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n  return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n  return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n  return 1 << queryId % 32;\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n  const /** @type {?} */matchedQueries = {};\n  let /** @type {?} */matchedQueryIds = 0;\n  const /** @type {?} */references = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {\n    matchedQueries,\n    references,\n    matchedQueryIds\n  };\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n  return deps.map(value => {\n    let /** @type {?} */token;\n    let /** @type {?} */flags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = 0 /* None */;\n      token = value;\n    }\n    return {\n      flags,\n      token,\n      tokenKey: tokenKey(token)\n    };\n  });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n  let /** @type {?} */renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & 1 /* TypeElement */) === 0 || (renderParent.flags & 33554432 /* ComponentView */) === 0 || renderParent.element.componentRendererType && renderParent.element.componentRendererType.encapsulation === ViewEncapsulation.Native) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, /** @type {?} */def.renderParent.nodeIndex).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\nconst DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n  let /** @type {?} */value = DEFINITION_CACHE.get(factory);\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n  const /** @type {?} */renderNodes = [];\n  visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === 3 /* RemoveChild */) {\n    parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */view.def.lastRenderRootNode));\n  }\n  visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n  for (let /** @type {?} */i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n  let /** @type {?} */compView = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const /** @type {?} */hostView = compView.parent;\n  const /** @type {?} */hostElDef = viewParentEl( /** @type {?} */compView);\n  const /** @type {?} */startIndex = hostElDef.nodeIndex + 1;\n  const /** @type {?} */endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n  for (let /** @type {?} */i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */nodeDef = hostView.def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode( /** @type {?} */hostView, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (!hostView.parent) {\n    // a root view\n    const /** @type {?} */projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let /** @type {?} */i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n  if (nodeDef.flags & 8 /* TypeNgContent */) {\n    visitProjectedRenderNodes(view, /** @type {?} */nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n  } else {\n    const /** @type {?} */rn = renderNode(view, nodeDef);\n    if (action === 3 /* RemoveChild */ && nodeDef.flags & 33554432 /* ComponentView */ && nodeDef.bindingFlags & 48 /* CatSyntheticProperty */) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & 16 /* SyntheticProperty */) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & 32 /* SyntheticHostProperty */) {\n        const /** @type {?} */compView = asElementData(view, nodeDef.nodeIndex).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n      const /** @type {?} */embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n      for (let /** @type {?} */k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n      visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n  const /** @type {?} */renderer = view.renderer;\n  switch (action) {\n    case 1 /* AppendChild */:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case 2 /* InsertBefore */:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case 3 /* RemoveChild */:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case 0 /* Collect */:\n      target.push(renderNode);\n      break;\n  }\n}\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n  if (name[0] === ':') {\n    const /** @type {?} */match = name.match(NS_PREFIX_RE);\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n  let /** @type {?} */flags = 0;\n  for (let /** @type {?} */i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n  let /** @type {?} */result = '';\n  for (let /** @type {?} */i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n  return v != null ? v.toString() : '';\n}\nconst EMPTY_ARRAY = [];\nconst EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n  flags |= 1 /* TypeElement */;\n  const {\n    matchedQueries,\n    references,\n    matchedQueryIds\n  } = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const /** @type {?} */template = templateFactory ? resolveDefinition(templateFactory) : null;\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    checkIndex: -1,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries,\n    matchedQueryIds,\n    references,\n    ngContentIndex,\n    childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null,\n      template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs = [], bindings, outputs, handleEvent, componentView, componentRendererType) {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {\n    matchedQueries,\n    references,\n    matchedQueryIds\n  } = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let /** @type {?} */ns = null;\n  let /** @type {?} */name = null;\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const /** @type {?} */bindingDefs = new Array(bindings.length);\n  for (let /** @type {?} */i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let /** @type {?} */securityContext = undefined;\n    let /** @type {?} */suffix = undefined;\n    switch (bindingFlags & 15 /* Types */) {\n      case 4 /* TypeElementStyle */:\n        suffix = suffixOrSecurityContext;\n        break;\n      case 1 /* TypeElementAttribute */:\n      case 8 /* TypeProperty */:\n        securityContext = suffixOrSecurityContext;\n        break;\n    }\n    bindingDefs[i] = {\n      flags: bindingFlags,\n      ns,\n      name,\n      nonMinifiedName: name,\n      securityContext,\n      suffix\n    };\n  }\n  outputs = outputs || [];\n  const /** @type {?} */outputDefs = new Array(outputs.length);\n  for (let /** @type {?} */i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: 0 /* ElementOutput */,\n      target: /** @type {?} */target,\n      eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const /** @type {?} */attrs = fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  });\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= 33554432 /* ComponentView */;\n  }\n\n  flags |= 1 /* TypeElement */;\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries,\n    matchedQueryIds,\n    references,\n    ngContentIndex,\n    childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n  const /** @type {?} */elDef = def.element;\n  const /** @type {?} */rootSelectorOrNode = view.root.selectorOrNode;\n  const /** @type {?} */renderer = view.renderer;\n  let /** @type {?} */el;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const /** @type {?} */parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    el = renderer.selectRootElement(rootSelectorOrNode);\n  }\n  if (elDef.attrs) {\n    for (let /** @type {?} */i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n  for (let /** @type {?} */i = 0; i < def.outputs.length; i++) {\n    const /** @type {?} */output = def.outputs[i];\n    const /** @type {?} */handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n    let /** @type {?} */listenTarget = output.target;\n    let /** @type {?} */listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const /** @type {?} */disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure); /** @type {?} */\n    view.disposables[def.outputIndex + i] = disposable;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n  return event => {\n    try {\n      return dispatchEvent(view, index, eventName, event);\n    } catch (e) {\n      // Attention: Don't rethrow, to keep in sync with directive events.\n      view.root.errorHandler.handleError(e);\n    }\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  const /** @type {?} */bindLen = def.bindings.length;\n  let /** @type {?} */changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n  let /** @type {?} */changed = false;\n  for (let /** @type {?} */i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const /** @type {?} */binding = def.bindings[bindingIdx];\n  const /** @type {?} */elData = asElementData(view, def.nodeIndex);\n  const /** @type {?} */renderNode$$1 = elData.renderElement;\n  const /** @type {?} */name = binding.name;\n  switch (binding.flags & 15 /* Types */) {\n    case 1 /* TypeElementAttribute */:\n      setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n      break;\n    case 2 /* TypeElementClass */:\n      setElementClass(view, renderNode$$1, name, value);\n      break;\n    case 4 /* TypeElementStyle */:\n      setElementStyle(view, binding, renderNode$$1, name, value);\n      break;\n    case 8 /* TypeProperty */:\n      const /** @type {?} */bindView = def.flags & 33554432 /* ComponentView */ && binding.flags & 32 /* SyntheticHostProperty */ ? elData.componentView : view;\n      setElementProperty(bindView, binding, renderNode$$1, name, value);\n      break;\n  }\n  return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n  const /** @type {?} */securityContext = binding.securityContext;\n  let /** @type {?} */renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const /** @type {?} */renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode$$1, name, ns);\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n  const /** @type {?} */renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode$$1, name);\n  } else {\n    renderer.removeClass(renderNode$$1, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n  let /** @type {?} */renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */value);\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const /** @type {?} */unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const /** @type {?} */renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode$$1, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode$$1, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n  const /** @type {?} */securityContext = binding.securityContext;\n  let /** @type {?} */renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst UNDEFINED_VALUE = new Object();\nconst InjectorRefTokenKey$1 = tokenKey(Injector);\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n  const /** @type {?} */depDefs = splitDepsDsl(deps);\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs,\n    flags,\n    token,\n    value\n  };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n  const /** @type {?} */providersByKey = {};\n  for (let /** @type {?} */i = 0; i < providers.length; i++) {\n    const /** @type {?} */provider = providers[i];\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers\n  };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n  const /** @type {?} */def = data._def;\n  const /** @type {?} */providers = data._providers = new Array(def.providers.length);\n  for (let /** @type {?} */i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */provDef = def.providers[i];\n    if (!(provDef.flags & 4096 /* LazyProvider */)) {\n      providers[i] = _createProviderInstance$1(data, provDef);\n    }\n  }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n  if (depDef.flags & 8 /* Value */) {\n    return depDef.token;\n  }\n  if (depDef.flags & 2 /* Optional */) {\n    notFoundValue = null;\n  }\n  if (depDef.flags & 1 /* SkipSelf */) {\n    return data._parent.get(depDef.token, notFoundValue);\n  }\n  const /** @type {?} */tokenKey$$1 = depDef.tokenKey;\n  switch (tokenKey$$1) {\n    case InjectorRefTokenKey$1:\n    case NgModuleRefTokenKey:\n      return data;\n  }\n  const /** @type {?} */providerDef = data._def.providersByKey[tokenKey$$1];\n  if (providerDef) {\n    let /** @type {?} */providerInstance = data._providers[providerDef.index];\n    if (providerInstance === undefined) {\n      providerInstance = data._providers[providerDef.index] = _createProviderInstance$1(data, providerDef);\n    }\n    return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n  }\n  return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n  let /** @type {?} */injectable;\n  switch (providerDef.flags & 201347067 /* Types */) {\n    case 512 /* TypeClassProvider */:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case 1024 /* TypeFactoryProvider */:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case 2048 /* TypeUseExistingProvider */:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case 256 /* TypeValueProvider */:\n      injectable = providerDef.value;\n      break;\n  }\n  return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n  const /** @type {?} */len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const /** @type {?} */depValues = new Array(len);\n      for (let /** @type {?} */i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n  const /** @type {?} */len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const /** @type {?} */depValues = Array(len);\n      for (let /** @type {?} */i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n  const /** @type {?} */def = ngModule._def;\n  for (let /** @type {?} */i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */provDef = def.providers[i];\n    if (provDef.flags & 131072 /* OnDestroy */) {\n      const /** @type {?} */instance = ngModule._providers[i];\n      if (instance && instance !== UNDEFINED_VALUE) {\n        instance.ngOnDestroy();\n      }\n    }\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n  let /** @type {?} */embeddedViews = elementData.viewContainer._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, /** @type {?} */viewIndex, view);\n  attachProjectedView(elementData, view);\n  Services.dirtyParentQueries(view);\n  const /** @type {?} */prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n  const /** @type {?} */dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData || view.state & 16 /* IsProjectedView */) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even accross component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= 16 /* IsProjectedView */;\n  let /** @type {?} */projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate( /** @type {?} */view.parent.def, /** @type {?} */view.parentNodeDef);\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n  if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n    return;\n  }\n  viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n  nodeDef.flags |= 4 /* ProjectedTemplate */;\n  let /** @type {?} */parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n  const /** @type {?} */embeddedViews = elementData.viewContainer._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const /** @type {?} */view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n  renderDetachView(view);\n  return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n  if (!(view.state & 16 /* IsProjectedView */)) {\n    return;\n  }\n  const /** @type {?} */dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const /** @type {?} */projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n  const /** @type {?} */embeddedViews = elementData.viewContainer._embeddedViews;\n  const /** @type {?} */view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n  Services.dirtyParentQueries(view);\n  renderDetachView(view);\n  const /** @type {?} */prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n  const /** @type {?} */prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */prevView.def.lastRenderRootNode) : elementData.renderElement;\n  const /** @type {?} */parentNode = view.renderer.parentNode(prevRenderNode);\n  const /** @type {?} */nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n  visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n  return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n  return componentFactory.viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory {\n  /**\n   * @param {?} selector\n   * @param {?} componentType\n   * @param {?} viewDefFactory\n   * @param {?} _inputs\n   * @param {?} _outputs\n   * @param {?} ngContentSelectors\n   */\n  constructor(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.selector = selector;\n    this.componentType = componentType;\n    this._inputs = _inputs;\n    this._outputs = _outputs;\n    this.ngContentSelectors = ngContentSelectors;\n    this.viewDefFactory = viewDefFactory;\n  }\n  /**\n   * @return {?}\n   */\n  get inputs() {\n    const /** @type {?} */inputsArr = [];\n    const /** @type {?} */inputs = this._inputs;\n    for (let /** @type {?} */propName in inputs) {\n      const /** @type {?} */templateName = inputs[propName];\n      inputsArr.push({\n        propName,\n        templateName\n      });\n    }\n    return inputsArr;\n  }\n  /**\n   * @return {?}\n   */\n  get outputs() {\n    const /** @type {?} */outputsArr = [];\n    for (let /** @type {?} */propName in this._outputs) {\n      const /** @type {?} */templateName = this._outputs[propName];\n      outputsArr.push({\n        propName,\n        templateName\n      });\n    }\n    return outputsArr;\n  }\n  /**\n   * Creates a new component.\n   * @param {?} injector\n   * @param {?=} projectableNodes\n   * @param {?=} rootSelectorOrNode\n   * @param {?=} ngModule\n   * @return {?}\n   */\n  create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const /** @type {?} */viewDef = resolveDefinition(this.viewDefFactory);\n    const /** @type {?} */componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n    const /** @type {?} */view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const /** @type {?} */component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\nclass ComponentRef_ extends ComponentRef {\n  /**\n   * @param {?} _view\n   * @param {?} _viewRef\n   * @param {?} _component\n   */\n  constructor(_view, _viewRef, _component) {\n    super();\n    this._view = _view;\n    this._viewRef = _viewRef;\n    this._component = _component;\n    this._elDef = this._view.def.nodes[0];\n  }\n  /**\n   * @return {?}\n   */\n  get location() {\n    return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n  }\n  /**\n   * @return {?}\n   */\n  get injector() {\n    return new Injector_(this._view, this._elDef);\n  }\n  /**\n   * @return {?}\n   */\n  get instance() {\n    return this._component;\n  }\n  /**\n   * @return {?}\n   */\n  get hostView() {\n    return this._viewRef;\n  }\n  /**\n   * @return {?}\n   */\n  get changeDetectorRef() {\n    return this._viewRef;\n  }\n  /**\n   * @return {?}\n   */\n  get componentType() {\n    return this._component.constructor;\n  }\n  /**\n   * @return {?}\n   */\n  destroy() {\n    this._viewRef.destroy();\n  }\n  /**\n   * @param {?} callback\n   * @return {?}\n   */\n  onDestroy(callback) {\n    this._viewRef.onDestroy(callback);\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n  return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ {\n  /**\n   * @param {?} _view\n   * @param {?} _elDef\n   * @param {?} _data\n   */\n  constructor(_view, _elDef, _data) {\n    this._view = _view;\n    this._elDef = _elDef;\n    this._data = _data;\n    /**\n     * \\@internal\n     */\n    this._embeddedViews = [];\n  }\n  /**\n   * @return {?}\n   */\n  get element() {\n    return new ElementRef(this._data.renderElement);\n  }\n  /**\n   * @return {?}\n   */\n  get injector() {\n    return new Injector_(this._view, this._elDef);\n  }\n  /**\n   * @return {?}\n   */\n  get parentInjector() {\n    let /** @type {?} */view = this._view;\n    let /** @type {?} */elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent;\n    }\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n  /**\n   * @return {?}\n   */\n  clear() {\n    const /** @type {?} */len = this._embeddedViews.length;\n    for (let /** @type {?} */i = len - 1; i >= 0; i--) {\n      const /** @type {?} */view = detachEmbeddedView(this._data, i);\n      Services.destroyView(view);\n    }\n  }\n  /**\n   * @param {?} index\n   * @return {?}\n   */\n  get(index) {\n    const /** @type {?} */view = this._embeddedViews[index];\n    if (view) {\n      const /** @type {?} */ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n  /**\n   * @return {?}\n   */\n  get length() {\n    return this._embeddedViews.length;\n  }\n  /**\n   * @template C\n   * @param {?} templateRef\n   * @param {?=} context\n   * @param {?=} index\n   * @return {?}\n   */\n  createEmbeddedView(templateRef, context, index) {\n    const /** @type {?} */viewRef = templateRef.createEmbeddedView(context || {});\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n  /**\n   * @template C\n   * @param {?} componentFactory\n   * @param {?=} index\n   * @param {?=} injector\n   * @param {?=} projectableNodes\n   * @param {?=} ngModuleRef\n   * @return {?}\n   */\n  createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {\n    const /** @type {?} */contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const /** @type {?} */componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n  /**\n   * @param {?} viewRef\n   * @param {?=} index\n   * @return {?}\n   */\n  insert(viewRef, index) {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */viewRef_ = viewRef;\n    const /** @type {?} */viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n  /**\n   * @param {?} viewRef\n   * @param {?} currentIndex\n   * @return {?}\n   */\n  move(viewRef, currentIndex) {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n  /**\n   * @param {?} viewRef\n   * @return {?}\n   */\n  indexOf(viewRef) {\n    return this._embeddedViews.indexOf(viewRef._view);\n  }\n  /**\n   * @param {?=} index\n   * @return {?}\n   */\n  remove(index) {\n    const /** @type {?} */viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n  /**\n   * @param {?=} index\n   * @return {?}\n   */\n  detach(index) {\n    const /** @type {?} */view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n  return new ViewRef_(view);\n}\nclass ViewRef_ {\n  /**\n   * @param {?} _view\n   */\n  constructor(_view) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n  /**\n   * @return {?}\n   */\n  get rootNodes() {\n    return rootRenderNodes(this._view);\n  }\n  /**\n   * @return {?}\n   */\n  get context() {\n    return this._view.context;\n  }\n  /**\n   * @return {?}\n   */\n  get destroyed() {\n    return (this._view.state & 128 /* Destroyed */) !== 0;\n  }\n  /**\n   * @return {?}\n   */\n  markForCheck() {\n    markParentViewsForCheck(this._view);\n  }\n  /**\n   * @return {?}\n   */\n  detach() {\n    this._view.state &= ~4 /* Attached */;\n  }\n  /**\n   * @return {?}\n   */\n  detectChanges() {\n    const /** @type {?} */fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    Services.checkAndUpdateView(this._view);\n    if (fs.end) {\n      fs.end();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  checkNoChanges() {\n    Services.checkNoChangesView(this._view);\n  }\n  /**\n   * @return {?}\n   */\n  reattach() {\n    this._view.state |= 4 /* Attached */;\n  }\n  /**\n   * @param {?} callback\n   * @return {?}\n   */\n  onDestroy(callback) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push( /** @type {?} */callback);\n  }\n  /**\n   * @return {?}\n   */\n  destroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n  /**\n   * @return {?}\n   */\n  detachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n  /**\n   * @param {?} appRef\n   * @return {?}\n   */\n  attachToAppRef(appRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n  /**\n   * @param {?} vcRef\n   * @return {?}\n   */\n  attachToViewContainerRef(vcRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef {\n  /**\n   * @param {?} _parentView\n   * @param {?} _def\n   */\n  constructor(_parentView, _def) {\n    super();\n    this._parentView = _parentView;\n    this._def = _def;\n  }\n  /**\n   * @param {?} context\n   * @return {?}\n   */\n  createEmbeddedView(context) {\n    return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */this._def.element.template, context));\n  }\n  /**\n   * @return {?}\n   */\n  get elementRef() {\n    return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n  return new Injector_(view, elDef);\n}\nclass Injector_ {\n  /**\n   * @param {?} view\n   * @param {?} elDef\n   */\n  constructor(view, elDef) {\n    this.view = view;\n    this.elDef = elDef;\n  }\n  /**\n   * @param {?} token\n   * @param {?=} notFoundValue\n   * @return {?}\n   */\n  get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    const /** @type {?} */allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n    return Services.resolveDep(this.view, this.elDef, allowPrivateServices, {\n      flags: 0 /* None */,\n      token,\n      tokenKey: tokenKey(token)\n    }, notFoundValue);\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n  const /** @type {?} */def = view.def.nodes[index];\n  if (def.flags & 1 /* TypeElement */) {\n    const /** @type {?} */elData = asElementData(view, def.nodeIndex);\n    return def.element.template ? elData.template : elData.renderElement;\n  } else if (def.flags & 2 /* TypeText */) {\n    return asTextData(view, def.nodeIndex).renderText;\n  } else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n    return asProviderData(view, def.nodeIndex).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n  return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter {\n  /**\n   * @param {?} delegate\n   */\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  /**\n   * @param {?} selectorOrNode\n   * @return {?}\n   */\n  selectRootElement(selectorOrNode) {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n  /**\n   * @param {?} parent\n   * @param {?} namespaceAndName\n   * @return {?}\n   */\n  createElement(parent, namespaceAndName) {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const /** @type {?} */el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n  /**\n   * @param {?} hostElement\n   * @return {?}\n   */\n  createViewRoot(hostElement) {\n    return hostElement;\n  }\n  /**\n   * @param {?} parentElement\n   * @return {?}\n   */\n  createTemplateAnchor(parentElement) {\n    const /** @type {?} */comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n  /**\n   * @param {?} parentElement\n   * @param {?} value\n   * @return {?}\n   */\n  createText(parentElement, value) {\n    const /** @type {?} */node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n  /**\n   * @param {?} parentElement\n   * @param {?} nodes\n   * @return {?}\n   */\n  projectNodes(parentElement, nodes) {\n    for (let /** @type {?} */i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n  /**\n   * @param {?} node\n   * @param {?} viewRootNodes\n   * @return {?}\n   */\n  attachViewAfter(node, viewRootNodes) {\n    const /** @type {?} */parentElement = this.delegate.parentNode(node);\n    const /** @type {?} */nextSibling = this.delegate.nextSibling(node);\n    for (let /** @type {?} */i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n  /**\n   * @param {?} viewRootNodes\n   * @return {?}\n   */\n  detachView(viewRootNodes) {\n    for (let /** @type {?} */i = 0; i < viewRootNodes.length; i++) {\n      const /** @type {?} */node = viewRootNodes[i];\n      const /** @type {?} */parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n  /**\n   * @param {?} hostElement\n   * @param {?} viewAllNodes\n   * @return {?}\n   */\n  destroyView(hostElement, viewAllNodes) {\n    for (let /** @type {?} */i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode(viewAllNodes[i]);\n    }\n  }\n  /**\n   * @param {?} renderElement\n   * @param {?} name\n   * @param {?} callback\n   * @return {?}\n   */\n  listen(renderElement, name, callback) {\n    return this.delegate.listen(renderElement, name, /** @type {?} */callback);\n  }\n  /**\n   * @param {?} target\n   * @param {?} name\n   * @param {?} callback\n   * @return {?}\n   */\n  listenGlobal(target, name, callback) {\n    return this.delegate.listen(target, name, /** @type {?} */callback);\n  }\n  /**\n   * @param {?} renderElement\n   * @param {?} propertyName\n   * @param {?} propertyValue\n   * @return {?}\n   */\n  setElementProperty(renderElement, propertyName, propertyValue) {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n  /**\n   * @param {?} renderElement\n   * @param {?} namespaceAndName\n   * @param {?} attributeValue\n   * @return {?}\n   */\n  setElementAttribute(renderElement, namespaceAndName, attributeValue) {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n  /**\n   * @param {?} renderElement\n   * @param {?} propertyName\n   * @param {?} propertyValue\n   * @return {?}\n   */\n  setBindingDebugInfo(renderElement, propertyName, propertyValue) {}\n  /**\n   * @param {?} renderElement\n   * @param {?} className\n   * @param {?} isAdd\n   * @return {?}\n   */\n  setElementClass(renderElement, className, isAdd) {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n  /**\n   * @param {?} renderElement\n   * @param {?} styleName\n   * @param {?} styleValue\n   * @return {?}\n   */\n  setElementStyle(renderElement, styleName, styleValue) {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n  /**\n   * @param {?} renderElement\n   * @param {?} methodName\n   * @param {?} args\n   * @return {?}\n   */\n  invokeElementMethod(renderElement, methodName, args) {\n    renderElement[methodName].apply(renderElement, args);\n  }\n  /**\n   * @param {?} renderNode\n   * @param {?} text\n   * @return {?}\n   */\n  setText(renderNode$$1, text) {\n    this.delegate.setValue(renderNode$$1, text);\n  }\n  /**\n   * @return {?}\n   */\n  animate() {\n    throw new Error('Renderer.animate is no longer supported!');\n  }\n}\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ {\n  /**\n   * @param {?} _moduleType\n   * @param {?} _parent\n   * @param {?} _bootstrapComponents\n   * @param {?} _def\n   */\n  constructor(_moduleType, _parent, _bootstrapComponents, _def) {\n    this._moduleType = _moduleType;\n    this._parent = _parent;\n    this._bootstrapComponents = _bootstrapComponents;\n    this._def = _def;\n    this._destroyListeners = [];\n    this._destroyed = false;\n    initNgModule(this);\n  }\n  /**\n   * @param {?} token\n   * @param {?=} notFoundValue\n   * @return {?}\n   */\n  get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    return resolveNgModuleDep(this, {\n      token: token,\n      tokenKey: tokenKey(token),\n      flags: 0 /* None */\n    }, notFoundValue);\n  }\n  /**\n   * @return {?}\n   */\n  get instance() {\n    return this.get(this._moduleType);\n  }\n  /**\n   * @return {?}\n   */\n  get componentFactoryResolver() {\n    return this.get(ComponentFactoryResolver);\n  }\n  /**\n   * @return {?}\n   */\n  get injector() {\n    return this;\n  }\n  /**\n   * @return {?}\n   */\n  destroy() {\n    if (this._destroyed) {\n      throw new Error(`The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n    this._destroyListeners.forEach(listener => listener());\n  }\n  /**\n   * @param {?} callback\n   * @return {?}\n   */\n  onDestroy(callback) {\n    this._destroyListeners.push(callback);\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RendererV1TokenKey = tokenKey(Renderer);\nconst Renderer2TokenKey = tokenKey(Renderer2);\nconst ElementRefTokenKey = tokenKey(ElementRef);\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n  const /** @type {?} */bindings = [];\n  if (props) {\n    for (let /** @type {?} */prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: 8 /* TypeProperty */,\n        name: prop,\n        nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const /** @type {?} */outputDefs = [];\n  if (outputs) {\n    for (let /** @type {?} */propName in outputs) {\n      outputDefs.push({\n        type: 1 /* DirectiveOutput */,\n        propName,\n        target: null,\n        eventName: outputs[propName]\n      });\n    }\n  }\n  flags |= 16384 /* TypeDirective */;\n  return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n  flags |= 16 /* TypePipe */;\n  return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n  return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n  const {\n    matchedQueries,\n    references,\n    matchedQueryIds\n  } = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n  const /** @type {?} */depDefs = splitDepsDsl(deps);\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries,\n    matchedQueryIds,\n    references,\n    ngContentIndex: -1,\n    childCount,\n    bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs,\n    element: null,\n    provider: {\n      token,\n      value,\n      deps: depDefs\n    },\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n  return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n  // deps are looked up from component.\n  let /** @type {?} */compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const /** @type {?} */allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass( /** @type {?} */compView.parent, /** @type {?} */viewParentEl(compView), allowPrivateServices, /** @type {?} */def.provider.value, /** @type {?} */def.provider.deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n  // components can see other private services, other directives can't.\n  const /** @type {?} */allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n  // directives are always eager and classes!\n  const /** @type {?} */instance = createClass(view, /** @type {?} */def.parent, allowPrivateServices, /** @type {?} */def.provider.value, /** @type {?} */def.provider.deps);\n  if (def.outputs.length) {\n    for (let /** @type {?} */i = 0; i < def.outputs.length; i++) {\n      const /** @type {?} */output = def.outputs[i];\n      const /** @type {?} */subscription = instance[output.propName].subscribe(eventHandlerClosure(view, /** @type {?} */def.parent.nodeIndex, output.eventName)); /** @type {?} */\n      view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n  return event => {\n    try {\n      return dispatchEvent(view, index, eventName, event);\n    } catch (e) {\n      // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n      view.root.errorHandler.handleError(e);\n    }\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  const /** @type {?} */providerData = asProviderData(view, def.nodeIndex);\n  const /** @type {?} */directive = providerData.instance;\n  let /** @type {?} */changed = false;\n  let /** @type {?} */changes = undefined;\n  const /** @type {?} */bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if (view.state & 2 /* FirstCheck */ && def.flags & 65536 /* OnInit */) {\n    directive.ngOnInit();\n  }\n  if (def.flags & 262144 /* DoCheck */) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n  const /** @type {?} */providerData = asProviderData(view, def.nodeIndex);\n  const /** @type {?} */directive = providerData.instance;\n  let /** @type {?} */changed = false;\n  let /** @type {?} */changes = undefined;\n  for (let /** @type {?} */i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if (view.state & 2 /* FirstCheck */ && def.flags & 65536 /* OnInit */) {\n    directive.ngOnInit();\n  }\n  if (def.flags & 262144 /* DoCheck */) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n  // private services can see other private services\n  const /** @type {?} */allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n  const /** @type {?} */providerDef = def.provider;\n  switch (def.flags & 201347067 /* Types */) {\n    case 512 /* TypeClassProvider */:\n      return createClass(view, /** @type {?} */def.parent, allowPrivateServices, /** @type {?} */providerDef.value, /** @type {?} */providerDef.deps);\n    case 1024 /* TypeFactoryProvider */:\n      return callFactory(view, /** @type {?} */def.parent, allowPrivateServices, /** @type {?} */providerDef.value, /** @type {?} */providerDef.deps);\n    case 2048 /* TypeUseExistingProvider */:\n      return resolveDep(view, /** @type {?} */def.parent, allowPrivateServices, /** @type {?} */providerDef.deps[0]);\n    case 256 /* TypeValueProvider */:\n      return providerDef.value;\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n  const /** @type {?} */len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const /** @type {?} */depValues = new Array(len);\n      for (let /** @type {?} */i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n  const /** @type {?} */len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const /** @type {?} */depValues = Array(len);\n      for (let /** @type {?} */i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nconst NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n  if (depDef.flags & 8 /* Value */) {\n    return depDef.token;\n  }\n  const /** @type {?} */startView = view;\n  if (depDef.flags & 2 /* Optional */) {\n    notFoundValue = null;\n  }\n  const /** @type {?} */tokenKey$$1 = depDef.tokenKey;\n  if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && elDef.element.componentView);\n  }\n  if (elDef && depDef.flags & 1 /* SkipSelf */) {\n    allowPrivateServices = false;\n    elDef = elDef.parent;\n  }\n  while (view) {\n    if (elDef) {\n      switch (tokenKey$$1) {\n        case RendererV1TokenKey:\n          {\n            const /** @type {?} */compView = findCompView(view, elDef, allowPrivateServices);\n            return createRendererV1(compView);\n          }\n        case Renderer2TokenKey:\n          {\n            const /** @type {?} */compView = findCompView(view, elDef, allowPrivateServices);\n            return compView.renderer;\n          }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(view, elDef.nodeIndex).viewContainer;\n        case TemplateRefTokenKey:\n          {\n            if (elDef.element.template) {\n              return asElementData(view, elDef.nodeIndex).template;\n            }\n            break;\n          }\n        case ChangeDetectorRefTokenKey:\n          {\n            let /** @type {?} */cdView = findCompView(view, elDef, allowPrivateServices);\n            return createChangeDetectorRef(cdView);\n          }\n        case InjectorRefTokenKey:\n          return createInjector(view, elDef);\n        default:\n          const /** @type {?} */providerDef = (allowPrivateServices ? elDef.element.allProviders : elDef.element.publicProviders)[tokenKey$$1];\n          if (providerDef) {\n            let /** @type {?} */providerData = asProviderData(view, providerDef.nodeIndex);\n            if (!providerData) {\n              providerData = {\n                instance: _createProviderInstance(view, providerDef)\n              };\n              view.nodes[providerDef.nodeIndex] = providerData;\n            }\n            return providerData.instance;\n          }\n      }\n    }\n    allowPrivateServices = isComponentView(view);\n    elDef = viewParentEl(view);\n    view = view.parent;\n  }\n  const /** @type {?} */value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR || notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n  let /** @type {?} */compView;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.nodeIndex).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n  if (def.flags & 32768 /* Component */) {\n    const /** @type {?} */compView = asElementData(view, /** @type {?} */def.parent.nodeIndex).componentView;\n    if (compView.def.flags & 2 /* OnPush */) {\n      compView.state |= 8 /* ChecksEnabled */;\n    }\n  }\n\n  const /** @type {?} */binding = def.bindings[bindingIdx];\n  const /** @type {?} */propName = binding.name;\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & 524288 /* OnChanges */) {\n    changes = changes || {};\n    let /** @type {?} */oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    const /** @type {?} */binding = def.bindings[bindingIdx];\n    changes[binding.nonMinifiedName] = new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const /** @type {?} */nodes = view.def.nodes;\n  for (let /** @type {?} */i = 0; i < nodes.length; i++) {\n    const /** @type {?} */nodeDef = nodes[i];\n    let /** @type {?} */parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && parent.flags & 1 /* TypeElement */ && i === parent.nodeIndex + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        callElementProvidersLifecycles(view, parent, lifecycles);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n  for (let /** @type {?} */i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n    const /** @type {?} */nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n  const /** @type {?} */providerData = asProviderData(view, index);\n  if (!providerData) {\n    return;\n  }\n  const /** @type {?} */provider = providerData.instance;\n  if (!provider) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & 1048576 /* AfterContentInit */) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & 2097152 /* AfterContentChecked */) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & 4194304 /* AfterViewInit */) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & 8388608 /* AfterViewChecked */) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & 131072 /* OnDestroy */) {\n    provider.ngOnDestroy();\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n  let /** @type {?} */bindingDefs = [];\n  for (let /** @type {?} */propName in bindings) {\n    const /** @type {?} */bindingType = bindings[propName];\n    bindingDefs.push({\n      propName,\n      bindingType\n    });\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    // TODO(vicb): check\n    checkIndex: -1,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {\n      id,\n      filterId: filterQueryId(id),\n      bindings: bindingDefs\n    },\n    ngContent: null\n  };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n  return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n  const /** @type {?} */queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let /** @type {?} */tplDef = view.parentNodeDef;\n    view = view.parent;\n    // content queries\n    const /** @type {?} */end = tplDef.nodeIndex + tplDef.childCount;\n    for (let /** @type {?} */i = 0; i <= end; i++) {\n      const /** @type {?} */nodeDef = view.def.nodes[i];\n      if (nodeDef.flags & 67108864 /* TypeContentQuery */ && nodeDef.flags & 536870912 /* DynamicQuery */ && (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if (nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex || !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) || !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n  // view queries\n  if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n    for (let /** @type {?} */i = 0; i < view.def.nodes.length; i++) {\n      const /** @type {?} */nodeDef = view.def.nodes[i];\n      if (nodeDef.flags & 134217728 /* TypeViewQuery */ && nodeDef.flags & 536870912 /* DynamicQuery */) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n  const /** @type {?} */queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (!queryList.dirty) {\n    return;\n  }\n  let /** @type {?} */directiveInstance;\n  let /** @type {?} */newValues = undefined;\n  if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n    const /** @type {?} */elementDef = nodeDef.parent.parent;\n    newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */nodeDef.query, []);\n    directiveInstance = asProviderData(view, /** @type {?} */nodeDef.parent.nodeIndex).instance;\n  } else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */nodeDef.query, []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const /** @type {?} */bindings = nodeDef.query.bindings;\n  let /** @type {?} */notify = false;\n  for (let /** @type {?} */i = 0; i < bindings.length; i++) {\n    const /** @type {?} */binding = bindings[i];\n    let /** @type {?} */boundValue;\n    switch (binding.bindingType) {\n      case 0 /* First */:\n        boundValue = queryList.first;\n        break;\n      case 1 /* All */:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n  for (let /** @type {?} */i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */nodeDef = view.def.nodes[i];\n    const /** @type {?} */valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template && (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n      const /** @type {?} */elementData = asElementData(view, i);\n      // check embedded views that were attached at the place of their template,\n      // but process child nodes first if some match the query (see issue #16568)\n      if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n        calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n        i += nodeDef.childCount;\n      }\n      if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n        const /** @type {?} */embeddedViews = elementData.viewContainer._embeddedViews;\n        for (let /** @type {?} */k = 0; k < embeddedViews.length; k++) {\n          const /** @type {?} */embeddedView = embeddedViews[k];\n          const /** @type {?} */dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const /** @type {?} */projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */k = 0; k < projectedViews.length; k++) {\n          const /** @type {?} */projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n  if (queryValueType != null) {\n    // a match\n    switch (queryValueType) {\n      case 1 /* RenderElement */:\n        return asElementData(view, nodeDef.nodeIndex).renderElement;\n      case 0 /* ElementRef */:\n        return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n      case 2 /* TemplateRef */:\n        return asElementData(view, nodeDef.nodeIndex).template;\n      case 3 /* ViewContainerRef */:\n        return asElementData(view, nodeDef.nodeIndex).viewContainer;\n      case 4 /* Provider */:\n        return asProviderData(view, nodeDef.nodeIndex).instance;\n    }\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex: -1,\n    flags: 8 /* TypeNgContent */,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {\n      index\n    }\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n  const /** @type {?} */parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const /** @type {?} */ngContentIndex = def.ngContent.index;\n  visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n  return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n  const /** @type {?} */keys = Object.keys(propToIndex);\n  const /** @type {?} */nbKeys = keys.length;\n  const /** @type {?} */propertyNames = new Array(nbKeys);\n  for (let /** @type {?} */i = 0; i < nbKeys; i++) {\n    const /** @type {?} */key = keys[i];\n    const /** @type {?} */index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n  return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n  const /** @type {?} */bindings = new Array(propertyNames.length);\n  for (let /** @type {?} */i = 0; i < propertyNames.length; i++) {\n    const /** @type {?} */prop = propertyNames[i];\n    bindings[i] = {\n      flags: 8 /* TypeProperty */,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0,\n    bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n  return {\n    value: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  const /** @type {?} */bindings = def.bindings;\n  let /** @type {?} */changed = false;\n  const /** @type {?} */bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n  if (changed) {\n    const /** @type {?} */data = asPureExpressionData(view, def.nodeIndex);\n    let /** @type {?} */value;\n    switch (def.flags & 201347067 /* Types */) {\n      case 32 /* TypePureArray */:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case 64 /* TypePureObject */:\n        value = {};\n        if (bindLen > 0) value[bindings[0].name] = v0;\n        if (bindLen > 1) value[bindings[1].name] = v1;\n        if (bindLen > 2) value[bindings[2].name] = v2;\n        if (bindLen > 3) value[bindings[3].name] = v3;\n        if (bindLen > 4) value[bindings[4].name] = v4;\n        if (bindLen > 5) value[bindings[5].name] = v5;\n        if (bindLen > 6) value[bindings[6].name] = v6;\n        if (bindLen > 7) value[bindings[7].name] = v7;\n        if (bindLen > 8) value[bindings[8].name] = v8;\n        if (bindLen > 9) value[bindings[9].name] = v9;\n        break;\n      case 128 /* TypePurePipe */:\n        const /** @type {?} */pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n  const /** @type {?} */bindings = def.bindings;\n  let /** @type {?} */changed = false;\n  for (let /** @type {?} */i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const /** @type {?} */data = asPureExpressionData(view, def.nodeIndex);\n    let /** @type {?} */value;\n    switch (def.flags & 201347067 /* Types */) {\n      case 32 /* TypePureArray */:\n        value = values;\n        break;\n      case 64 /* TypePureObject */:\n        value = {};\n        for (let /** @type {?} */i = 0; i < values.length; i++) {\n          value[bindings[i].name] = values[i];\n        }\n        break;\n      case 128 /* TypePurePipe */:\n        const /** @type {?} */pipe = values[0];\n        const /** @type {?} */params = values.slice(1);\n        value = pipe.transform(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n  const /** @type {?} */bindings = new Array(staticText.length - 1);\n  for (let /** @type {?} */i = 1; i < staticText.length; i++) {\n    bindings[i - 1] = {\n      flags: 8 /* TypeProperty */,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: staticText[i]\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags: 2 /* TypeText */,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex,\n    childCount: 0,\n    bindings,\n    bindingFlags: 8 /* TypeProperty */,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {\n      prefix: staticText[0]\n    },\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n  let /** @type {?} */renderNode$$1;\n  const /** @type {?} */renderer = view.renderer;\n  renderNode$$1 = renderer.createText( /** @type {?} */def.text.prefix);\n  const /** @type {?} */parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode$$1);\n  }\n  return {\n    renderText: renderNode$$1\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  let /** @type {?} */changed = false;\n  const /** @type {?} */bindings = def.bindings;\n  const /** @type {?} */bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n  if (changed) {\n    let /** @type {?} */value = def.text.prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const /** @type {?} */renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode$$1, value);\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n  const /** @type {?} */bindings = def.bindings;\n  let /** @type {?} */changed = false;\n  for (let /** @type {?} */i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let /** @type {?} */value = '';\n    for (let /** @type {?} */i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = def.text.prefix + value;\n    const /** @type {?} */renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode$$1, value);\n  }\n  return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n  const /** @type {?} */valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n  // clone nodes and set auto calculated values\n  let /** @type {?} */viewBindingCount = 0;\n  let /** @type {?} */viewDisposableCount = 0;\n  let /** @type {?} */viewNodeFlags = 0;\n  let /** @type {?} */viewRootNodeFlags = 0;\n  let /** @type {?} */viewMatchedQueries = 0;\n  let /** @type {?} */currentParent = null;\n  let /** @type {?} */currentRenderParent = null;\n  let /** @type {?} */currentElementHasPublicProviders = false;\n  let /** @type {?} */currentElementHasPrivateProviders = false;\n  let /** @type {?} */lastRenderRootNode = null;\n  for (let /** @type {?} */i = 0; i < nodes.length; i++) {\n    const /** @type {?} */node = nodes[i];\n    node.nodeIndex = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n    node.renderParent = currentRenderParent;\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n    if (node.element) {\n      const /** @type {?} */elDef = node.element;\n      elDef.publicProviders = currentParent ? currentParent.element.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n      if (node.element.template) {\n        viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n    validateNode(currentParent, node, nodes.length);\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n    if (!currentRenderParent && node.flags & 3 /* CatRenderNode */) {\n      lastRenderRootNode = node;\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true; /** @type {?} */\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent.element.publicProviders = Object.create( /** @type {?} */currentParent.element.publicProviders); /** @type {?} */\n        currentParent.element.allProviders = currentParent.element.publicProviders;\n      }\n      const /** @type {?} */isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n      const /** @type {?} */isComponent = (node.flags & 32768 /* Component */) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent.element.publicProviders[tokenKey( /** @type {?} */node.provider.token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true; /** @type {?} */\n          // Use prototypical inheritance to not get O(n^2) complexity...\n          currentParent.element.allProviders = Object.create( /** @type {?} */currentParent.element.publicProviders);\n        } /** @type {?} */\n        currentParent.element.allProviders[tokenKey( /** @type {?} */node.provider.token)] = node;\n      }\n      if (isComponent) {\n        currentParent.element.componentProvider = node;\n      }\n    }\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n    if (node.childCount > 0) {\n      currentParent = node;\n      if (!isNgContainer(node)) {\n        currentRenderParent = node;\n      }\n    } else {\n      // When the current node has no children, check if it is the last children of its parent.\n      // When it is, propagate the flags up.\n      // The loop is required because an element could be the last transitive children of several\n      // elements. We loop to either the root or the highest opened element (= with remaining\n      // children)\n      while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n        const /** @type {?} */newParent = currentParent.parent;\n        if (newParent) {\n          newParent.childFlags |= currentParent.childFlags;\n          newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n        // We also need to update the render parent & account for ng-container\n        if (currentParent && isNgContainer(currentParent)) {\n          currentRenderParent = currentParent.renderParent;\n        } else {\n          currentRenderParent = currentParent;\n        }\n      }\n    }\n  }\n  const /** @type {?} */handleEvent = (view, nodeIndex, eventName, event) => nodes[nodeIndex].element.handleEvent(view, eventName, event);\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries,\n    flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP,\n    handleEvent,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount,\n    lastRenderRootNode\n  };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n  return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n  const /** @type {?} */template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode && template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n      throw new Error(`Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.flags & 20224 /* CatProvider */) {\n    const /** @type {?} */parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & 1 /* TypeElement */) === 0) {\n      throw new Error(`Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & 67108864 /* TypeContentQuery */ && (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n      throw new Error(`Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n    }\n    if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n      throw new Error(`Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n    if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n      throw new Error(`Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n  const /** @type {?} */view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n  const /** @type {?} */rendererType = nodeDef.element.componentRendererType;\n  let /** @type {?} */compRenderer;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(parentView.root, compRenderer, parentView, /** @type {?} */nodeDef.element.componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n  const /** @type {?} */nodes = new Array(def.nodes.length);\n  const /** @type {?} */disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const /** @type {?} */view = {\n    def,\n    parent,\n    viewContainerParent: null,\n    parentNodeDef,\n    context: null,\n    component: null,\n    nodes,\n    state: 13 /* CatInit */,\n    root,\n    renderer,\n    oldValues: new Array(def.bindingCount),\n    disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n  let /** @type {?} */renderHost;\n  if (isComponentView(view)) {\n    const /** @type {?} */hostDef = view.parentNodeDef;\n    renderHost = asElementData( /** @type {?} */view.parent, /** @type {?} */hostDef.parent.nodeIndex).renderElement;\n  }\n  const /** @type {?} */def = view.def;\n  const /** @type {?} */nodes = view.nodes;\n  for (let /** @type {?} */i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let /** @type {?} */nodeData;\n    switch (nodeDef.flags & 201347067 /* Types */) {\n      case 1 /* TypeElement */:\n        const /** @type {?} */el = createElement(view, renderHost, nodeDef);\n        let /** @type {?} */componentView = undefined;\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n          const /** @type {?} */compViewDef = resolveDefinition( /** @type {?} */nodeDef.element.componentView);\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = {\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: /** @type {?} */nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n        };\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case 2 /* TypeText */:\n        nodeData = createText(view, renderHost, nodeDef);\n        break;\n      case 512 /* TypeClassProvider */:\n      case 1024 /* TypeFactoryProvider */:\n      case 2048 /* TypeUseExistingProvider */:\n      case 256 /* TypeValueProvider */:\n        {\n          nodeData = nodes[i];\n          if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n            const /** @type {?} */instance = createProviderInstance(view, nodeDef);\n            nodeData = {\n              instance\n            };\n          }\n          break;\n        }\n      case 16 /* TypePipe */:\n        {\n          const /** @type {?} */instance = createPipeInstance(view, nodeDef);\n          nodeData = {\n            instance\n          };\n          break;\n        }\n      case 16384 /* TypeDirective */:\n        {\n          nodeData = nodes[i];\n          if (!nodeData) {\n            const /** @type {?} */instance = createDirectiveInstance(view, nodeDef);\n            nodeData = {\n              instance\n            };\n          }\n          if (nodeDef.flags & 32768 /* Component */) {\n            const /** @type {?} */compView = asElementData(view, /** @type {?} */nodeDef.parent.nodeIndex).componentView;\n            initView(compView, nodeData.instance, nodeData.instance);\n          }\n          break;\n        }\n      case 32 /* TypePureArray */:\n      case 64 /* TypePureObject */:\n      case 128 /* TypePurePipe */:\n        nodeData = createPureExpression(view, nodeDef);\n        break;\n      case 67108864 /* TypeContentQuery */:\n      case 134217728 /* TypeViewQuery */:\n        nodeData = createQuery();\n        break;\n      case 8 /* TypeNgContent */:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n  // fill static content and view queries\n  execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, 1 /* CheckNoChanges */);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, 1 /* CheckNoChanges */);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n  if (view.state & 1 /* BeforeFirstCheck */) {\n    view.state &= ~1 /* BeforeFirstCheck */;\n    view.state |= 2 /* FirstCheck */;\n  } else {\n    view.state &= ~2 /* FirstCheck */;\n  }\n\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n  callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n  Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n  callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n  if (view.def.flags & 2 /* OnPush */) {\n    view.state &= ~8 /* ChecksEnabled */;\n  }\n\n  view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  if (argStyle === 0 /* Inline */) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n  const /** @type {?} */def = view.def;\n  if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n    return;\n  }\n  for (let /** @type {?} */i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */nodeDef = def.nodes[i];\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n      const /** @type {?} */projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */i = 0; i < projectedViews.length; i++) {\n          const /** @type {?} */projectedView = projectedViews[i];\n          projectedView.state |= 32 /* CheckProjectedView */;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  switch (nodeDef.flags & 201347067 /* Types */) {\n    case 1 /* TypeElement */:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case 2 /* TypeText */:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case 16384 /* TypeDirective */:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case 32 /* TypePureArray */:\n    case 64 /* TypePureObject */:\n    case 128 /* TypePurePipe */:\n      return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    default:\n      throw 'unreachable';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n  switch (nodeDef.flags & 201347067 /* Types */) {\n    case 1 /* TypeElement */:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case 2 /* TypeText */:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case 16384 /* TypeDirective */:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case 32 /* TypePureArray */:\n    case 64 /* TypePureObject */:\n    case 128 /* TypePurePipe */:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n    default:\n      throw 'unreachable';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  if (argStyle === 0 /* Inline */) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  const /** @type {?} */bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n  for (let /** @type {?} */i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n  const /** @type {?} */queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), `Query ${/** @type {?} */nodeDef.query.id} not dirty`, `Query ${/** @type {?} */nodeDef.query.id} dirty`, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n  if (view.state & 128 /* Destroyed */) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n  if (view.disposables) {\n    for (let /** @type {?} */i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n  const /** @type {?} */len = view.def.nodes.length;\n  for (let /** @type {?} */i = 0; i < len; i++) {\n    const /** @type {?} */def = view.def.nodes[i];\n    if (def.flags & 1 /* TypeElement */) {\n      view.renderer.destroyNode(asElementData(view, i).renderElement);\n    } else if (def.flags & 2 /* TypeText */) {\n      view.renderer.destroyNode(asTextData(view, i).renderText);\n    } else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n      asQueryList(view, i).destroy();\n    }\n  }\n}\nlet ViewAction = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckNoChangesProjectedViews = 2;\nViewAction.CheckAndUpdate = 3;\nViewAction.CheckAndUpdateProjectedViews = 4;\nViewAction.Destroy = 5;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n  const /** @type {?} */def = view.def;\n  if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n    return;\n  }\n  for (let /** @type {?} */i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */nodeDef = def.nodes[i];\n    if (nodeDef.flags & 33554432 /* ComponentView */) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n  const /** @type {?} */def = view.def;\n  if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n    return;\n  }\n  for (let /** @type {?} */i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */nodeDef = def.nodes[i];\n    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n      // a leaf\n      const /** @type {?} */embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n      for (let /** @type {?} */k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n  const /** @type {?} */viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & 128 /* Destroyed */) === 0) {\n        if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n          checkNoChangesView(view);\n        } else if (viewState & 64 /* CheckProjectedViews */) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & 128 /* Destroyed */) === 0) {\n        if (viewState & 32 /* CheckProjectedView */) {\n          checkNoChangesView(view);\n        } else if (viewState & 64 /* CheckProjectedViews */) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & 128 /* Destroyed */) === 0) {\n        if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n          checkAndUpdateView(view);\n        } else if (viewState & 64 /* CheckProjectedViews */) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & 128 /* Destroyed */) === 0) {\n        if (viewState & 32 /* CheckProjectedView */) {\n          checkAndUpdateView(view);\n        } else if (viewState & 64 /* CheckProjectedViews */) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */i = 0; i < nodeCount; i++) {\n    const /** @type {?} */nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & queryFlags && nodeDef.flags & staticDynamicQueryFlag) {\n      Services.setCurrentNode(view, nodeDef.nodeIndex);\n      switch (checkType) {\n        case 0 /* CheckAndUpdate */:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case 1 /* CheckNoChanges */:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.clearProviderOverrides = services.clearProviderOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    clearProviderOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view, nodeIndex, eventName, event) => view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view, checkType) => view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view),\n    updateRenderer: (view, checkType) => view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view)\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    clearProviderOverrides: debugClearProviderOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer\n  };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n  const /** @type {?} */rendererFactory = ngModule.injector.get(RendererFactory2);\n  return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n  const /** @type {?} */rendererFactory = ngModule.injector.get(RendererFactory2);\n  const /** @type {?} */root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n  const /** @type {?} */defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n  const /** @type {?} */sanitizer = ngModule.injector.get(Sanitizer);\n  const /** @type {?} */errorHandler = ngModule.injector.get(ErrorHandler);\n  const /** @type {?} */renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector,\n    projectableNodes,\n    selectorOrNode: rootSelectorOrNode,\n    sanitizer,\n    rendererFactory,\n    renderer,\n    errorHandler\n  };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n  const /** @type {?} */defWithOverride = applyProviderOverridesToView(viewDef$$1);\n  return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n  const /** @type {?} */defWithOverride = applyProviderOverridesToView(viewDef$$1);\n  return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n  const /** @type {?} */defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nconst providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n  providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n  providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const /** @type {?} */elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory(() => NOOP);\n  for (let /** @type {?} */i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n  /**\n   * @param {?} def\n   * @return {?}\n   */\n  function findElementIndicesWithOverwrittenProviders(def) {\n    const /** @type {?} */elIndicesWithOverwrittenProviders = [];\n    let /** @type {?} */lastElementDef = null;\n    for (let /** @type {?} */i = 0; i < def.nodes.length; i++) {\n      const /** @type {?} */nodeDef = def.nodes[i];\n      if (nodeDef.flags & 1 /* TypeElement */) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ && providerOverrides.has( /** @type {?} */nodeDef.provider.token)) {\n        elIndicesWithOverwrittenProviders.push( /** @type {?} */lastElementDef.nodeIndex);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n  /**\n   * @param {?} viewDef\n   * @param {?} elIndex\n   * @return {?}\n   */\n  function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n    for (let /** @type {?} */i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n      const /** @type {?} */nodeDef = viewDef$$1.nodes[i];\n      if (nodeDef.flags & 1 /* TypeElement */) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n        const /** @type {?} */provider = nodeDef.provider;\n        const /** @type {?} */override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = nodeDef.flags & ~3840 /* CatProviderNoDirective */ | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n  const {\n    hasOverrides,\n    hasDeprecatedOverrides\n  } = calcHasOverrides(def);\n  if (!hasOverrides) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n  /**\n   * @param {?} def\n   * @return {?}\n   */\n  function calcHasOverrides(def) {\n    let /** @type {?} */hasOverrides = false;\n    let /** @type {?} */hasDeprecatedOverrides = false;\n    if (providerOverrides.size === 0) {\n      return {\n        hasOverrides,\n        hasDeprecatedOverrides\n      };\n    }\n    def.providers.forEach(node => {\n      const /** @type {?} */override = providerOverrides.get(node.token);\n      if (node.flags & 3840 /* CatProviderNoDirective */ && override) {\n        hasOverrides = true;\n        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n      }\n    });\n    return {\n      hasOverrides,\n      hasDeprecatedOverrides\n    };\n  }\n  /**\n   * @param {?} def\n   * @return {?}\n   */\n  function applyProviderOverrides(def) {\n    for (let /** @type {?} */i = 0; i < def.providers.length; i++) {\n      const /** @type {?} */provider = def.providers[i];\n      if (hasDeprecatedOverrides) {\n        // We had a bug where me made\n        // all providers lazy. Keep this logic behind a flag\n        // for migrating existing users.\n        provider.flags |= 4096 /* LazyProvider */;\n      }\n\n      const /** @type {?} */override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = provider.flags & ~3840 /* CatProviderNoDirective */ | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  const /** @type {?} */nodeDef = view.def.nodes[checkIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return nodeDef.flags & 224 /* CatPureExpression */ ? asPureExpressionData(view, checkIndex).value : undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n  const /** @type {?} */nodeDef = view.def.nodes[checkIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return nodeDef.flags & 224 /* CatPureExpression */ ? asPureExpressionData(view, checkIndex).value : undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nlet DebugAction = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nlet _currentAction;\nlet _currentView;\nlet _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n  if (view.state & 128 /* Destroyed */) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n  /**\n   * @param {?} view\n   * @param {?} nodeIndex\n   * @param {?} argStyle\n   * @param {...?} values\n   * @return {?}\n   */\n  function debugCheckDirectivesFn(view, nodeIndex, argStyle, ...values) {\n    const /** @type {?} */nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === 0 /* CheckAndUpdate */) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & 16384 /* TypeDirective */) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return nodeDef.flags & 224 /* CatPureExpression */ ? asPureExpressionData(view, nodeDef.nodeIndex).value : undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n  if (view.state & 128 /* Destroyed */) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n  /**\n   * @param {?} view\n   * @param {?} nodeIndex\n   * @param {?} argStyle\n   * @param {...?} values\n   * @return {?}\n   */\n  function debugCheckRenderNodeFn(view, nodeIndex, argStyle, ...values) {\n    const /** @type {?} */nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === 0 /* CheckAndUpdate */) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & 3 /* CatRenderNode */) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return nodeDef.flags & 224 /* CatPureExpression */ ? asPureExpressionData(view, nodeDef.nodeIndex).value : undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n  const /** @type {?} */changed = checkAndUpdateNode(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const /** @type {?} */values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n    if (nodeDef.flags & 16384 /* TypeDirective */) {\n      const /** @type {?} */bindingValues = {};\n      for (let /** @type {?} */i = 0; i < nodeDef.bindings.length; i++) {\n        const /** @type {?} */binding = nodeDef.bindings[i];\n        const /** @type {?} */value = values[i];\n        if (binding.flags & 8 /* TypeProperty */) {\n          bindingValues[normalizeDebugBindingName( /** @type {?} */binding.nonMinifiedName)] = normalizeDebugBindingValue(value);\n        }\n      }\n      const /** @type {?} */elDef = nodeDef.parent;\n      const /** @type {?} */el = asElementData(view, elDef.nodeIndex).renderElement;\n      if (!elDef.element.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let /** @type {?} */attr in bindingValues) {\n          const /** @type {?} */value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n  checkNoChangesNode(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch (e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n  for (let /** @type {?} */i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n  for (let /** @type {?} */i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & 3 /* CatRenderNode */ && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\nclass DebugContext_ {\n  /**\n   * @param {?} view\n   * @param {?} nodeIndex\n   */\n  constructor(view, nodeIndex) {\n    this.view = view;\n    this.nodeIndex = nodeIndex;\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n      elDef = elDef.parent;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView);\n        elView = elView.parent;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n  /**\n   * @return {?}\n   */\n  get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n  }\n  /**\n   * @return {?}\n   */\n  get injector() {\n    return createInjector(this.elView, this.elDef);\n  }\n  /**\n   * @return {?}\n   */\n  get component() {\n    return this.elOrCompView.component;\n  }\n  /**\n   * @return {?}\n   */\n  get context() {\n    return this.elOrCompView.context;\n  }\n  /**\n   * @return {?}\n   */\n  get providerTokens() {\n    const /** @type {?} */tokens = [];\n    if (this.elDef) {\n      for (let /** @type {?} */i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n        const /** @type {?} */childDef = this.elView.def.nodes[i];\n        if (childDef.flags & 20224 /* CatProvider */) {\n          tokens.push( /** @type {?} */childDef.provider.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n  /**\n   * @return {?}\n   */\n  get references() {\n    const /** @type {?} */references = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n      for (let /** @type {?} */i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n        const /** @type {?} */childDef = this.elView.def.nodes[i];\n        if (childDef.flags & 20224 /* CatProvider */) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n  /**\n   * @return {?}\n   */\n  get componentRenderElement() {\n    const /** @type {?} */elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n  /**\n   * @return {?}\n   */\n  get renderNode() {\n    return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) : renderNode(this.elView, this.elDef);\n  }\n  /**\n   * @param {?} console\n   * @param {...?} values\n   * @return {?}\n   */\n  logError(console, ...values) {\n    let /** @type {?} */logViewDef;\n    let /** @type {?} */logNodeIndex;\n    if (this.nodeDef.flags & 2 /* TypeText */) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.nodeIndex;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.nodeIndex;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const /** @type {?} */renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let /** @type {?} */currRenderNodeIndex = -1;\n    let /** @type {?} */nodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    }; /** @type {?} */\n    logViewDef.factory(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      console.error(...values);\n    }\n  }\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n  let /** @type {?} */renderNodeIndex = -1;\n  for (let /** @type {?} */i = 0; i <= nodeIndex; i++) {\n    const /** @type {?} */nodeDef = viewDef$$1.nodes[i];\n    if (nodeDef.flags & 3 /* CatRenderNode */) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n  while (view && !isComponentView(view)) {\n    view = view.parent;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, /** @type {?} */viewParentEl(view).nodeIndex);\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n  for (let /** @type {?} */refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n  const /** @type {?} */oldAction = _currentAction;\n  const /** @type {?} */oldView = _currentView;\n  const /** @type {?} */oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch (e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, /** @type {?} */getCurrentDebugContext());\n  }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 {\n  /**\n   * @param {?} delegate\n   */\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  /**\n   * @param {?} element\n   * @param {?} renderData\n   * @return {?}\n   */\n  createRenderer(element, renderData) {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n  /**\n   * @return {?}\n   */\n  begin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  end() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  whenRenderingDone() {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\nclass DebugRenderer2 {\n  /**\n   * @param {?} delegate\n   */\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  /**\n   * @return {?}\n   */\n  get data() {\n    return this.delegate.data;\n  }\n  /**\n   * @param {?} node\n   * @return {?}\n   */\n  destroyNode(node) {\n    removeDebugNodeFromIndex( /** @type {?} */getDebugNode(node));\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  destroy() {\n    this.delegate.destroy();\n  }\n  /**\n   * @param {?} name\n   * @param {?=} namespace\n   * @return {?}\n   */\n  createElement(name, namespace) {\n    const /** @type {?} */el = this.delegate.createElement(name, namespace);\n    const /** @type {?} */debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const /** @type {?} */debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  createComment(value) {\n    const /** @type {?} */comment = this.delegate.createComment(value);\n    const /** @type {?} */debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  createText(value) {\n    const /** @type {?} */text = this.delegate.createText(value);\n    const /** @type {?} */debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n  /**\n   * @param {?} parent\n   * @param {?} newChild\n   * @return {?}\n   */\n  appendChild(parent, newChild) {\n    const /** @type {?} */debugEl = getDebugNode(parent);\n    const /** @type {?} */debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n  /**\n   * @param {?} parent\n   * @param {?} newChild\n   * @param {?} refChild\n   * @return {?}\n   */\n  insertBefore(parent, newChild, refChild) {\n    const /** @type {?} */debugEl = getDebugNode(parent);\n    const /** @type {?} */debugChildEl = getDebugNode(newChild);\n    const /** @type {?} */debugRefEl = getDebugNode(refChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n  /**\n   * @param {?} parent\n   * @param {?} oldChild\n   * @return {?}\n   */\n  removeChild(parent, oldChild) {\n    const /** @type {?} */debugEl = getDebugNode(parent);\n    const /** @type {?} */debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n  /**\n   * @param {?} selectorOrNode\n   * @return {?}\n   */\n  selectRootElement(selectorOrNode) {\n    const /** @type {?} */el = this.delegate.selectRootElement(selectorOrNode);\n    const /** @type {?} */debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @param {?} value\n   * @param {?=} namespace\n   * @return {?}\n   */\n  setAttribute(el, name, value, namespace) {\n    const /** @type {?} */debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @param {?=} namespace\n   * @return {?}\n   */\n  removeAttribute(el, name, namespace) {\n    const /** @type {?} */debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @return {?}\n   */\n  addClass(el, name) {\n    const /** @type {?} */debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @return {?}\n   */\n  removeClass(el, name) {\n    const /** @type {?} */debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n  /**\n   * @param {?} el\n   * @param {?} style\n   * @param {?} value\n   * @param {?} flags\n   * @return {?}\n   */\n  setStyle(el, style, value, flags) {\n    const /** @type {?} */debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  /**\n   * @param {?} el\n   * @param {?} style\n   * @param {?} flags\n   * @return {?}\n   */\n  removeStyle(el, style, flags) {\n    const /** @type {?} */debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @param {?} value\n   * @return {?}\n   */\n  setProperty(el, name, value) {\n    const /** @type {?} */debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  /**\n   * @param {?} target\n   * @param {?} eventName\n   * @param {?} callback\n   * @return {?}\n   */\n  listen(target, eventName, callback) {\n    if (typeof target !== 'string') {\n      const /** @type {?} */debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n  /**\n   * @param {?} node\n   * @return {?}\n   */\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  /**\n   * @param {?} node\n   * @return {?}\n   */\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  /**\n   * @param {?} node\n   * @param {?} value\n   * @return {?}\n   */\n  setValue(node, value) {\n    return this.delegate.setValue(node, value);\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nfunction clearProviderOverrides() {\n  initServicesIfNeeded();\n  return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nclass NgModuleFactory_ extends NgModuleFactory {\n  /**\n   * @param {?} moduleType\n   * @param {?} _bootstrapComponents\n   * @param {?} _ngModuleDefFactory\n   */\n  constructor(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.moduleType = moduleType;\n    this._bootstrapComponents = _bootstrapComponents;\n    this._ngModuleDefFactory = _ngModuleDefFactory;\n  }\n  /**\n   * @param {?} parentInjector\n   * @return {?}\n   */\n  create(parentInjector) {\n    initServicesIfNeeded();\n    const /** @type {?} */def = resolveDefinition(this._ngModuleDefFactory);\n    return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n  return {\n    type: 7 /* Trigger */,\n    name,\n    definitions,\n    options: {}\n  };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles = null) {\n  return {\n    type: 4 /* Animate */,\n    styles,\n    timings\n  };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options = null) {\n  return {\n    type: 3 /* Group */,\n    steps,\n    options\n  };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options = null) {\n  return {\n    type: 2 /* Sequence */,\n    steps,\n    options\n  };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n  return {\n    type: 6 /* Style */,\n    styles: tokens,\n    offset: null\n  };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n  return {\n    type: 0 /* State */,\n    name,\n    styles,\n    options\n  };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n  return {\n    type: 5 /* Keyframes */,\n    steps\n  };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Transition Aliases (`:enter` and `:leave`)\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ])\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options = null) {\n  return {\n    type: 1 /* Transition */,\n    expr: stateChangeExpr,\n    animation: steps,\n    options\n  };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nconst AUTO_STYLE$$1 = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n  return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n  return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n  return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n  return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n  return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n  return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n  return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n  return transition$1(stateChangeExpr, steps);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the core package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Class, createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, forwardRef, resolveForwardRef, Injector, ReflectiveInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, OpaqueToken, Inject, Optional, Injectable, Self, SkipSelf, Host, NgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER, ValueUnwrapper as ɵValueUnwrapper, devModeEqual as ɵdevModeEqual, isListLikeIterable as ɵisListLikeIterable, ChangeDetectorStatus as ɵChangeDetectorStatus, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy, Console as ɵConsole, ERROR_COMPONENT_TYPE as ɵERROR_COMPONENT_TYPE, ComponentFactory as ɵComponentFactory, CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver, ViewMetadata as ɵViewMetadata, ReflectionCapabilities as ɵReflectionCapabilities, RenderDebugInfo as ɵRenderDebugInfo, _global as ɵglobal, looseIdentical as ɵlooseIdentical, stringify as ɵstringify, makeDecorator as ɵmakeDecorator, isObservable as ɵisObservable, isPromise as ɵisPromise, clearProviderOverrides as ɵclearProviderOverrides, overrideProvider as ɵoverrideProvider, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, registerModuleFactory as ɵregisterModuleFactory, EMPTY_ARRAY as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, anchorDef as ɵand, createComponentFactory as ɵccf, createNgModuleFactory as ɵcmf, createRendererType2 as ɵcrt, directiveDef as ɵdid, elementDef as ɵeld, elementEventFullName as ɵelementEventFullName, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, moduleDef as ɵmod, moduleProvideDef as ɵmpd, ngContentDef as ɵncd, nodeValue as ɵnov, pipeDef as ɵpid, providerDef as ɵprd, pureArrayDef as ɵpad, pureObjectDef as ɵpod, purePipeDef as ɵppd, queryDef as ɵqud, textDef as ɵted, unwrapValue as ɵunv, viewDef as ɵvid, AUTO_STYLE$$1 as AUTO_STYLE, trigger$$1 as trigger, animate$$1 as animate, group$$1 as group, sequence$$1 as sequence, style$$1 as style, state$$1 as state, keyframes$$1 as keyframes, transition$$1 as transition, animate$1 as ɵx, group$1 as ɵy, keyframes$1 as ɵbc, sequence$1 as ɵz, state$1 as ɵbb, style$1 as ɵba, transition$1 as ɵbd, trigger$1 as ɵw, _iterableDiffersFactory as ɵk, _keyValueDiffersFactory as ɵl, _localeFactory as ɵm, ApplicationRef_ as ɵe, _appIdRandomProviderFactory as ɵf, defaultIterableDiffers as ɵg, defaultKeyValueDiffers as ɵh, DefaultIterableDifferFactory as ɵi, DefaultKeyValueDifferFactory as ɵj, ReflectiveInjector_ as ɵb, ReflectiveDependency as ɵc, resolveReflectiveProviders as ɵd, wtfEnabled as ɵn, createScope$1 as ɵp, detectWTF as ɵo, endTimeRange as ɵs, leave as ɵq, startTimeRange as ɵr, makeParamDecorator as ɵa, _def as ɵt, DebugContext as ɵu };","map":{"version":3,"names":["Observable","merge","share","Subject","OpaqueToken","constructor","_desc","toString","InjectionToken","desc","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","_symbolIterator","getSymbolIterator","Symbol","iterator","keys","Object","getOwnPropertyNames","Map","prototype","i","length","key","scheduleMicroTask","fn","Zone","current","looseIdentical","a","b","isNaN","stringify","token","overriddenName","name","res","newLineIndex","indexOf","substring","_nextClassId","Reflect","extractAnnotation","annotation","hasOwnProperty","applyParams","fnOrArray","String","Function","Number","Array","Error","isArray","annotations","annoLength","paramsAnnotations","ii","paramAnnotations","push","j","defineMetadata","Class","clsDef","undefined","proto","extends","create","constructorName","makeDecorator","props","parentClass","chainFn","metaCtor","makeMetadataCtor","DecoratorFactory","objOrType","getOwnMetadata","call","annotationInstance","chainAnnotation","TypeDecorator","cls","annotationCls","ctor","args","values","propName","makeParamDecorator","ParamDecoratorFactory","apply","ParamDecorator","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","selector","data","assign","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ChangeDetectionStrategy","OnPush","Default","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","isDefaultChangeDetectionStrategy","changeDetectionStrategy","Directive","dir","Component","c","changeDetection","Pipe","p","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","ngModule","ViewEncapsulation","Emulated","Native","None","ViewMetadata","opts","templateUrl","template","styleUrls","styles","encapsulation","animations","interpolation","Version","full","major","split","minor","patch","slice","join","VERSION","Inject","Optional","Injectable","Self","SkipSelf","Host","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","_NullInjector","get","notFoundValue","Injector","NULL","ERROR_COMPONENT_TYPE","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","error","getOriginalError","getErrorLogger","defaultErrorLogger","console","ErrorHandler","deprecatedParameter","_console","handleError","originalError","_findOriginalError","context","_findContext","errorLogger","e","wrappedError","message","msg","findFirstClosedCycle","constructResolvingPath","reversed","reverse","tokenStrs","map","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","invalidProviderError","provider","noAnnotationError","typeOrFunc","params","signature","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","has","newKey","set","size","Type","isType","v","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","factory","t","_zipTypesAndAnnotations","paramTypes","result","concat","_ownParameters","parentCtor","exec","tsickleCtorParams","ctorParameters","ctorParam","convertTsickleDecoratorIntoMetadata","decorators","fill","getParentCtor","_ownAnnotations","ownAnnotations","parentAnnotations","_ownPropMetadata","propMetadata","propDecorators","forEach","prop","parentPropMetadata","ownPropMetadata","hasLifecycleHook","lcProperty","getter","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","parentProto","getPrototypeOf","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","reflector","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","multiProvider","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","useClass","_dependenciesFor","useExisting","aliasInstance","useFactory","constructDependencies","deps","useValue","resolveReflectiveProvider","provide","multi","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","resolvedProvider","_extractToken","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","parent","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","resolveAndCreateChild","createChildFromResolved","resolveAndInstantiate","instantiateResolved","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","inj","_instantiateProvider","getProviderAtIndex","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","obj","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","_mapProviders","isPromise","then","isObservable","subscribe","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","_done","_donePromise","Promise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","done","donePromise","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getNgContentSelectors","component","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","createCompiler","options","ComponentRef","location","instance","hostView","changeDetectorRef","componentType","destroy","onDestroy","callback","ComponentFactory","ngContentSelectors","inputs","outputs","projectableNodes","rootSelectorOrNode","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","NgModuleRef","componentFactoryResolver","NgModuleFactory","parentInjector","trace","events","detectWTF","wtf","createScope$1","flags","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","s","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","value","next","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runGuarded","runOutsideAngular","checkStable","zone","properties","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","source","invoke","onHasTask","hasTaskState","hasTask","change","microTask","macroTask","onHandleError","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","pop","whenStable","getPendingRequestCount","findBindings","using","exactMatch","findProviders","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","setTestabilityGetter","_devMode","_runModeLocked","_platform","ALLOW_MULTIPLE_PLATFORMS","enableProdMode","isDevMode","NgProbeToken","createPlatform","destroyed","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","assertPlatform","requiredToken","destroyPlatform","bootstrapModuleFactory","moduleFactory","bootstrapModule","compilerOptions","_callAndReportToErrorHandler","errorHandler","ngZone","PlatformRef_","_injector","_modules","_destroyListeners","_destroyed","module","listener","_bootstrapModuleFactoryWithZone","ngZoneInjector","moduleRef","exceptionHandler","remove","initStatus","_moduleDoBootstrap","_bootstrapModuleWithZone","compilerFactory","compiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","componentFactory","tick","componentTypes","components","attachView","view","detachView","viewCount","ApplicationRef_","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_rootComponents","_rootComponentTypes","_views","_runningTick","_enforceNoNewChanges","_stable","isCurrentlyStable","observer","stableSub","unstableSub","unsubscribe","_isStable","viewRef","attachToAppRef","detachFromAppRef","componentOrFactory","selectorOrNode","compRef","_unloadComponent","nativeElement","_loadComponent","componentRef","listeners","_tickScope","detectChanges","checkNoChanges","ngOnDestroy","list","el","splice","RenderComponentType","slotCount","RenderDebugInfo","providerTokens","references","Renderer","selectRootElement","debugInfo","createElement","parentElement","createViewRoot","hostElement","createTemplateAnchor","createText","projectNodes","nodes","attachViewAfter","node","viewRootNodes","destroyView","viewAllNodes","listen","renderElement","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","setBindingDebugInfo","setElementClass","className","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode","text","animate","element","startingStyles","keyframes","duration","delay","easing","previousPlayers","Renderer2Interceptor","RootRenderer","renderComponent","RendererFactory2","createRenderer","begin","end","whenRenderingDone","RendererStyleFlags2","Important","DashCase","Renderer2","namespace","createComment","appendChild","newChild","insertBefore","refChild","removeChild","oldChild","parentNode","nextSibling","setAttribute","removeAttribute","addClass","removeClass","setStyle","style","removeStyle","setProperty","setValue","ElementRef","NgModuleFactoryLoader","load","path","moduleFactories","registerModuleFactory","getModuleFactory","QueryList","_dirty","_results","_emitter","changes","last","filter","find","reduce","toArray","reset","flatten","notifyOnChanges","setDirty","dirty","flat","item","flatItem","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","offlineMode","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","TemplateRef","elementRef","createEmbeddedView","ViewContainerRef","clear","templateRef","createComponent","insert","move","currentIndex","detach","ChangeDetectorRef","markForCheck","reattach","ViewRef","EmbeddedViewRef","rootNodes","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","componentInstance","attributes","classes","childNodes","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","refIndex","query","predicate","results","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","children","triggerEventHandler","eventObj","asNativeElements","debugEls","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","WrappedValue","wrapped","wrap","ValueUnwrapper","hasWrappedValue","unwrap","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","comparator","iterator1","iterator2","item1","item2","iterateListLike","o","DefaultIterableDifferFactory","supports","cdRefOrTrackBy","trackByFn","DefaultIterableDiffer","trackByIdentity","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","collection","forEachItem","record","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","check","_reset","mayBeDirty","itemTrackBy","trackById","_mismatch","_verifyReinsertion","_addIdentityChange","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","previous","additions","moves","removals","identityChanges","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","isEmpty","moveOffset","DefaultKeyValueDifferFactory","cd","DefaultKeyValueDiffer","_records","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","iterableDiff","defaultIterableDiffers","defaultKeyValueDiffers","_reflector","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","Sanitizer","sanitize","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","nodeIndex","componentRenderElement","logError","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","clearProviderOverrides","checkAndUpdateView","checkNoChangesView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","_addDebugContext","bind","isViewDebugError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","unwrapValue","nodeIdx","bindingIdx","globalBindingIdx","def","bindingIndex","oldValues","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","createRendererType2","_renderCompCount","resolveRendererType2","isFilled","checkBinding","state","checkAndUpdateBinding","checkBindingNoChanges","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","nodeDef","startView","componentView","declaredViewContainer","parentView","parentNodeDef","viewParentEl","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","rootRenderNodes","renderNodes","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","root","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","bindings","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","EMPTY_ARRAY","EMPTY_MAP","anchorDef","templateFactory","outputIndex","checkIndex","childFlags","directChildFlags","childMatchedQueries","ns","attrs","componentProvider","publicProviders","allProviders","elementDef","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","securityContext","suffix","nonMinifiedName","outputDefs","elDef","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","bindView","renderValue","sanitizer","unit","UNDEFINED_VALUE","InjectorRefTokenKey$1","NgModuleRefTokenKey","moduleProvideDef","depDefs","moduleDef","providersByKey","initNgModule","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","depDef","tokenKey$$1","providerDef","providerInstance","injectable","_createClass","_callFactory","depValues","callNgModuleLifecycle","lifecycles","attachEmbeddedView","elementData","viewIndex","addToArray","attachProjectedView","prevView","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevRenderNode","arr","EMPTY_CONTEXT","createComponentFactory","viewDefFactory","ComponentFactory_","getComponentViewDefinitionFactory","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","ngModuleRef","contextInjector","viewRef_","viewData","createChangeDetectorRef","_viewContainerRef","_appRef","fs","rendererFactory","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector","allowPrivateServices","nodeValue","createRendererV1","RendererAdapter","comment","destroyNode","bootstrapComponents","NgModuleRef_","_moduleType","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","directiveDef","pipeDef","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","subscription","eventHandlerClosure","checkAndUpdateDirectiveInline","providerData","directive","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","findCompView","cdView","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","queryIds","nodeMatchedQueries","tplDef","checkAndUpdateQuery","queryList","directiveInstance","newValues","calcQueryValues","notify","boundValue","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","staticText","prefix","checkAndUpdateTextInline","_addInterpolationPart","checkAndUpdateTextDynamic","valueStr","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","validateNode","isPrivateService","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentFlags","parentEnd","anchorDef$$1","createView","initView","createViewNodes","rendererType","compRenderer","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","destroyViewNodes","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","callViewAction","viewState","execProjectedViewsAction","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","createProdServices","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDef$$1","applyProviderOverridesToNgModule","providerOverrides","override","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","applyProviderOverridesToElement","elIndicesWithOverwrittenProviders","lastElementDef","elIndex","hasOverrides","hasDeprecatedOverrides","calcHasOverrides","applyProviderOverrides","deprecatedBehavior","_currentAction","_currentView","_currentNodeIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","JSON","attr","camelCaseToDashCase","replace","CAMEL_CASE_REGEXP","input","m","toLowerCase","elView","elOrCompView","tokens","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","renderData","DebugRenderer2","debugCtx","debugEl","debugChildEl","debugRefEl","fullName","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","_ngModuleDefFactory","trigger$1","definitions","animate$1","timings","group$1","steps","sequence$1","style$1","state$1","keyframes$1","transition$1","stateChangeExpr","expr","animation","AUTO_STYLE$$1","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵValueUnwrapper","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵERROR_COMPONENT_TYPE","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵViewMetadata","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearProviderOverrides","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵregisterModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","AUTO_STYLE","trigger","group","sequence","transition","ɵx","ɵy","ɵbc","ɵz","ɵbb","ɵba","ɵbd","ɵw","ɵk","ɵl","ɵm","ɵe","ɵf","ɵg","ɵh","ɵi","ɵj","ɵb","ɵc","ɵd","ɵn","ɵp","ɵo","ɵs","ɵq","ɵr","ɵa","ɵt","ɵu"],"sources":["C:/Users/Montg/Documents/Final Year/APDS/POE/POE/node_modules/@angular/core/@angular/core.js"],"sourcesContent":["/**\n * @license Angular v4.4.7\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { share } from 'rxjs/operator/share';\nimport { Subject } from 'rxjs/Subject';\n\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n *\n * ```typescript\n * var t = new OpaqueToken(\"value\");\n *\n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n *\n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n *\n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n *\n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nclass OpaqueToken {\n    /**\n     * @param {?} _desc\n     */\n    constructor(_desc) {\n        this._desc = _desc;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `Token ${this._desc}`; }\n}\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nclass InjectionToken extends OpaqueToken {\n    /**\n     * @param {?} desc\n     */\n    constructor(desc) { super(desc); }\n    /**\n     * @return {?}\n     */\n    toString() { return `InjectionToken ${this._desc}`; }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _global = __window || __global || __self;\nlet _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        const /** @type {?} */ Symbol = _global['Symbol'];\n        if (Symbol && Symbol.iterator) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            const /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n                const /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    ((Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return `${token.overriddenName}`;\n    }\n    if (token.name) {\n        return `${token.name}`;\n    }\n    const /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    const /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet _nextClassId = 0;\nconst Reflect = _global['Reflect'];\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation) {\n    if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n        // it is a decorator, extract annotation\n        annotation = annotation.annotation;\n    }\n    return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray, key) {\n    if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n        fnOrArray === Number || fnOrArray === Array) {\n        throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n    }\n    if (typeof fnOrArray === 'function') {\n        return fnOrArray;\n    }\n    if (Array.isArray(fnOrArray)) {\n        const /** @type {?} */ annotations = (fnOrArray);\n        const /** @type {?} */ annoLength = annotations.length - 1;\n        const /** @type {?} */ fn = fnOrArray[annoLength];\n        if (typeof fn !== 'function') {\n            throw new Error(`Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n        }\n        if (annoLength != fn.length) {\n            throw new Error(`Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n        }\n        const /** @type {?} */ paramsAnnotations = [];\n        for (let /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n            const /** @type {?} */ paramAnnotations = [];\n            paramsAnnotations.push(paramAnnotations);\n            const /** @type {?} */ annotation = annotations[i];\n            if (Array.isArray(annotation)) {\n                for (let /** @type {?} */ j = 0; j < annotation.length; j++) {\n                    paramAnnotations.push(extractAnnotation(annotation[j]));\n                }\n            }\n            else if (typeof annotation === 'function') {\n                paramAnnotations.push(extractAnnotation(annotation));\n            }\n            else {\n                paramAnnotations.push(annotation);\n            }\n        }\n        Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n        return fn;\n    }\n    throw new Error(`Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n *\n * ## Basic Example\n *\n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n *\n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n *\n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n *\n * or equivalent to ES5:\n *\n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n *\n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n *\n * ### Example with parameter annotations\n *\n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class MyService {\n *   constructor(name: string, \\@Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n *\n * ### Example with inheritance\n *\n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n *\n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * \\@stable\n * @param {?} clsDef\n * @return {?}\n */\nfunction Class(clsDef) {\n    const /** @type {?} */ constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n    let /** @type {?} */ proto = constructor.prototype;\n    if (clsDef.hasOwnProperty('extends')) {\n        if (typeof clsDef.extends === 'function') {\n            ((constructor)).prototype = proto =\n                Object.create(((clsDef.extends)).prototype);\n        }\n        else {\n            throw new Error(`Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n        }\n    }\n    for (const /** @type {?} */ key in clsDef) {\n        if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n            proto[key] = applyParams(clsDef[key], key);\n        }\n    }\n    if (this && this.annotations instanceof Array) {\n        Reflect.defineMetadata('annotations', this.annotations, constructor);\n    }\n    const /** @type {?} */ constructorName = constructor['name'];\n    if (!constructorName || constructorName === 'constructor') {\n        ((constructor))['overriddenName'] = `class${_nextClassId++}`;\n    }\n    return (constructor);\n}\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (!(Reflect && Reflect.getOwnMetadata)) {\n            throw 'reflect-metadata shim is required when using class decorators';\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        const /** @type {?} */ annotationInstance = new ((DecoratorFactory))(objOrType);\n        const /** @type {?} */ chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n        chainAnnotation.push(annotationInstance);\n        const /** @type {?} */ TypeDecorator = (function TypeDecorator(cls) {\n            const /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n            annotations.push(annotationInstance);\n            Reflect.defineMetadata('annotations', annotations, cls);\n            return cls;\n        });\n        TypeDecorator.annotations = chainAnnotation;\n        TypeDecorator.Class = Class;\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.toString = () => `@${name}`;\n    ((DecoratorFactory)).annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor(...args) {\n        if (props) {\n            const /** @type {?} */ values = props(...args);\n            for (const /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory(...args) {\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        const /** @type {?} */ annotationInstance = new ((ParamDecoratorFactory))(...args);\n        ((ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            const /** @type {?} */ parameters = Reflect.getOwnMetadata('parameters', cls) || [];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            parameters[index] = parameters[index] || []; /** @type {?} */\n            ((parameters[index])).push(annotationInstance);\n            Reflect.defineMetadata('parameters', parameters, cls);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n    ((ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory(...args) {\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        const /** @type {?} */ decoratorInstance = new ((PropDecoratorFactory))(...args);\n        return function PropDecorator(target, name) {\n            const /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n            Reflect.defineMetadata('propMetadata', meta, target.constructor);\n        };\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.toString = () => `@${name}`;\n    ((PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nconst ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Attribute = makeParamDecorator('Attribute', (attributeName) => ({ attributeName }));\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nclass Query {\n}\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nconst ContentChildren = makePropDecorator('ContentChildren', (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: false, descendants: false }, data)), Query);\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst ContentChild = makePropDecorator('ContentChild', (selector, data = {}) => (Object.assign({ selector, first: true, isViewQuery: false, descendants: true }, data)), Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst ViewChildren = makePropDecorator('ViewChildren', (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: true, descendants: true }, data)), Query);\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst ViewChild = makePropDecorator('ViewChild', (selector, data) => (Object.assign({ selector, first: true, isViewQuery: true, descendants: true }, data)), Query);\n\nlet ChangeDetectionStrategy = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nlet ChangeDetectorStatus = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Directive = makeDecorator('Directive', (dir = {}) => dir);\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Component = makeDecorator('Component', (c = {}) => (Object.assign({ changeDetection: ChangeDetectionStrategy.Default }, c)), Directive);\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Pipe = makeDecorator('Pipe', (p) => (Object.assign({ pure: true }, p)));\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Input = makePropDecorator('Input', (bindingPropertyName) => ({ bindingPropertyName }));\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Output = makePropDecorator('Output', (bindingPropertyName) => ({ bindingPropertyName }));\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst HostBinding = makePropDecorator('HostBinding', (hostPropertyName) => ({ hostPropertyName }));\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst HostListener = makePropDecorator('HostListener', (eventName, args) => ({ eventName, args }));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nconst CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nconst NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst NgModule = makeDecorator('NgModule', (ngModule) => ngModule);\n\nlet ViewEncapsulation = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/**\n * Metadata properties available for configuring Views.\n *\n * For details on the `\\@Component` annotation, see {\\@link Component}.\n *\n * ### Example\n *\n * ```\n * \\@Component({\n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n *\n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n *\n * @deprecated Use Component instead.\n *\n * {\\@link Component}\n */\nclass ViewMetadata {\n    /**\n     * @param {?=} opts\n     */\n    constructor(opts = {}) {\n        this.templateUrl = opts.templateUrl;\n        this.template = opts.template;\n        this.styleUrls = opts.styleUrls;\n        this.styles = opts.styles;\n        this.encapsulation = opts.encapsulation;\n        this.animations = opts.animations;\n        this.interpolation = opts.interpolation;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nclass Version {\n    /**\n     * @param {?} full\n     */\n    constructor(full) {\n        this.full = full;\n    }\n    /**\n     * @return {?}\n     */\n    get major() { return this.full.split('.')[0]; }\n    /**\n     * @return {?}\n     */\n    get minor() { return this.full.split('.')[1]; }\n    /**\n     * @return {?}\n     */\n    get patch() { return this.full.split('.').slice(2).join('.'); }\n}\n/**\n * \\@stable\n */\nconst VERSION = new Version('4.4.7');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Inject = makeParamDecorator('Inject', (token) => ({ token }));\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Optional = makeParamDecorator('Optional');\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Injectable = makeDecorator('Injectable');\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nconst Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    ((forwardRefFn)).__forward_ref__ = forwardRef;\n    ((forwardRefFn)).toString = function () { return stringify(this()); };\n    return (((forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return ((type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _THROW_IF_NOT_FOUND = new Object();\nconst THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nclass _NullInjector {\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = _THROW_IF_NOT_FOUND) {\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(`No provider for ${stringify(token)}!`);\n        }\n        return notFoundValue;\n    }\n}\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nclass Injector {\n    /**\n     * Retrieves an instance from the injector based on the provided token.\n     * If not found:\n     * - Throws an error if no `notFoundValue` that is not equal to\n     * Injector.THROW_IF_NOT_FOUND is given\n     * - Returns the `notFoundValue` otherwise\n     * @abstract\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) { }\n    /**\n     * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n     * @suppress {duplicate}\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) { }\n}\nInjector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nInjector.NULL = new _NullInjector();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst ERROR_COMPONENT_TYPE = 'ngComponentType';\nconst ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nconst ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nconst ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return ((error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return ((error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return ((error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console, ...values) {\n    ((console.error))(...values);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nclass ErrorHandler {\n    /**\n     * @param {?=} deprecatedParameter\n     */\n    constructor(\n        /**\n         * @deprecated since v4.0 parameter no longer has an effect, as ErrorHandler will never\n         * rethrow.\n         */\n        deprecatedParameter) {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    handleError(error) {\n        const /** @type {?} */ originalError = this._findOriginalError(error);\n        const /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        const /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, `ERROR`, error);\n        if (originalError) {\n            errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    _findContext(error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    }\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    _findOriginalError(error) {\n        let /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    }\n}\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    const /** @type {?} */ msg = `${message} caused by: ${originalError instanceof Error ? originalError.message : originalError}`;\n    const /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    const /** @type {?} */ res = [];\n    for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        const /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        const /** @type {?} */ tokenStrs = reversed.map(k => stringify(k.token));\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    const /** @type {?} */ keys = [key];\n    const /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    const /** @type {?} */ error = ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    ((error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        const /** @type {?} */ first = stringify(keys[0].token);\n        return `No provider for ${first}!${constructResolvingPath(keys)}`;\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        const /** @type {?} */ first = stringify(keys[0].token);\n        return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(`Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    const /** @type {?} */ signature = [];\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        const /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * \\@experimental\n */\nclass ReflectiveKey {\n    /**\n     * Private\n     * @param {?} token\n     * @param {?} id\n     */\n    constructor(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n    }\n    /**\n     * Returns a stringified token.\n     * @return {?}\n     */\n    get displayName() { return stringify(this.token); }\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    static get(token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    }\n    /**\n     * @return {?} the number of keys registered in the system.\n     */\n    static get numberOfKeys() { return _globalKeyRegistry.numberOfKeys; }\n}\n/**\n * \\@internal\n */\nclass KeyRegistry {\n    constructor() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    get(token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return ((this._allKeys.get(token)));\n        }\n        const /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    }\n    /**\n     * @return {?}\n     */\n    get numberOfKeys() { return this._allKeys.size; }\n}\nconst _globalKeyRegistry = new KeyRegistry();\n\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nconst Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nconst DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nclass ReflectionCapabilities {\n    /**\n     * @param {?=} reflect\n     */\n    constructor(reflect) { this._reflect = reflect || _global['Reflect']; }\n    /**\n     * @return {?}\n     */\n    isReflectionEnabled() { return true; }\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    factory(t) { return (...args) => new t(...args); }\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    _zipTypesAndAnnotations(paramTypes, paramAnnotations) {\n        let /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (let /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    }\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    _ownParameters(type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (((type)).parameters && ((type)).parameters !== parentCtor.parameters) {\n            return ((type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        const /** @type {?} */ tsickleCtorParams = ((type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            const /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            const /** @type {?} */ paramTypes = ctorParameters.map((ctorParam) => ctorParam && ctorParam.type);\n            const /** @type {?} */ paramAnnotations = ctorParameters.map((ctorParam) => ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // API for metadata created by invoking the decorators.\n        if (this._reflect != null && this._reflect.getOwnMetadata != null) {\n            const /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n            const /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(((type.length))).fill(undefined);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    parameters(type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        const /** @type {?} */ parentCtor = getParentCtor(type);\n        let /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    _ownAnnotations(typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (((typeOrFunc)).annotations && ((typeOrFunc)).annotations !== parentCtor.annotations) {\n            let /** @type {?} */ annotations = ((typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (((typeOrFunc)).decorators && ((typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(((typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (this._reflect && this._reflect.getOwnMetadata) {\n            return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n        }\n        return null;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    annotations(typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        const /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        const /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    _ownPropMetadata(typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (((typeOrFunc)).propMetadata &&\n            ((typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            let /** @type {?} */ propMetadata = ((typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (((typeOrFunc)).propDecorators &&\n            ((typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            const /** @type {?} */ propDecorators = ((typeOrFunc)).propDecorators;\n            const /** @type {?} */ propMetadata = ({});\n            Object.keys(propDecorators).forEach(prop => {\n                propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n            });\n            return propMetadata;\n        }\n        // API for metadata created by invoking the decorators.\n        if (this._reflect && this._reflect.getOwnMetadata) {\n            return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n        }\n        return null;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    propMetadata(typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        const /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            const /** @type {?} */ parentPropMetadata = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata).forEach((propName) => {\n                propMetadata[propName] = parentPropMetadata[propName];\n            });\n        }\n        const /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach((propName) => {\n                const /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push(...propMetadata[propName]);\n                }\n                decorators.push(...ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getter(name) { return (new Function('o', 'return o.' + name + ';')); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    setter(name) {\n        return (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    method(name) {\n        const /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n        return (new Function('o', 'args', functionBody));\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    importUri(type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return `./${stringify(type)}`;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    resourceUri(type) { return `./${stringify(type)}`; }\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    resolveIdentifier(name, moduleUrl, members, runtime) {\n        return runtime;\n    }\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    resolveEnum(enumIdentifier, name) { return enumIdentifier[name]; }\n}\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(decoratorInvocation => {\n        const /** @type {?} */ decoratorType = decoratorInvocation.type;\n        const /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        const /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new annotationCls(...annotationArgs);\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    const /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    const /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nclass Reflector {\n    /**\n     * @param {?} reflectionCapabilities\n     */\n    constructor(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    updateCapabilities(caps) { this.reflectionCapabilities = caps; }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    factory(type) { return this.reflectionCapabilities.factory(type); }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    parameters(typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    annotations(typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    propMetadata(typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getter(name) { return this.reflectionCapabilities.getter(name); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    setter(name) { return this.reflectionCapabilities.setter(name); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    method(name) { return this.reflectionCapabilities.method(name); }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    importUri(type) { return this.reflectionCapabilities.importUri(type); }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    resourceUri(type) { return this.reflectionCapabilities.resourceUri(type); }\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    resolveIdentifier(name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    resolveEnum(identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nconst reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nclass ReflectiveDependency {\n    /**\n     * @param {?} key\n     * @param {?} optional\n     * @param {?} visibility\n     */\n    constructor(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    static fromKey(key) {\n        return new ReflectiveDependency(key, false, null);\n    }\n}\nconst _EMPTY_LIST = [];\nclass ResolvedReflectiveProvider_ {\n    /**\n     * @param {?} key\n     * @param {?} resolvedFactories\n     * @param {?} multiProvider\n     */\n    constructor(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    /**\n     * @return {?}\n     */\n    get resolvedFactory() { return this.resolvedFactories[0]; }\n}\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nclass ResolvedReflectiveFactory {\n    /**\n     * @param {?} factory\n     * @param {?} dependencies\n     */\n    constructor(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n}\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    let /** @type {?} */ factoryFn;\n    let /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        const /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = (aliasInstance) => aliasInstance;\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = () => provider.useValue;\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    const /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    const /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    const /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n        const /** @type {?} */ provider = providers[i];\n        const /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (let /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            let /** @type {?} */ resolvedProvider;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(b => {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && ((b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        const /** @type {?} */ params = dependencies.map(t => [t]);\n        return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    const /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(p => p == null)) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    let /** @type {?} */ token = null;\n    let /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    let /** @type {?} */ visibility = null;\n    for (let /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        const /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nconst UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * \\@stable\n * @abstract\n */\nclass ReflectiveInjector {\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    static resolve(providers) {\n        return resolveReflectiveProviders(providers);\n    }\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    static resolveAndCreate(providers, parent) {\n        const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    }\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    static fromResolvedProviders(providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    }\n    /**\n     * Parent of this injector.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n     *\n     * ```typescript\n     * var parent = ReflectiveInjector.resolveAndCreate([]);\n     * var child = parent.resolveAndCreateChild([]);\n     * expect(child.parent).toBe(parent);\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    parent() { }\n    /**\n     * Resolves an array of providers and creates a child injector from those providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n     * var child = parent.resolveAndCreateChild([ChildProvider]);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     *\n     * This function is slower than the corresponding `createChildFromResolved`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#createChildFromResolved}.\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    resolveAndCreateChild(providers) { }\n    /**\n     * Creates a child injector from previously resolved providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n     * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n     *\n     * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n     * var child = parent.createChildFromResolved(childProviders);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    createChildFromResolved(providers) { }\n    /**\n     * Resolves a provider and instantiates an object in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     *\n     * var car = injector.resolveAndInstantiate(Car);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    resolveAndInstantiate(provider) { }\n    /**\n     * Instantiates an object using a resolved provider in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     * var carProvider = ReflectiveInjector.resolve([Car])[0];\n     * var car = injector.instantiateResolved(carProvider);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    instantiateResolved(provider) { }\n    /**\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) { }\n}\nclass ReflectiveInjector_ {\n    /**\n     * Private\n     * @param {?} _providers\n     * @param {?=} _parent\n     */\n    constructor(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this._parent = _parent || null;\n        const len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = THROW_IF_NOT_FOUND) {\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    }\n    /**\n     * @return {?}\n     */\n    get parent() { return this._parent; }\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    resolveAndCreateChild(providers) {\n        const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    }\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    createChildFromResolved(providers) {\n        const /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        inj._parent = this;\n        return inj;\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    resolveAndInstantiate(provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    instantiateResolved(provider) {\n        return this._instantiateProvider(provider);\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    getProviderAtIndex(index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    }\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    _new(provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    }\n    /**\n     * @return {?}\n     */\n    _getMaxNumberOfObjects() { return this.objs.length; }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    _instantiateProvider(provider) {\n        if (provider.multiProvider) {\n            const /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (let /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    }\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    _instantiate(provider, ResolvedReflectiveFactory$$1) {\n        const /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        let /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(dep => this._getByReflectiveDependency(dep));\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        let /** @type {?} */ obj;\n        try {\n            obj = factory(...deps);\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    }\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    _getByReflectiveDependency(dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    }\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    _getByKey(key, visibility, notFoundValue) {\n        if (key === INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    }\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    _getObjByKeyId(keyId) {\n        for (let /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    }\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    _throwOrNull(key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    _getByKeySelf(key, notFoundValue) {\n        const /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    }\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    _getByKeyDefault(key, notFoundValue, visibility) {\n        let /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this._parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            const /** @type {?} */ inj_ = (inj);\n            const /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_._parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get displayName() {\n        const /** @type {?} */ providers = _mapProviders(this, (b) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n        return `ReflectiveInjector(providers: [${providers}])`;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return this.displayName; }\n}\nconst INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    const /** @type {?} */ res = new Array(injector._providers.length);\n    for (let /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nconst APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nclass ApplicationInitStatus {\n    /**\n     * @param {?} appInits\n     */\n    constructor(appInits) {\n        this.appInits = appInits;\n        this.initialized = false;\n        this._done = false;\n        this._donePromise = new Promise((res, rej) => {\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    runInitializers() {\n        if (this.initialized) {\n            return;\n        }\n        const /** @type {?} */ asyncInitPromises = [];\n        const /** @type {?} */ complete = () => {\n            this._done = true;\n            this.resolve();\n        };\n        if (this.appInits) {\n            for (let /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                const /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    get done() { return this._done; }\n    /**\n     * @return {?}\n     */\n    get donePromise() { return this._donePromise; }\n}\nApplicationInitStatus.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nApplicationInitStatus.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nconst APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nconst APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nconst PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nconst PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nconst APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nconst PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass Console {\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    log(message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    warn(message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    }\n}\nConsole.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nConsole.ctorParameters = () => [];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nclass ModuleWithComponentFactories {\n    /**\n     * @param {?} ngModuleFactory\n     * @param {?} componentFactories\n     */\n    constructor(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n}\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nclass Compiler {\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleSync(moduleType) { throw _throwError(); }\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAsync(moduleType) { throw _throwError(); }\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsSync(moduleType) {\n        throw _throwError();\n    }\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsAsync(moduleType) {\n        throw _throwError();\n    }\n    /**\n     * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n     * the template of the given component.\n     * This is used by the `upgrade` library to compile the appropriate transclude content\n     * in the AngularJS wrapper component.\n     *\n     * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n     * @param {?} component\n     * @return {?}\n     */\n    getNgContentSelectors(component) { throw _throwError(); }\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    clearCache() { }\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    clearCacheFor(type) { }\n}\nCompiler.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nCompiler.ctorParameters = () => [];\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nconst COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nclass CompilerFactory {\n    /**\n     * @abstract\n     * @param {?=} options\n     * @return {?}\n     */\n    createCompiler(options) { }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nclass ComponentRef {\n    /**\n     * Location of the Host Element of this Component Instance.\n     * @abstract\n     * @return {?}\n     */\n    location() { }\n    /**\n     * The injector on which the component instance exists.\n     * @abstract\n     * @return {?}\n     */\n    injector() { }\n    /**\n     * The instance of the Component.\n     * @abstract\n     * @return {?}\n     */\n    instance() { }\n    /**\n     * The {\\@link ViewRef} of the Host View of this Component instance.\n     * @abstract\n     * @return {?}\n     */\n    hostView() { }\n    /**\n     * The {\\@link ChangeDetectorRef} of the Component instance.\n     * @abstract\n     * @return {?}\n     */\n    changeDetectorRef() { }\n    /**\n     * The component type.\n     * @abstract\n     * @return {?}\n     */\n    componentType() { }\n    /**\n     * Destroys the component instance and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    destroy() { }\n    /**\n     * Allows to register a callback that will be called when the component is destroyed.\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { }\n}\n/**\n * \\@stable\n * @abstract\n */\nclass ComponentFactory {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    selector() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    componentType() { }\n    /**\n     * selector for all <ng-content> elements in the component.\n     * @abstract\n     * @return {?}\n     */\n    ngContentSelectors() { }\n    /**\n     * the inputs of the component.\n     * @abstract\n     * @return {?}\n     */\n    inputs() { }\n    /**\n     * the outputs of the component.\n     * @abstract\n     * @return {?}\n     */\n    outputs() { }\n    /**\n     * Creates a new component.\n     * @abstract\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) { }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    const /** @type {?} */ error = Error(`No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n    ((error))[ERROR_COMPONENT] = component;\n    return error;\n}\nconst ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nclass _NullComponentFactoryResolver {\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    resolveComponentFactory(component) {\n        throw noComponentFactoryError(component);\n    }\n}\n/**\n * \\@stable\n * @abstract\n */\nclass ComponentFactoryResolver {\n    /**\n     * @abstract\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    resolveComponentFactory(component) { }\n}\nComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\nclass CodegenComponentFactoryResolver {\n    /**\n     * @param {?} factories\n     * @param {?} _parent\n     * @param {?} _ngModule\n     */\n    constructor(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (let i = 0; i < factories.length; i++) {\n            const factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    resolveComponentFactory(component) {\n        let /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    }\n}\nclass ComponentFactoryBoundToModule extends ComponentFactory {\n    /**\n     * @param {?} factory\n     * @param {?} ngModule\n     */\n    constructor(factory, ngModule) {\n        super();\n        this.factory = factory;\n        this.ngModule = ngModule;\n    }\n    /**\n     * @return {?}\n     */\n    get selector() { return this.factory.selector; }\n    /**\n     * @return {?}\n     */\n    get componentType() { return this.factory.componentType; }\n    /**\n     * @return {?}\n     */\n    get ngContentSelectors() { return this.factory.ngContentSelectors; }\n    /**\n     * @return {?}\n     */\n    get inputs() { return this.factory.inputs; }\n    /**\n     * @return {?}\n     */\n    get outputs() { return this.factory.outputs; }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nclass NgModuleRef {\n    /**\n     * The injector that contains all of the providers of the NgModule.\n     * @abstract\n     * @return {?}\n     */\n    injector() { }\n    /**\n     * The ComponentFactoryResolver to get hold of the ComponentFactories\n     * declared in the `entryComponents` property of the module.\n     * @abstract\n     * @return {?}\n     */\n    componentFactoryResolver() { }\n    /**\n     * The NgModule instance.\n     * @abstract\n     * @return {?}\n     */\n    instance() { }\n    /**\n     * Destroys the module instance and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    destroy() { }\n    /**\n     * Allows to register a callback that will be called when the module is destroyed.\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { }\n}\n/**\n * \\@experimental\n * @abstract\n */\nclass NgModuleFactory {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    moduleType() { }\n    /**\n     * @abstract\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    create(parentInjector) { }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet trace;\nlet events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    const /** @type {?} */ wtf = ((_global) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope$1(signature, flags = null) {\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nconst wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nconst wtfCreateScope = wtfEnabled ? createScope$1 : (signature, flags) => noopScope;\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nconst wtfLeave = wtfEnabled ? leave : (s, r) => r;\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nconst wtfStartTimeRange = wtfEnabled ? startTimeRange : (rangeType, action) => null;\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nconst wtfEndTimeRange = wtfEnabled ? endTimeRange : (r) => null;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nclass EventEmitter extends Subject {\n    /**\n     * Creates an instance of {\\@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param {?=} isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    constructor(isAsync = false) {\n        super();\n        this.__isAsync = isAsync;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    emit(value) { super.next(value); }\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    subscribe(generatorOrNext, error, complete) {\n        let /** @type {?} */ schedulerFn;\n        let /** @type {?} */ errorFn = (err) => null;\n        let /** @type {?} */ completeFn = () => null;\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? (value) => {\n                setTimeout(() => generatorOrNext.next(value));\n            } : (value) => { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                    (err) => { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                    () => { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? (value) => { setTimeout(() => generatorOrNext(value)); } :\n                (value) => { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n            }\n        }\n        return super.subscribe(schedulerFn, errorFn, completeFn);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nclass NgZone {\n    /**\n     * @param {?} __0\n     */\n    constructor({ enableLongStackTrace = false }) {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueue in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        const self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    static isInAngularZone() { return Zone.current.get('isAngularZone') === true; }\n    /**\n     * @return {?}\n     */\n    static assertInAngularZone() {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    static assertNotInAngularZone() {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    }\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @param {?} fn\n     * @return {?}\n     */\n    run(fn) { return (((this)))._inner.run(fn); }\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @param {?} fn\n     * @return {?}\n     */\n    runGuarded(fn) { return (((this)))._inner.runGuarded(fn); }\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @param {?} fn\n     * @return {?}\n     */\n    runOutsideAngular(fn) { return (((this)))._outer.run(fn); }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(() => zone.onStable.emit(null));\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: (delegate, current, target, task, applyThis, applyArgs) => {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: (delegate, current, target, callback, applyThis, applyArgs, source) => {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: (delegate, current, target, hasTaskState) => {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: (delegate, current, target, error) => {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(() => zone.onError.emit(error));\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nclass Testability {\n    /**\n     * @param {?} _ngZone\n     */\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _watchAngularEvents() {\n        this._ngZone.onUnstable.subscribe({\n            next: () => {\n                this._didWork = true;\n                this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.subscribe({\n                next: () => {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(() => {\n                        this._isZoneStable = true;\n                        this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * @return {?}\n     */\n    increasePendingRequestCount() {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    }\n    /**\n     * @return {?}\n     */\n    decreasePendingRequestCount() {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    }\n    /**\n     * @return {?}\n     */\n    isStable() {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _runCallbacksIfReady() {\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(() => {\n                while (this._callbacks.length !== 0) {\n                    (((this._callbacks.pop())))(this._didWork);\n                }\n                this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    whenStable(callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    }\n    /**\n     * @return {?}\n     */\n    getPendingRequestCount() { return this._pendingCount; }\n    /**\n     * @deprecated use findProviders\n     * @param {?} using\n     * @param {?} provider\n     * @param {?} exactMatch\n     * @return {?}\n     */\n    findBindings(using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    }\n    /**\n     * @param {?} using\n     * @param {?} provider\n     * @param {?} exactMatch\n     * @return {?}\n     */\n    findProviders(using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    }\n}\nTestability.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nTestability.ctorParameters = () => [\n    { type: NgZone, },\n];\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nclass TestabilityRegistry {\n    constructor() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?} testability\n     * @return {?}\n     */\n    registerApplication(token, testability) {\n        this._applications.set(token, testability);\n    }\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    getTestability(elem) { return this._applications.get(elem) || null; }\n    /**\n     * @return {?}\n     */\n    getAllTestabilities() { return Array.from(this._applications.values()); }\n    /**\n     * @return {?}\n     */\n    getAllRootElements() { return Array.from(this._applications.keys()); }\n    /**\n     * @param {?} elem\n     * @param {?=} findInAncestors\n     * @return {?}\n     */\n    findTestabilityInTree(elem, findInAncestors = true) {\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    }\n}\nTestabilityRegistry.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nTestabilityRegistry.ctorParameters = () => [];\nclass _NoopGetTestability {\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    addToWindow(registry) { }\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        return null;\n    }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nlet _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet _devMode = true;\nlet _runModeLocked = false;\nlet _platform;\nconst ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nclass NgProbeToken {\n    /**\n     * @param {?} name\n     * @param {?} token\n     */\n    constructor(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    const /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach((init) => init());\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers = []) {\n    const /** @type {?} */ marker = new InjectionToken(`Platform: ${name}`);\n    return (extraProviders = []) => {\n        let /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    const /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n * @abstract\n */\nclass PlatformRef {\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @abstract\n     * @template M\n     * @param {?} moduleFactory\n     * @return {?}\n     */\n    bootstrapModuleFactory(moduleFactory) { }\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @abstract\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    bootstrapModule(moduleType, compilerOptions) { }\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { }\n    /**\n     * Retrieve the platform {\\@link Injector}, which is the parent injector for\n     * every Angular application on the page and provides singleton providers.\n     * @abstract\n     * @return {?}\n     */\n    injector() { }\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @abstract\n     * @return {?}\n     */\n    destroy() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    destroyed() { }\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        const /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch((e) => {\n                ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nclass PlatformRef_ extends PlatformRef {\n    /**\n     * @param {?} _injector\n     */\n    constructor(_injector) {\n        super();\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { this._destroyListeners.push(callback); }\n    /**\n     * @return {?}\n     */\n    get injector() { return this._injector; }\n    /**\n     * @return {?}\n     */\n    get destroyed() { return this._destroyed; }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(module => module.destroy());\n        this._destroyListeners.forEach(listener => listener());\n        this._destroyed = true;\n    }\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @return {?}\n     */\n    bootstrapModuleFactory(moduleFactory) {\n        return this._bootstrapModuleFactoryWithZone(moduleFactory);\n    }\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    _bootstrapModuleFactoryWithZone(moduleFactory, ngZone) {\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        if (!ngZone)\n            ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(() => {\n            const /** @type {?} */ ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], this.injector);\n            const /** @type {?} */ moduleRef = (moduleFactory.create(ngZoneInjector));\n            const /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(() => remove(this._modules, moduleRef)); /** @type {?} */\n            ((ngZone)).runOutsideAngular(() => ((ngZone)).onError.subscribe({ next: (error) => { exceptionHandler.handleError(error); } }));\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), () => {\n                const /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(() => {\n                    this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    }\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    bootstrapModule(moduleType, compilerOptions = []) {\n        return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n    }\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    _bootstrapModuleWithZone(moduleType, compilerOptions = [], ngZone) {\n        const /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        const /** @type {?} */ compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n        return compiler.compileModuleAsync(moduleType)\n            .then((moduleFactory) => this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone));\n    }\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    _moduleDoBootstrap(moduleRef) {\n        const /** @type {?} */ appRef = (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(`The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n                `Please define one of these.`);\n        }\n        this._modules.push(moduleRef);\n    }\n}\nPlatformRef_.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nPlatformRef_.ctorParameters = () => [\n    { type: Injector, },\n];\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n * @abstract\n */\nclass ApplicationRef {\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @abstract\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    bootstrap(componentFactory, rootSelectorOrNode) { }\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @abstract\n     * @return {?}\n     */\n    tick() { }\n    /**\n     * Get a list of component types registered to this application.\n     * This list is populated even before the component is created.\n     * @abstract\n     * @return {?}\n     */\n    componentTypes() { }\n    /**\n     * Get a list of components registered to this application.\n     * @abstract\n     * @return {?}\n     */\n    components() { }\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @abstract\n     * @param {?} view\n     * @return {?}\n     */\n    attachView(view) { }\n    /**\n     * Detaches a view from dirty checking again.\n     * @abstract\n     * @param {?} view\n     * @return {?}\n     */\n    detachView(view) { }\n    /**\n     * Returns the number of attached views.\n     * @abstract\n     * @return {?}\n     */\n    viewCount() { }\n    /**\n     * Returns an Observable that indicates when the application is stable or unstable.\n     * @abstract\n     * @return {?}\n     */\n    isStable() { }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nclass ApplicationRef_ extends ApplicationRef {\n    /**\n     * @param {?} _zone\n     * @param {?} _console\n     * @param {?} _injector\n     * @param {?} _exceptionHandler\n     * @param {?} _componentFactoryResolver\n     * @param {?} _initStatus\n     */\n    constructor(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        super();\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._rootComponents = [];\n        this._rootComponentTypes = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: () => { this._zone.run(() => { this.tick(); }); } });\n        const isCurrentlyStable = new Observable((observer) => {\n            this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks;\n            this._zone.runOutsideAngular(() => {\n                observer.next(this._stable);\n                observer.complete();\n            });\n        });\n        const isStable = new Observable((observer) => {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            let stableSub;\n            this._zone.runOutsideAngular(() => {\n                stableSub = this._zone.onStable.subscribe(() => {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(() => {\n                        if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                            !this._zone.hasPendingMicrotasks) {\n                            this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            const unstableSub = this._zone.onUnstable.subscribe(() => {\n                NgZone.assertInAngularZone();\n                if (this._stable) {\n                    this._stable = false;\n                    this._zone.runOutsideAngular(() => { observer.next(false); });\n                }\n            });\n            return () => {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this._isStable = merge(isCurrentlyStable, share.call(isStable));\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    attachView(viewRef) {\n        const /** @type {?} */ view = ((viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    detachView(viewRef) {\n        const /** @type {?} */ view = ((viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    }\n    /**\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    bootstrap(componentOrFactory, rootSelectorOrNode) {\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        let /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory = ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this._rootComponentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        const /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        const /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        const /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(() => { this._unloadComponent(compRef); });\n        const /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(`Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n        }\n        return compRef;\n    }\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _loadComponent(componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this._rootComponents.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        const /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach((listener) => listener(componentRef));\n    }\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _unloadComponent(componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this._rootComponents, componentRef);\n    }\n    /**\n     * @return {?}\n     */\n    tick() {\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        const /** @type {?} */ scope = ApplicationRef_._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach((view) => view.detectChanges());\n            if (this._enforceNoNewChanges) {\n                this._views.forEach((view) => view.checkNoChanges());\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach((view) => view.destroy());\n    }\n    /**\n     * @return {?}\n     */\n    get viewCount() { return this._views.length; }\n    /**\n     * @return {?}\n     */\n    get componentTypes() { return this._rootComponentTypes; }\n    /**\n     * @return {?}\n     */\n    get components() { return this._rootComponents; }\n    /**\n     * @return {?}\n     */\n    get isStable() { return this._isStable; }\n}\n/**\n * \\@internal\n */\nApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\nApplicationRef_.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nApplicationRef_.ctorParameters = () => [\n    { type: NgZone, },\n    { type: Console, },\n    { type: Injector, },\n    { type: ErrorHandler, },\n    { type: ComponentFactoryResolver, },\n    { type: ApplicationInitStatus, },\n];\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    const /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nclass RenderComponentType {\n    /**\n     * @param {?} id\n     * @param {?} templateUrl\n     * @param {?} slotCount\n     * @param {?} encapsulation\n     * @param {?} styles\n     * @param {?} animations\n     */\n    constructor(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n}\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nclass RenderDebugInfo {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    injector() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    component() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    providerTokens() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    references() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    context() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    source() { }\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nclass Renderer {\n    /**\n     * @abstract\n     * @param {?} selectorOrNode\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    selectRootElement(selectorOrNode, debugInfo) { }\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} name\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    createElement(parentElement, name, debugInfo) { }\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @return {?}\n     */\n    createViewRoot(hostElement) { }\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    createTemplateAnchor(parentElement, debugInfo) { }\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} value\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    createText(parentElement, value, debugInfo) { }\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    projectNodes(parentElement, nodes) { }\n    /**\n     * @abstract\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    attachViewAfter(node, viewRootNodes) { }\n    /**\n     * @abstract\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    detachView(viewRootNodes) { }\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    destroyView(hostElement, viewAllNodes) { }\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    listen(renderElement, name, callback) { }\n    /**\n     * @abstract\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    listenGlobal(target, name, callback) { }\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    setElementProperty(renderElement, propertyName, propertyValue) { }\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} attributeName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    setElementAttribute(renderElement, attributeName, attributeValue) { }\n    /**\n     * Used only in debug mode to serialize property changes to dom nodes as attributes.\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    setBindingDebugInfo(renderElement, propertyName, propertyValue) { }\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    setElementClass(renderElement, className, isAdd) { }\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    setElementStyle(renderElement, styleName, styleValue) { }\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?=} args\n     * @return {?}\n     */\n    invokeElementMethod(renderElement, methodName, args) { }\n    /**\n     * @abstract\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    setText(renderNode, text) { }\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { }\n}\nconst Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nclass RootRenderer {\n    /**\n     * @abstract\n     * @param {?} componentType\n     * @return {?}\n     */\n    renderComponent(componentType) { }\n}\n/**\n * \\@experimental\n * @abstract\n */\nclass RendererFactory2 {\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    createRenderer(hostElement, type) { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    begin() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    end() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    whenRenderingDone() { }\n}\nlet RendererStyleFlags2 = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nclass Renderer2 {\n    /**\n     * This field can be used to store arbitrary data on this renderer instance.\n     * This is useful for renderers that delegate to other renderers.\n     * @abstract\n     * @return {?}\n     */\n    data() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    destroy() { }\n    /**\n     * @abstract\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    createElement(name, namespace) { }\n    /**\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    createComment(value) { }\n    /**\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    createText(value) { }\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    appendChild(parent, newChild) { }\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    insertBefore(parent, newChild, refChild) { }\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    removeChild(parent, oldChild) { }\n    /**\n     * @abstract\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    selectRootElement(selectorOrNode) { }\n    /**\n     * Attention: On WebWorkers, this will always return a value,\n     * as we are asking for a result synchronously. I.e.\n     * the caller can't rely on checking whether this is null or not.\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    parentNode(node) { }\n    /**\n     * Attention: On WebWorkers, this will always return a value,\n     * as we are asking for a result synchronously. I.e.\n     * the caller can't rely on checking whether this is null or not.\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    nextSibling(node) { }\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    setAttribute(el, name, value, namespace) { }\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    removeAttribute(el, name, namespace) { }\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    addClass(el, name) { }\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    removeClass(el, name) { }\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    setStyle(el, style, value, flags) { }\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    removeStyle(el, style, flags) { }\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setProperty(el, name, value) { }\n    /**\n     * @abstract\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(node, value) { }\n    /**\n     * @abstract\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    listen(target, eventName, callback) { }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\nclass ElementRef {\n    /**\n     * @param {?} nativeElement\n     */\n    constructor(nativeElement) { this.nativeElement = nativeElement; }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nclass NgModuleFactoryLoader {\n    /**\n     * @abstract\n     * @param {?} path\n     * @return {?}\n     */\n    load(path) { }\n}\nlet moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    const /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(`Duplicate module registered for ${id} - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    const /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(`No module with ID ${id} loaded`);\n    return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nclass QueryList {\n    constructor() {\n        this._dirty = true;\n        this._results = [];\n        this._emitter = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get changes() { return this._emitter; }\n    /**\n     * @return {?}\n     */\n    get length() { return this._results.length; }\n    /**\n     * @return {?}\n     */\n    get first() { return this._results[0]; }\n    /**\n     * @return {?}\n     */\n    get last() { return this._results[this.length - 1]; }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    map(fn) { return this._results.map(fn); }\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    filter(fn) {\n        return this._results.filter(fn);\n    }\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    find(fn) {\n        return this._results.find(fn);\n    }\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    reduce(fn, init) {\n        return this._results.reduce(fn, init);\n    }\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) { this._results.forEach(fn); }\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    some(fn) {\n        return this._results.some(fn);\n    }\n    /**\n     * @return {?}\n     */\n    toArray() { return this._results.slice(); }\n    /**\n     * @return {?}\n     */\n    [getSymbolIterator()]() { return ((this._results))[getSymbolIterator()](); }\n    /**\n     * @return {?}\n     */\n    toString() { return this._results.toString(); }\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    reset(res) {\n        this._results = flatten(res);\n        this._dirty = false;\n    }\n    /**\n     * @return {?}\n     */\n    notifyOnChanges() { this._emitter.emit(this); }\n    /**\n     * internal\n     * @return {?}\n     */\n    setDirty() { this._dirty = true; }\n    /**\n     * internal\n     * @return {?}\n     */\n    get dirty() { return this._dirty; }\n    /**\n     * internal\n     * @return {?}\n     */\n    destroy() {\n        this._emitter.complete();\n        this._emitter.unsubscribe();\n    }\n}\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce((flat, item) => {\n        const /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _SEPARATOR = '#';\nconst FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nclass SystemJsNgModuleLoaderConfig {\n}\nconst DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nclass SystemJsNgModuleLoader {\n    /**\n     * @param {?} _compiler\n     * @param {?=} config\n     */\n    constructor(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    load(path) {\n        const /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    loadAndCompile(path) {\n        let [module, exportName] = path.split(_SEPARATOR);\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then((module) => module[exportName])\n            .then((type) => checkNotEmpty(type, module, exportName))\n            .then((type) => this._compiler.compileModuleAsync(type));\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    loadFactory(path) {\n        let [module, exportName] = path.split(_SEPARATOR);\n        let /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then((module) => module[exportName + factoryClassSuffix])\n            .then((factory) => checkNotEmpty(factory, module, exportName));\n    }\n}\nSystemJsNgModuleLoader.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nSystemJsNgModuleLoader.ctorParameters = () => [\n    { type: Compiler, },\n    { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n];\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nclass TemplateRef {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    elementRef() { }\n    /**\n     * @abstract\n     * @param {?} context\n     * @return {?}\n     */\n    createEmbeddedView(context) { }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nclass ViewContainerRef {\n    /**\n     * Anchor element that specifies the location of this container in the containing View.\n     * <!-- TODO: rename to anchorElement -->\n     * @abstract\n     * @return {?}\n     */\n    element() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    injector() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    parentInjector() { }\n    /**\n     * Destroys all Views in this container.\n     * @abstract\n     * @return {?}\n     */\n    clear() { }\n    /**\n     * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n     * @abstract\n     * @param {?} index\n     * @return {?}\n     */\n    get(index) { }\n    /**\n     * Returns the number of Views currently attached to this container.\n     * @abstract\n     * @return {?}\n     */\n    length() { }\n    /**\n     * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n     * into this container at the specified `index`.\n     *\n     * If `index` is not specified, the new View will be inserted as the last View in the container.\n     *\n     * Returns the {\\@link ViewRef} for the newly created View.\n     * @abstract\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    createEmbeddedView(templateRef, context, index) { }\n    /**\n     * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n     * specified `index`.\n     *\n     * The component is instantiated using its {\\@link ComponentFactory} which can be\n     * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n     *\n     * If `index` is not specified, the new View will be inserted as the last View in the container.\n     *\n     * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n     *\n     * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n     * @abstract\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    createComponent(componentFactory, index, injector, projectableNodes, ngModule) { }\n    /**\n     * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n     *\n     * If `index` is not specified, the new View will be inserted as the last View in the container.\n     *\n     * Returns the inserted {\\@link ViewRef}.\n     * @abstract\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    insert(viewRef, index) { }\n    /**\n     * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n     *\n     * Returns the inserted {\\@link ViewRef}.\n     * @abstract\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    move(viewRef, currentIndex) { }\n    /**\n     * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n     * `-1` if this container doesn't contain the View.\n     * @abstract\n     * @param {?} viewRef\n     * @return {?}\n     */\n    indexOf(viewRef) { }\n    /**\n     * Destroys a View attached to this container at the specified `index`.\n     *\n     * If `index` is not specified, the last View in the container will be removed.\n     * @abstract\n     * @param {?=} index\n     * @return {?}\n     */\n    remove(index) { }\n    /**\n     * Use along with {\\@link #insert} to move a View within the current container.\n     *\n     * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n     * @abstract\n     * @param {?=} index\n     * @return {?}\n     */\n    detach(index) { }\n}\n\n/**\n * \\@stable\n * @abstract\n */\nclass ChangeDetectorRef {\n    /**\n     * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'cmp',\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     * })\n     * class Cmp {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     *   template: `\n     *     <cmp><cmp>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    markForCheck() { }\n    /**\n     * Detaches the change detector from the change detector tree.\n     *\n     * The detached change detector will not be checked until it is reattached.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n     * local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    detach() { }\n    /**\n     * Checks the change detector and its children.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n     * change detection\n     * checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check\n     * every five seconds.\n     *\n     * See {\\@link ChangeDetectorRef#detach} for more information.\n     * @abstract\n     * @return {?}\n     */\n    detectChanges() { }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't introduce\n     * other changes.\n     * @abstract\n     * @return {?}\n     */\n    checkNoChanges() { }\n    /**\n     * Reattach the change detector to the change detector tree.\n     *\n     * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n     * checked during the next change detection run.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class App {\n     *   live = true;\n     * }\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    reattach() { }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nclass ViewRef extends ChangeDetectorRef {\n    /**\n     * Destroys the view and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    destroy() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    destroyed() { }\n    /**\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { }\n}\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nclass EmbeddedViewRef extends ViewRef {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    context() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    rootNodes() { }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass EventListener {\n    /**\n     * @param {?} name\n     * @param {?} callback\n     */\n    constructor(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nclass DebugNode {\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    constructor(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return this._debugContext.injector; }\n    /**\n     * @return {?}\n     */\n    get componentInstance() { return this._debugContext.component; }\n    /**\n     * @return {?}\n     */\n    get context() { return this._debugContext.context; }\n    /**\n     * @return {?}\n     */\n    get references() { return this._debugContext.references; }\n    /**\n     * @return {?}\n     */\n    get providerTokens() { return this._debugContext.providerTokens; }\n    /**\n     * @deprecated since v4\n     * @return {?}\n     */\n    get source() { return 'Deprecated since v4'; }\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nclass DebugElement extends DebugNode {\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    constructor(nativeNode, parent, _debugContext) {\n        super(nativeNode, parent, _debugContext);\n        this.properties = {};\n        this.attributes = {};\n        this.classes = {};\n        this.styles = {};\n        this.childNodes = [];\n        this.nativeElement = nativeNode;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    addChild(child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    removeChild(child) {\n        const /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    }\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    insertChildrenAfter(child, newChildren) {\n        const /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n            newChildren.forEach(c => {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = this;\n            });\n        }\n    }\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    insertBefore(refChild, newChild) {\n        const /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    query(predicate) {\n        const /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    queryAll(predicate) {\n        const /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    queryAllNodes(predicate) {\n        const /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    }\n    /**\n     * @return {?}\n     */\n    get children() {\n        return (this.childNodes.filter((node) => node instanceof DebugElement));\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    triggerEventHandler(eventName, eventObj) {\n        this.listeners.forEach((listener) => {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    }\n}\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(node => {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(node => {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    const /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    const /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        const /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        const /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nclass WrappedValue {\n    /**\n     * @param {?} wrapped\n     */\n    constructor(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    static wrap(value) { return new WrappedValue(value); }\n}\n/**\n * Helper class for unwrapping WrappedValue s\n */\nclass ValueUnwrapper {\n    constructor() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    unwrap(value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    }\n    /**\n     * @return {?}\n     */\n    reset() { this.hasWrappedValue = false; }\n}\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nclass SimpleChange {\n    /**\n     * @param {?} previousValue\n     * @param {?} currentValue\n     * @param {?} firstChange\n     */\n    constructor(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    isFirstChange() { return this.firstChange; }\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    const /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    const /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        const /** @type {?} */ item1 = iterator1.next();\n        const /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (let /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        const /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        let /** @type {?} */ item;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DefaultIterableDifferFactory {\n    constructor() { }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    supports(obj) { return isListLikeIterable(obj); }\n    /**\n     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n     * @template V\n     * @param {?=} cdRefOrTrackBy\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    create(cdRefOrTrackBy, trackByFn) {\n        return new DefaultIterableDiffer(trackByFn || (cdRefOrTrackBy));\n    }\n}\nconst trackByIdentity = (index, item) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nclass DefaultIterableDiffer {\n    /**\n     * @param {?=} trackByFn\n     */\n    constructor(trackByFn) {\n        this._length = 0;\n        this._collection = null;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @return {?}\n     */\n    get collection() { return this._collection; }\n    /**\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachOperation(fn) {\n        let /** @type {?} */ nextIt = this._itHead;\n        let /** @type {?} */ nextRemove = this._removalsHead;\n        let /** @type {?} */ addRemoveOffset = 0;\n        let /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            const /** @type {?} */ record = !nextRemove ||\n                nextIt && ((nextIt.currentIndex)) <\n                    getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? ((nextIt)) :\n                nextRemove;\n            const /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            const /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    const /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    const /** @type {?} */ localCurrentIndex = ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (let /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            const /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            const /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        const /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachPreviousItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachAddedItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachMovedItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachRemovedItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachIdentityChange(fn) {\n        let /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    diff(collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(`Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onDestroy() { }\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    check(collection) {\n        this._reset();\n        let /** @type {?} */ record = this._itHead;\n        let /** @type {?} */ mayBeDirty = false;\n        let /** @type {?} */ index;\n        let /** @type {?} */ item;\n        let /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            this._length = collection.length;\n            for (let /** @type {?} */ index = 0; index < this._length; index++) {\n                item = collection[index];\n                itemTrackBy = this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, (item) => {\n                itemTrackBy = this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this._length = index;\n        }\n        this._truncate(record);\n        this._collection = collection;\n        return this.isDirty;\n    }\n    /**\n     * @return {?}\n     */\n    get isDirty() {\n        return this._additionsHead !== null || this._movesHead !== null ||\n            this._removalsHead !== null || this._identityChangesHead !== null;\n    }\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    _reset() {\n        if (this.isDirty) {\n            let /** @type {?} */ record;\n            let /** @type {?} */ nextRecord;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    }\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    _mismatch(record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        let /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    }\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    _verifyReinsertion(record, item, itemTrackBy, index) {\n        let /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    }\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    _truncate(record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            const /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _reinsertAfter(record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        const /** @type {?} */ prev = record._prevRemoved;\n        const /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _moveAfter(record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _addAfter(record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _insertAfter(record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        const /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    _remove(record) {\n        return this._addToRemovals(this._unlink(record));\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    _unlink(record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        const /** @type {?} */ prev = record._prev;\n        const /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    _addToMoves(record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _addToRemovals(record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    _addIdentityChange(record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        const /** @type {?} */ list = [];\n        this.forEachItem((record) => list.push(record));\n        const /** @type {?} */ previous = [];\n        this.forEachPreviousItem((record) => previous.push(record));\n        const /** @type {?} */ additions = [];\n        this.forEachAddedItem((record) => additions.push(record));\n        const /** @type {?} */ moves = [];\n        this.forEachMovedItem((record) => moves.push(record));\n        const /** @type {?} */ removals = [];\n        this.forEachRemovedItem((record) => removals.push(record));\n        const /** @type {?} */ identityChanges = [];\n        this.forEachIdentityChange((record) => identityChanges.push(record));\n        return 'collection: ' + list.join(', ') + '\\n' +\n            'previous: ' + previous.join(', ') + '\\n' +\n            'additions: ' + additions.join(', ') + '\\n' +\n            'moves: ' + moves.join(', ') + '\\n' +\n            'removals: ' + removals.join(', ') + '\\n' +\n            'identityChanges: ' + identityChanges.join(', ') + '\\n';\n    }\n}\n/**\n * \\@stable\n */\nclass IterableChangeRecord_ {\n    /**\n     * @param {?} item\n     * @param {?} trackById\n     */\n    constructor(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return this.previousIndex === this.currentIndex ? stringify(this.item) :\n            stringify(this.item) + '[' +\n                stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n    }\n}\nclass _DuplicateItemRecordList {\n    constructor() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    add(record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    }\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    get(trackById, atOrAfterIndex) {\n        let /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    }\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    remove(record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        const /** @type {?} */ prev = record._prevDup;\n        const /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    }\n}\nclass _DuplicateMap {\n    constructor() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    put(record) {\n        const /** @type {?} */ key = record.trackById;\n        let /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    }\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    get(trackById, atOrAfterIndex) {\n        const /** @type {?} */ key = trackById;\n        const /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    }\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    remove(record) {\n        const /** @type {?} */ key = record.trackById;\n        const /** @type {?} */ recordList = ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    }\n    /**\n     * @return {?}\n     */\n    get isEmpty() { return this.map.size === 0; }\n    /**\n     * @return {?}\n     */\n    clear() { this.map.clear(); }\n    /**\n     * @return {?}\n     */\n    toString() { return '_DuplicateMap(' + stringify(this.map) + ')'; }\n}\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    const /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    let /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DefaultKeyValueDifferFactory {\n    constructor() { }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    supports(obj) { return obj instanceof Map || isJsObject(obj); }\n    /**\n     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n     * @template K, V\n     * @param {?=} cd\n     * @return {?}\n     */\n    create(cd) {\n        return new DefaultKeyValueDiffer();\n    }\n}\nclass DefaultKeyValueDiffer {\n    constructor() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    /**\n     * @return {?}\n     */\n    get isDirty() {\n        return this._additionsHead !== null || this._changesHead !== null ||\n            this._removalsHead !== null;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachPreviousItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachChangedItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachAddedItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachRemovedItem(fn) {\n        let /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    diff(map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(`Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n        }\n        return this.check(map) ? this : null;\n    }\n    /**\n     * @return {?}\n     */\n    onDestroy() { }\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    check(map) {\n        this._reset();\n        let /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, (value, key) => {\n            if (insertBefore && insertBefore.key === key) {\n                this._maybeAddToChanges(insertBefore, value);\n                this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                const /** @type {?} */ record = this._getOrCreateRecordForKey(key, value);\n                insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (let /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    }\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    _insertBeforeOrAppend(before, record) {\n        if (before) {\n            const /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    _getOrCreateRecordForKey(key, value) {\n        if (this._records.has(key)) {\n            const /** @type {?} */ record = ((this._records.get(key)));\n            this._maybeAddToChanges(record, value);\n            const /** @type {?} */ prev = record._prev;\n            const /** @type {?} */ next = record._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record._next = null;\n            record._prev = null;\n            return record;\n        }\n        const /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _reset() {\n        if (this.isDirty) {\n            let /** @type {?} */ record;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    }\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    _maybeAddToChanges(record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _addToAdditions(record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _addToChanges(record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    }\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    _forEach(obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(k => fn(obj[k], k));\n        }\n    }\n}\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_ {\n    /**\n     * @param {?} key\n     */\n    constructor(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nclass IterableDiffers {\n    /**\n     * @param {?} factories\n     */\n    constructor(factories) { this.factories = factories; }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    static create(factories, parent) {\n        if (parent != null) {\n            const /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    }\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    static extend(factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: (parent) => {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    }\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    find(iterable) {\n        const /** @type {?} */ factory = this.factories.find(f => f.supports(iterable));\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(`Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n        }\n    }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nclass KeyValueDiffers {\n    /**\n     * @param {?} factories\n     */\n    constructor(factories) { this.factories = factories; }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    static create(factories, parent) {\n        if (parent) {\n            const /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    }\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    static extend(factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: (parent) => {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    }\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    find(kv) {\n        const /** @type {?} */ factory = this.factories.find(f => f.supports(kv));\n        if (factory) {\n            return factory;\n        }\n        throw new Error(`Cannot find a differ supporting object '${kv}'`);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff = [new DefaultIterableDifferFactory()];\nconst defaultIterableDiffers = new IterableDiffers(iterableDiff);\nconst defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _reflector() {\n    return reflector;\n}\nconst _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    PlatformRef_,\n    { provide: PlatformRef, useExisting: PlatformRef_ },\n    { provide: Reflector, useFactory: _reflector, deps: [] },\n    TestabilityRegistry,\n    Console,\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nconst platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nconst LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nconst TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nconst TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\nlet MissingTranslationStrategy = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nclass ApplicationModule {\n    /**\n     * @param {?} appRef\n     */\n    constructor(appRef) { }\n}\nApplicationModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    ApplicationRef_,\n                    { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                    ApplicationInitStatus,\n                    Compiler,\n                    APP_ID_RANDOM_PROVIDER,\n                    { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                    {\n                        provide: LOCALE_ID,\n                        useFactory: _localeFactory,\n                        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                    },\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nApplicationModule.ctorParameters = () => [\n    { type: ApplicationRef, },\n];\n\nlet SecurityContext = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nclass Sanitizer {\n    /**\n     * @abstract\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    sanitize(context, value) { }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * @abstract\n */\nclass DebugContext {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    view() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    nodeIndex() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    injector() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    component() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    providerTokens() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    references() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    context() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    componentRenderElement() { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    renderNode() { }\n    /**\n     * @abstract\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    logError(console, ...values) { }\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nconst Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    clearProviderOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    let /** @type {?} */ msg = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n    if (isFirstCheck) {\n        msg +=\n            ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n                ` Has it been created in a change detection hook ?`;\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    const /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    ((err))[ERROR_DEBUG_CONTEXT] = context;\n    ((err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NOOP = () => { };\nconst _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    let /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        let /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        let /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nlet _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        const /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = `c${_renderCompCount++}`;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    const /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    let /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    let /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    const /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ? asElementData(view, nodeIndex).componentView : view;\n    markParentViewsForCheck(startView);\n    return Services.handleEvent(view, nodeIndex, eventName, event);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        const /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    const /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    const /** @type {?} */ matchedQueries = {};\n    let /** @type {?} */ matchedQueryIds = 0;\n    const /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(([queryId, valueType]) => {\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries, references, matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(value => {\n        let /** @type {?} */ token;\n        let /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            [flags, token] = value;\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags, token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    let /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (((renderParent.element)).componentRendererType && ((((renderParent.element)).componentRendererType)).encapsulation ===\n                ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nconst DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    let /** @type {?} */ value = (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(() => NOOP);\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    const /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        const /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    let /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    const /** @type {?} */ hostView = ((compView)).parent;\n    const /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    const /** @type {?} */ startIndex = ((hostElDef)).nodeIndex + 1;\n    const /** @type {?} */ endIndex = ((hostElDef)).nodeIndex + ((hostElDef)).childCount;\n    for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        const /** @type {?} */ nodeDef = ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!((hostView)).parent) {\n        // a root view\n        const /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (let /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        const /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                const /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            const /** @type {?} */ embeddedViews = ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    const /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            ((target)).push(renderNode);\n            break;\n    }\n}\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        const /** @type {?} */ match = ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    let /** @type {?} */ flags = 0;\n    for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    let /** @type {?} */ result = '';\n    for (let /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(`Does not support more than 9 expressions`);\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nconst EMPTY_ARRAY = [];\nconst EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    const /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs = [], bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    let /** @type {?} */ ns = ((null));\n    let /** @type {?} */ name = ((null));\n    if (namespaceAndName) {\n        [ns, name] = splitNamespace(namespaceAndName);\n    }\n    bindings = bindings || [];\n    const /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n        const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n        const [ns, name] = splitNamespace(namespaceAndName);\n        let /** @type {?} */ securityContext = ((undefined));\n        let /** @type {?} */ suffix = ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix };\n    }\n    outputs = outputs || [];\n    const /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (let /** @type {?} */ i = 0; i < outputs.length; i++) {\n        const [target, eventName] = outputs[i];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    const /** @type {?} */ attrs = (fixedAttrs.map(([namespaceAndName, value]) => {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns,\n            name,\n            attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    const /** @type {?} */ elDef = ((def.element));\n    const /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    const /** @type {?} */ renderer = view.renderer;\n    let /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (let /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            const [ns, name, value] = elDef.attrs[i];\n            renderer.setAttribute(el, name, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        const /** @type {?} */ output = def.outputs[i];\n        const /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        let /** @type {?} */ listenTarget = output.target;\n        let /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        const /** @type {?} */ disposable = (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return (event) => {\n        try {\n            return dispatchEvent(view, index, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, to keep in sync with directive events.\n            view.root.errorHandler.handleError(e);\n        }\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const /** @type {?} */ bindLen = def.bindings.length;\n    let /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    let /** @type {?} */ changed = false;\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    const /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    const /** @type {?} */ renderNode$$1 = elData.renderElement;\n    const /** @type {?} */ name = ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            const /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    const /** @type {?} */ securityContext = binding.securityContext;\n    let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    const /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    const /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    let /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        const /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    const /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    const /** @type {?} */ securityContext = binding.securityContext;\n    let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst UNDEFINED_VALUE = new Object();\nconst InjectorRefTokenKey$1 = tokenKey(Injector);\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    const /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags, token, value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    const /** @type {?} */ providersByKey = {};\n    for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n        const /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey,\n        providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    const /** @type {?} */ def = data._def;\n    const /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        const /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    const /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    const /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        let /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    let /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    const /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            const /** @type {?} */ depValues = new Array(len);\n            for (let /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new ctor(...depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    const /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            const /** @type {?} */ depValues = Array(len);\n            for (let /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory(...depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    const /** @type {?} */ def = ngModule._def;\n    for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        const /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            const /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    let /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    const /** @type {?} */ prevView = ((viewIndex)) > 0 ? embeddedViews[((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    let /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    let /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    const /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    const /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        const /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    const /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    const /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    const /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    const /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    const /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    const /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return ((componentFactory)).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory {\n    /**\n     * @param {?} selector\n     * @param {?} componentType\n     * @param {?} viewDefFactory\n     * @param {?} _inputs\n     * @param {?} _outputs\n     * @param {?} ngContentSelectors\n     */\n    constructor(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        super();\n        this.selector = selector;\n        this.componentType = componentType;\n        this._inputs = _inputs;\n        this._outputs = _outputs;\n        this.ngContentSelectors = ngContentSelectors;\n        this.viewDefFactory = viewDefFactory;\n    }\n    /**\n     * @return {?}\n     */\n    get inputs() {\n        const /** @type {?} */ inputsArr = [];\n        const /** @type {?} */ inputs = ((this._inputs));\n        for (let /** @type {?} */ propName in inputs) {\n            const /** @type {?} */ templateName = inputs[propName];\n            inputsArr.push({ propName, templateName });\n        }\n        return inputsArr;\n    }\n    /**\n     * @return {?}\n     */\n    get outputs() {\n        const /** @type {?} */ outputsArr = [];\n        for (let /** @type {?} */ propName in this._outputs) {\n            const /** @type {?} */ templateName = this._outputs[propName];\n            outputsArr.push({ propName, templateName });\n        }\n        return outputsArr;\n    }\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        const /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        const /** @type {?} */ componentNodeIndex = ((((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        const /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    }\n}\nclass ComponentRef_ extends ComponentRef {\n    /**\n     * @param {?} _view\n     * @param {?} _viewRef\n     * @param {?} _component\n     */\n    constructor(_view, _viewRef, _component) {\n        super();\n        this._view = _view;\n        this._viewRef = _viewRef;\n        this._component = _component;\n        this._elDef = this._view.def.nodes[0];\n    }\n    /**\n     * @return {?}\n     */\n    get location() {\n        return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return new Injector_(this._view, this._elDef); }\n    /**\n     * @return {?}\n     */\n    get instance() { return this._component; }\n    /**\n     * @return {?}\n     */\n    get hostView() { return this._viewRef; }\n    /**\n     * @return {?}\n     */\n    get changeDetectorRef() { return this._viewRef; }\n    /**\n     * @return {?}\n     */\n    get componentType() { return (this._component.constructor); }\n    /**\n     * @return {?}\n     */\n    destroy() { this._viewRef.destroy(); }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { this._viewRef.onDestroy(callback); }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ {\n    /**\n     * @param {?} _view\n     * @param {?} _elDef\n     * @param {?} _data\n     */\n    constructor(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    /**\n     * @return {?}\n     */\n    get element() { return new ElementRef(this._data.renderElement); }\n    /**\n     * @return {?}\n     */\n    get injector() { return new Injector_(this._view, this._elDef); }\n    /**\n     * @return {?}\n     */\n    get parentInjector() {\n        let /** @type {?} */ view = this._view;\n        let /** @type {?} */ elDef = this._elDef.parent;\n        while (!elDef && view) {\n            elDef = viewParentEl(view);\n            view = ((view.parent));\n        }\n        return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        const /** @type {?} */ len = this._embeddedViews.length;\n        for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n            const /** @type {?} */ view = ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    get(index) {\n        const /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            const /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    get length() { return this._embeddedViews.length; }\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    createEmbeddedView(templateRef, context, index) {\n        const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    }\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        const /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        const /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    insert(viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        const /** @type {?} */ viewRef_ = (viewRef);\n        const /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    move(viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        const /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    indexOf(viewRef) {\n        return this._embeddedViews.indexOf(((viewRef))._view);\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    remove(index) {\n        const /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    detach(index) {\n        const /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nclass ViewRef_ {\n    /**\n     * @param {?} _view\n     */\n    constructor(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    /**\n     * @return {?}\n     */\n    get rootNodes() { return rootRenderNodes(this._view); }\n    /**\n     * @return {?}\n     */\n    get context() { return this._view.context; }\n    /**\n     * @return {?}\n     */\n    get destroyed() { return (this._view.state & 128 /* Destroyed */) !== 0; }\n    /**\n     * @return {?}\n     */\n    markForCheck() { markParentViewsForCheck(this._view); }\n    /**\n     * @return {?}\n     */\n    detach() { this._view.state &= ~4 /* Attached */; }\n    /**\n     * @return {?}\n     */\n    detectChanges() {\n        const /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs.end) {\n            fs.end();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    checkNoChanges() { Services.checkNoChangesView(this._view); }\n    /**\n     * @return {?}\n     */\n    reattach() { this._view.state |= 4 /* Attached */; }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    }\n    /**\n     * @return {?}\n     */\n    detachFromAppRef() {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    }\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    attachToAppRef(appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    }\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    attachToViewContainerRef(vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef {\n    /**\n     * @param {?} _parentView\n     * @param {?} _def\n     */\n    constructor(_parentView, _def) {\n        super();\n        this._parentView = _parentView;\n        this._def = _def;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    createEmbeddedView(context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((((this._def.element)).template)), context));\n    }\n    /**\n     * @return {?}\n     */\n    get elementRef() {\n        return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nclass Injector_ {\n    /**\n     * @param {?} view\n     * @param {?} elDef\n     */\n    constructor(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n        const /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token, tokenKey: tokenKey(token) }, notFoundValue);\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    const /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        const /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n        return ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter {\n    /**\n     * @param {?} delegate\n     */\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    selectRootElement(selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    createElement(parent, namespaceAndName) {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        const /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    }\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    createViewRoot(hostElement) { return hostElement; }\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    createTemplateAnchor(parentElement) {\n        const /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    }\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    createText(parentElement, value) {\n        const /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    }\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    projectNodes(parentElement, nodes) {\n        for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    }\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    attachViewAfter(node, viewRootNodes) {\n        const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        const /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    }\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    detachView(viewRootNodes) {\n        for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            const /** @type {?} */ node = viewRootNodes[i];\n            const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    destroyView(hostElement, viewAllNodes) {\n        for (let /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    listen(renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    }\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    listenGlobal(target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    setElementProperty(renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    setElementAttribute(renderElement, namespaceAndName, attributeValue) {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    setBindingDebugInfo(renderElement, propertyName, propertyValue) { }\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    setElementClass(renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    setElementStyle(renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    invokeElementMethod(renderElement, methodName, args) {\n        ((renderElement))[methodName].apply(renderElement, args);\n    }\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    setText(renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); }\n    /**\n     * @return {?}\n     */\n    animate() { throw new Error('Renderer.animate is no longer supported!'); }\n}\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ {\n    /**\n     * @param {?} _moduleType\n     * @param {?} _parent\n     * @param {?} _bootstrapComponents\n     * @param {?} _def\n     */\n    constructor(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    }\n    /**\n     * @return {?}\n     */\n    get instance() { return this.get(this._moduleType); }\n    /**\n     * @return {?}\n     */\n    get componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n    /**\n     * @return {?}\n     */\n    get injector() { return this; }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        if (this._destroyed) {\n            throw new Error(`The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach((listener) => listener());\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { this._destroyListeners.push(callback); }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RendererV1TokenKey = tokenKey(Renderer);\nconst Renderer2TokenKey = tokenKey(Renderer2);\nconst ElementRefTokenKey = tokenKey(ElementRef);\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    const /** @type {?} */ bindings = [];\n    if (props) {\n        for (let /** @type {?} */ prop in props) {\n            const [bindingIndex, nonMinifiedName] = props[prop];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    const /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (let /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    const /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n        ngContentIndex: -1, childCount, bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs,\n        element: null,\n        provider: { token, value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    let /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    const /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    const /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    const /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            const /** @type {?} */ output = def.outputs[i];\n            const /** @type {?} */ subscription = instance[((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return (event) => {\n        try {\n            return dispatchEvent(view, index, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    const /** @type {?} */ directive = providerData.instance;\n    let /** @type {?} */ changed = false;\n    let /** @type {?} */ changes = ((undefined));\n    const /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    const /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    const /** @type {?} */ directive = providerData.instance;\n    let /** @type {?} */ changed = false;\n    let /** @type {?} */ changes = ((undefined));\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    const /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    const /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    const /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            const /** @type {?} */ depValues = new Array(len);\n            for (let /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new ctor(...depValues);\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    const /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            const /** @type {?} */ depValues = Array(len);\n            for (let /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory(...depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nconst NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    const /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    const /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    let /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    const /** @type {?} */ providerDef = (((allowPrivateServices ? ((elDef.element)).allProviders : ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef) {\n                        let /** @type {?} */ providerData = asProviderData(view, providerDef.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef) };\n                            view.nodes[providerDef.nodeIndex] = (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = ((viewParentEl(view)));\n        view = ((view.parent));\n    }\n    const /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    let /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        const /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    const /** @type {?} */ propName = ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        let /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        const /** @type {?} */ binding = def.bindings[bindingIdx];\n        changes[((binding.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    const /** @type {?} */ nodes = view.def.nodes;\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n        const /** @type {?} */ nodeDef = nodes[i];\n        let /** @type {?} */ parent = nodeDef.parent;\n        if (!parent && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent && (parent.flags & 1 /* TypeElement */) &&\n            i === parent.nodeIndex + parent.childCount) {\n            // last child of an element\n            if (parent.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent, lifecycles);\n            }\n            parent = parent.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (let /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        const /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    const /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    const /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    let /** @type {?} */ bindingDefs = [];\n    for (let /** @type {?} */ propName in bindings) {\n        const /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName, bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    const /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        let /** @type {?} */ tplDef = ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        const /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (let /** @type {?} */ i = 0; i <= end; i++) {\n            const /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (((nodeDef.query)).filterId & queryIds) === ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (let /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            const /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    const /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    let /** @type {?} */ directiveInstance;\n    let /** @type {?} */ newValues = ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        const /** @type {?} */ elementDef = ((((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    const /** @type {?} */ bindings = ((nodeDef.query)).bindings;\n    let /** @type {?} */ notify = false;\n    for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n        const /** @type {?} */ binding = bindings[i];\n        let /** @type {?} */ boundValue;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        const /** @type {?} */ nodeDef = view.def.nodes[i];\n        const /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && ((nodeDef.element)).template &&\n            (((((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            const /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                const /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n                for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    const /** @type {?} */ embeddedView = embeddedViews[k];\n                    const /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            const /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (let /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    const /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    const /** @type {?} */ ngContentIndex = ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n    const /** @type {?} */ keys = Object.keys(propToIndex);\n    const /** @type {?} */ nbKeys = keys.length;\n    const /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (let /** @type {?} */ i = 0; i < nbKeys; i++) {\n        const /** @type {?} */ key = keys[i];\n        const /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    const /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (let /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        const /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const /** @type {?} */ bindings = def.bindings;\n    let /** @type {?} */ changed = false;\n    const /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        const /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        let /** @type {?} */ value;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                const /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    const /** @type {?} */ bindings = def.bindings;\n    let /** @type {?} */ changed = false;\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        const /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        let /** @type {?} */ value;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (let /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                const /** @type {?} */ pipe = values[0];\n                const /** @type {?} */ params = values.slice(1);\n                value = ((pipe.transform))(...params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    const /** @type {?} */ bindings = new Array(staticText.length - 1);\n    for (let /** @type {?} */ i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex,\n        childCount: 0, bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    let /** @type {?} */ renderNode$$1;\n    const /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    let /** @type {?} */ changed = false;\n    const /** @type {?} */ bindings = def.bindings;\n    const /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        let /** @type {?} */ value = ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        const /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    const /** @type {?} */ bindings = def.bindings;\n    let /** @type {?} */ changed = false;\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        let /** @type {?} */ value = '';\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = ((def.text)).prefix + value;\n        const /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    const /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    let /** @type {?} */ viewBindingCount = 0;\n    let /** @type {?} */ viewDisposableCount = 0;\n    let /** @type {?} */ viewNodeFlags = 0;\n    let /** @type {?} */ viewRootNodeFlags = 0;\n    let /** @type {?} */ viewMatchedQueries = 0;\n    let /** @type {?} */ currentParent = null;\n    let /** @type {?} */ currentRenderParent = null;\n    let /** @type {?} */ currentElementHasPublicProviders = false;\n    let /** @type {?} */ currentElementHasPrivateProviders = false;\n    let /** @type {?} */ lastRenderRootNode = null;\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n        const /** @type {?} */ node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            const /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((((\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent)).element)).publicProviders =\n                    Object.create(/** @type {?} */ ((((currentParent)).element)).publicProviders); /** @type {?} */\n                ((((currentParent)).element)).allProviders = ((((currentParent)).element)).publicProviders;\n            }\n            const /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            const /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                ((((((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((((\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent)).element)).allProviders =\n                        Object.create(/** @type {?} */ ((((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((((((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                ((((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                const /** @type {?} */ newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    const /** @type {?} */ handleEvent = (view, nodeIndex, eventName, event) => ((((nodes[nodeIndex].element)).handleEvent))(view, eventName, event);\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    const /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(`Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        const /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(`Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(`Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(`Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.childCount) {\n        const /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(`Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    const /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    const /** @type {?} */ rendererType = ((nodeDef.element)).componentRendererType;\n    let /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    const /** @type {?} */ nodes = new Array(def.nodes.length);\n    const /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    const /** @type {?} */ view = {\n        def,\n        parent,\n        viewContainerParent: null, parentNodeDef,\n        context: null,\n        component: null, nodes,\n        state: 13 /* CatInit */, root, renderer,\n        oldValues: new Array(def.bindingCount), disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    let /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        const /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    const /** @type {?} */ def = view.def;\n    const /** @type {?} */ nodes = view.nodes;\n    for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        const /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        let /** @type {?} */ nodeData;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                const /** @type {?} */ el = (createElement(view, renderHost, nodeDef));\n                let /** @type {?} */ componentView = ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    const /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = ({\n                    renderElement: el,\n                    componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = ({ instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = ({ instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = ({ instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    const /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    const /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        const /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            const /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (let /** @type {?} */ i = 0; i < projectedViews.length; i++) {\n                    const /** @type {?} */ projectedView = projectedViews[i];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    const /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), `Query ${ /** @type {?} */((nodeDef.query)).id} not dirty`, `Query ${ /** @type {?} */((nodeDef.query)).id} dirty`, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    const /** @type {?} */ len = view.def.nodes.length;\n    for (let /** @type {?} */ i = 0; i < len; i++) {\n        const /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nlet ViewAction = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckNoChangesProjectedViews = 2;\nViewAction.CheckAndUpdate = 3;\nViewAction.CheckAndUpdateProjectedViews = 4;\nViewAction.Destroy = 5;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    const /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        const /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    const /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        const /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            const /** @type {?} */ embeddedViews = ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    const /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    const /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n        const /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: () => { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n        handleEvent: (view, nodeIndex, eventName, event) => view.def.handleEvent(view, nodeIndex, eventName, event),\n        updateDirectives: (view, checkType) => view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view),\n        updateRenderer: (view, checkType) => view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view),\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    const /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    const /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    const /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    const /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    const /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    const /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    const /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule,\n        injector: elInjector, projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    const /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nconst providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    const /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = ((def.factory))(() => NOOP);\n    for (let /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        const /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        let /** @type {?} */ lastElementDef = null;\n        for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            const /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (let /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            const /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                const /** @type {?} */ provider = ((nodeDef.provider));\n                const /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    const { hasOverrides, hasDeprecatedOverrides } = calcHasOverrides(def);\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = ((def.factory))(() => NOOP);\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        let /** @type {?} */ hasOverrides = false;\n        let /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides, hasDeprecatedOverrides };\n        }\n        def.providers.forEach(node => {\n            const /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides, hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            const /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            const /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nlet DebugAction = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nlet _currentAction;\nlet _currentView;\nlet _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle, ...values) {\n        const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle, ...values) {\n        const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    const /** @type {?} */ changed = ((checkAndUpdateNode))(view, nodeDef, argStyle, ...givenValues);\n    if (changed) {\n        const /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            const /** @type {?} */ bindingValues = {};\n            for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                const /** @type {?} */ binding = nodeDef.bindings[i];\n                const /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            const /** @type {?} */ elDef = ((nodeDef.parent));\n            const /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n            }\n            else {\n                // a regular element.\n                for (let /** @type {?} */ attr in bindingValues) {\n                    const /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    ((checkNoChangesNode))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return `ng-reflect-${name}`;\n}\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        const /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        const /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nclass DebugContext_ {\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     */\n    constructor(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        let elDef = this.nodeDef;\n        let elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    /**\n     * @return {?}\n     */\n    get elOrCompView() {\n        // Has to be done lazily as we use the DebugContext also during creation of elements...\n        return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return createInjector(this.elView, this.elDef); }\n    /**\n     * @return {?}\n     */\n    get component() { return this.elOrCompView.component; }\n    /**\n     * @return {?}\n     */\n    get context() { return this.elOrCompView.context; }\n    /**\n     * @return {?}\n     */\n    get providerTokens() {\n        const /** @type {?} */ tokens = [];\n        if (this.elDef) {\n            for (let /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                const /** @type {?} */ childDef = this.elView.def.nodes[i];\n                if (childDef.flags & 20224 /* CatProvider */) {\n                    tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                }\n                i += childDef.childCount;\n            }\n        }\n        return tokens;\n    }\n    /**\n     * @return {?}\n     */\n    get references() {\n        const /** @type {?} */ references = {};\n        if (this.elDef) {\n            collectReferences(this.elView, this.elDef, references);\n            for (let /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                const /** @type {?} */ childDef = this.elView.def.nodes[i];\n                if (childDef.flags & 20224 /* CatProvider */) {\n                    collectReferences(this.elView, childDef, references);\n                }\n                i += childDef.childCount;\n            }\n        }\n        return references;\n    }\n    /**\n     * @return {?}\n     */\n    get componentRenderElement() {\n        const /** @type {?} */ elData = findHostElement(this.elOrCompView);\n        return elData ? elData.renderElement : undefined;\n    }\n    /**\n     * @return {?}\n     */\n    get renderNode() {\n        return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n            renderNode(this.elView, this.elDef);\n    }\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    logError(console, ...values) {\n        let /** @type {?} */ logViewDef;\n        let /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        const /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        let /** @type {?} */ currRenderNodeIndex = -1;\n        let /** @type {?} */ nodeLogger = () => {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return console.error.bind(console, ...values);\n            }\n            else {\n                return NOOP;\n            }\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            ((console.error))(...values);\n        }\n    }\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    let /** @type {?} */ renderNodeIndex = -1;\n    for (let /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        const /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (let /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    const /** @type {?} */ oldAction = _currentAction;\n    const /** @type {?} */ oldView = _currentView;\n    const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        const /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 {\n    /**\n     * @param {?} delegate\n     */\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    createRenderer(element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    }\n    /**\n     * @return {?}\n     */\n    begin() {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    end() {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    whenRenderingDone() {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    }\n}\nclass DebugRenderer2 {\n    /**\n     * @param {?} delegate\n     */\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this.delegate.data; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    destroyNode(node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    destroy() { this.delegate.destroy(); }\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    createElement(name, namespace) {\n        const /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        const /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            const /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    createComment(value) {\n        const /** @type {?} */ comment = this.delegate.createComment(value);\n        const /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    createText(value) {\n        const /** @type {?} */ text = this.delegate.createText(value);\n        const /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    appendChild(parent, newChild) {\n        const /** @type {?} */ debugEl = getDebugNode(parent);\n        const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    insertBefore(parent, newChild, refChild) {\n        const /** @type {?} */ debugEl = getDebugNode(parent);\n        const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        const /** @type {?} */ debugRefEl = ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    removeChild(parent, oldChild) {\n        const /** @type {?} */ debugEl = getDebugNode(parent);\n        const /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    selectRootElement(selectorOrNode) {\n        const /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        const /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    setAttribute(el, name, value, namespace) {\n        const /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    removeAttribute(el, name, namespace) {\n        const /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    addClass(el, name) {\n        const /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    removeClass(el, name) {\n        const /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    setStyle(el, style, value, flags) {\n        const /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    removeStyle(el, style, flags) {\n        const /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setProperty(el, name, value) {\n        const /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    }\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    listen(target, eventName, callback) {\n        if (typeof target !== 'string') {\n            const /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    parentNode(node) { return this.delegate.parentNode(node); }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    nextSibling(node) { return this.delegate.nextSibling(node); }\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(node, value) { return this.delegate.setValue(node, value); }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nfunction clearProviderOverrides() {\n    initServicesIfNeeded();\n    return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nclass NgModuleFactory_ extends NgModuleFactory {\n    /**\n     * @param {?} moduleType\n     * @param {?} _bootstrapComponents\n     * @param {?} _ngModuleDefFactory\n     */\n    constructor(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        super();\n        this.moduleType = moduleType;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._ngModuleDefFactory = _ngModuleDefFactory;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    create(parentInjector) {\n        initServicesIfNeeded();\n        const /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name, definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles = null) {\n    return { type: 4 /* Animate */, styles, timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options = null) {\n    return { type: 3 /* Group */, steps, options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options = null) {\n    return { type: 2 /* Sequence */, steps, options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name, styles, options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Transition Aliases (`:enter` and `:leave`)\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ])\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options = null) {\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nconst AUTO_STYLE$$1 = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the core package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Class, createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, forwardRef, resolveForwardRef, Injector, ReflectiveInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, OpaqueToken, Inject, Optional, Injectable, Self, SkipSelf, Host, NgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER, ValueUnwrapper as ɵValueUnwrapper, devModeEqual as ɵdevModeEqual, isListLikeIterable as ɵisListLikeIterable, ChangeDetectorStatus as ɵChangeDetectorStatus, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy, Console as ɵConsole, ERROR_COMPONENT_TYPE as ɵERROR_COMPONENT_TYPE, ComponentFactory as ɵComponentFactory, CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver, ViewMetadata as ɵViewMetadata, ReflectionCapabilities as ɵReflectionCapabilities, RenderDebugInfo as ɵRenderDebugInfo, _global as ɵglobal, looseIdentical as ɵlooseIdentical, stringify as ɵstringify, makeDecorator as ɵmakeDecorator, isObservable as ɵisObservable, isPromise as ɵisPromise, clearProviderOverrides as ɵclearProviderOverrides, overrideProvider as ɵoverrideProvider, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, registerModuleFactory as ɵregisterModuleFactory, EMPTY_ARRAY as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, anchorDef as ɵand, createComponentFactory as ɵccf, createNgModuleFactory as ɵcmf, createRendererType2 as ɵcrt, directiveDef as ɵdid, elementDef as ɵeld, elementEventFullName as ɵelementEventFullName, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, moduleDef as ɵmod, moduleProvideDef as ɵmpd, ngContentDef as ɵncd, nodeValue as ɵnov, pipeDef as ɵpid, providerDef as ɵprd, pureArrayDef as ɵpad, pureObjectDef as ɵpod, purePipeDef as ɵppd, queryDef as ɵqud, textDef as ɵted, unwrapValue as ɵunv, viewDef as ɵvid, AUTO_STYLE$$1 as AUTO_STYLE, trigger$$1 as trigger, animate$$1 as animate, group$$1 as group, sequence$$1 as sequence, style$$1 as style, state$$1 as state, keyframes$$1 as keyframes, transition$$1 as transition, animate$1 as ɵx, group$1 as ɵy, keyframes$1 as ɵbc, sequence$1 as ɵz, state$1 as ɵbb, style$1 as ɵba, transition$1 as ɵbd, trigger$1 as ɵw, _iterableDiffersFactory as ɵk, _keyValueDiffersFactory as ɵl, _localeFactory as ɵm, ApplicationRef_ as ɵe, _appIdRandomProviderFactory as ɵf, defaultIterableDiffers as ɵg, defaultKeyValueDiffers as ɵh, DefaultIterableDifferFactory as ɵi, DefaultKeyValueDifferFactory as ɵj, ReflectiveInjector_ as ɵb, ReflectiveDependency as ɵc, resolveReflectiveProviders as ɵd, wtfEnabled as ɵn, createScope$1 as ɵp, detectWTF as ɵo, endTimeRange as ɵs, leave as ɵq, startTimeRange as ɵr, makeParamDecorator as ɵa, _def as ɵt, DebugContext as ɵu };\n"],"mappings":"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zE2I,UAAU,GAAGsC,aAAa;IAC9B,CAAC,MACI,IAAIA,aAAa,YAAY3V,cAAc,EAAE;MAC9C+B,KAAK,GAAG4T,aAAa;IACzB;EACJ;EACA5T,KAAK,GAAGgJ,iBAAiB,CAAChJ,KAAK,CAAC;EAChC,IAAIA,KAAK,IAAI,IAAI,EAAE;IACf,OAAO2T,iBAAiB,CAAC3T,KAAK,EAAEqR,QAAQ,EAAEC,UAAU,CAAC;EACzD,CAAC,MACI;IACD,MAAMlF,iBAAiB,CAACC,UAAU,EAAEC,MAAM,CAAC;EAC/C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASqH,iBAAiBA,CAAC3T,KAAK,EAAEqR,QAAQ,EAAEC,UAAU,EAAE;EACpD,OAAO,IAAIF,oBAAoB,CAACvE,aAAa,CAACxD,GAAG,CAACrJ,KAAK,CAAC,EAAEqR,QAAQ,EAAEC,UAAU,CAAC;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMuC,SAAS,GAAG,IAAI7U,MAAM,CAAC,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM8U,kBAAkB,CAAC;EACrB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOC,OAAOA,CAACjB,SAAS,EAAE;IACtB,OAAOD,0BAA0B,CAACC,SAAS,CAAC;EAChD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOkB,gBAAgBA,CAAClB,SAAS,EAAEmB,MAAM,EAAE;IACvC,MAAM,gBAAiBC,2BAA2B,GAAGJ,kBAAkB,CAACC,OAAO,CAACjB,SAAS,CAAC;IAC1F,OAAOgB,kBAAkB,CAACK,qBAAqB,CAACD,2BAA2B,EAAED,MAAM,CAAC;EACxF;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOE,qBAAqBA,CAACrB,SAAS,EAAEmB,MAAM,EAAE;IAC5C,OAAO,IAAIG,mBAAmB,CAACtB,SAAS,EAAEmB,MAAM,CAAC;EACrD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIA,MAAMA,CAAA,EAAG,CAAE;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACII,qBAAqBA,CAACvB,SAAS,EAAE,CAAE;EACnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIwB,uBAAuBA,CAACxB,SAAS,EAAE,CAAE;EACrC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIyB,qBAAqBA,CAACpI,QAAQ,EAAE,CAAE;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIqI,mBAAmBA,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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAGJ,UAAU,GAAGb,aAAa,GAAG,CAACnP,SAAS,EAAEoP,KAAK,KAAKa,SAAS;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,QAAQ,GAAGL,UAAU,GAAGV,KAAK,GAAG,CAACgB,CAAC,EAAEC,CAAC,KAAKA,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAGR,UAAU,GAAGN,cAAc,GAAG,CAACC,SAAS,EAAEC,MAAM,KAAK,IAAI;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,MAAMa,eAAe,GAAGT,UAAU,GAAGF,YAAY,GAAIS,CAAC,IAAK,IAAI;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,YAAY,SAASrf,OAAO,CAAC;EAC/B;AACJ;AACA;AACA;AACA;AACA;AACA;EACIE,WAAWA,CAACof,OAAO,GAAG,KAAK,EAAE;IACzB,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,SAAS,GAAGD,OAAO;EAC5B;EACA;AACJ;AACA;AACA;EACIE,IAAIA,CAACC,KAAK,EAAE;IAAE,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC;EAAE;EACjC;AACJ;AACA;AACA;AACA;AACA;EACI/G,SAASA,CAACiH,eAAe,EAAEzT,KAAK,EAAEoN,QAAQ,EAAE;IACxC,IAAI,gBAAiBsG,WAAW;IAChC,IAAI,gBAAiBC,OAAO,GAAIC,GAAG,IAAK,IAAI;IAC5C,IAAI,gBAAiBC,UAAU,GAAGA,CAAA,KAAM,IAAI;IAC5C,IAAIJ,eAAe,IAAI,OAAOA,eAAe,KAAK,QAAQ,EAAE;MACxDC,WAAW,GAAG,IAAI,CAACL,SAAS,GAAIE,KAAK,IAAK;QACtCO,UAAU,CAAC,MAAML,eAAe,CAACD,IAAI,CAACD,KAAK,CAAC,CAAC;MACjD,CAAC,GAAIA,KAAK,IAAK;QAAEE,eAAe,CAACD,IAAI,CAACD,KAAK,CAAC;MAAE,CAAC;MAC/C,IAAIE,eAAe,CAACzT,KAAK,EAAE;QACvB2T,OAAO,GAAG,IAAI,CAACN,SAAS,GAAIO,GAAG,IAAK;UAAEE,UAAU,CAAC,MAAML,eAAe,CAACzT,KAAK,CAAC4T,GAAG,CAAC,CAAC;QAAE,CAAC,GAChFA,GAAG,IAAK;UAAEH,eAAe,CAACzT,KAAK,CAAC4T,GAAG,CAAC;QAAE,CAAC;MAChD;MACA,IAAIH,eAAe,CAACrG,QAAQ,EAAE;QAC1ByG,UAAU,GAAG,IAAI,CAACR,SAAS,GAAG,MAAM;UAAES,UAAU,CAAC,MAAML,eAAe,CAACrG,QAAQ,CAAC,CAAC,CAAC;QAAE,CAAC,GACjF,MAAM;UAAEqG,eAAe,CAACrG,QAAQ,CAAC,CAAC;QAAE,CAAC;MAC7C;IACJ,CAAC,MACI;MACDsG,WAAW,GAAG,IAAI,CAACL,SAAS,GAAIE,KAAK,IAAK;QAAEO,UAAU,CAAC,MAAML,eAAe,CAACF,KAAK,CAAC,CAAC;MAAE,CAAC,GAClFA,KAAK,IAAK;QAAEE,eAAe,CAACF,KAAK,CAAC;MAAE,CAAC;MAC1C,IAAIvT,KAAK,EAAE;QACP2T,OAAO,GACH,IAAI,CAACN,SAAS,GAAIO,GAAG,IAAK;UAAEE,UAAU,CAAC,MAAM9T,KAAK,CAAC4T,GAAG,CAAC,CAAC;QAAE,CAAC,GAAIA,GAAG,IAAK;UAAE5T,KAAK,CAAC4T,GAAG,CAAC;QAAE,CAAC;MAC9F;MACA,IAAIxG,QAAQ,EAAE;QACVyG,UAAU,GACN,IAAI,CAACR,SAAS,GAAG,MAAM;UAAES,UAAU,CAAC,MAAM1G,QAAQ,CAAC,CAAC,CAAC;QAAE,CAAC,GAAG,MAAM;UAAEA,QAAQ,CAAC,CAAC;QAAE,CAAC;MACxF;IACJ;IACA,OAAO,KAAK,CAACZ,SAAS,CAACkH,WAAW,EAAEC,OAAO,EAAEE,UAAU,CAAC;EAC5D;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,MAAM,CAAC;EACT;AACJ;AACA;EACI/f,WAAWA,CAAC;IAAEggB,oBAAoB,GAAG;EAAM,CAAC,EAAE;IAC1C,IAAI,CAACC,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACC,oBAAoB,GAAG,KAAK;IACjC;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,IAAIjB,YAAY,CAAC,KAAK,CAAC;IACzC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACkB,gBAAgB,GAAG,IAAIlB,YAAY,CAAC,KAAK,CAAC;IAC/C;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACmB,QAAQ,GAAG,IAAInB,YAAY,CAAC,KAAK,CAAC;IACvC;AACR;AACA;IACQ,IAAI,CAACoB,OAAO,GAAG,IAAIpB,YAAY,CAAC,KAAK,CAAC;IACtC,IAAI,OAAOxd,IAAI,IAAI,WAAW,EAAE;MAC5B,MAAM,IAAIyB,KAAK,CAAC,qCAAqC,CAAC;IAC1D;IACAzB,IAAI,CAAC6e,iBAAiB,CAAC,CAAC;IA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CAAC1I,OAAO,CAAC,CAAC;EACvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASyJ,WAAWA,CAAA,EAAG;EACnB,OAAOf,SAAS,IAAI,CAACA,SAAS,CAACM,SAAS,GAAGN,SAAS,GAAG,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMO,WAAW,CAAC;EACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIY,sBAAsBA,CAACC,aAAa,EAAE,CAAE;EACxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,eAAeA,CAACjL,UAAU,EAAEkL,eAAe,EAAE,CAAE;EAC/C;AACJ;AACA;AACA;AACA;AACA;EACI/J,SAASA,CAACC,QAAQ,EAAE,CAAE;EACtB;AACJ;AACA;AACA;AACA;AACA;EACIzO,QAAQA,CAAA,EAAG,CAAE;EACb;AACJ;AACA;AACA;AACA;EACIuO,OAAOA,CAAA,EAAG,CAAE;EACZ;AACJ;AACA;AACA;EACIgJ,SAASA,CAAA,EAAG,CAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiB,4BAA4BA,CAACC,YAAY,EAAEC,MAAM,EAAEjK,QAAQ,EAAE;EAClE,IAAI;IACA,MAAM,gBAAiB7L,MAAM,GAAG6L,QAAQ,CAAC,CAAC;IAC1C,IAAI9D,SAAS,CAAC/H,MAAM,CAAC,EAAE;MACnB,OAAOA,MAAM,CAACiJ,KAAK,CAAEzM,CAAC,IAAK;QACvBsZ,MAAM,CAACjF,iBAAiB,CAAC,MAAMgF,YAAY,CAAC3Z,WAAW,CAACM,CAAC,CAAC,CAAC;QAC3D;QACA,MAAMA,CAAC;MACX,CAAC,CAAC;IACN;IACA,OAAOwD,MAAM;EACjB,CAAC,CACD,OAAOxD,CAAC,EAAE;IACNsZ,MAAM,C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EAAG,CAAE;EACV;AACJ;AACA;AACA;AACA;AACA;EACIjnB,GAAGA,CAAC1F,KAAK,EAAE,CAAE;EACb;AACJ;AACA;AACA;AACA;EACItE,MAAMA,CAAA,EAAG,CAAE;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI+wB,kBAAkBA,CAACG,WAAW,EAAE9lB,OAAO,EAAE9G,KAAK,EAAE,CAAE;EAClD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI6sB,eAAeA,CAAC9K,gBAAgB,EAAE/hB,KAAK,EAAE6H,QAAQ,EAAE8O,gBAAgB,EAAEtT,QAAQ,EAAE,CAAE;EACjF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIypB,MAAMA,CAACrJ,OAAO,EAAEzjB,KAAK,EAAE,CAAE;EACzB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI+sB,IAAIA,CAACtJ,OAAO,EAAEuJ,YAAY,EAAE,CAAE;EAC9B;AACJ;AACA;AACA;AACA;AACA;AACA;EACItwB,OAAOA,CAAC+mB,OAAO,EAAE,CAAE;EACnB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACItC,MAAMA,CAACnhB,KAAK,EAAE,CAAE;EAChB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIitB,MAAMA,CAACjtB,KAAK,EAAE,CAAE;AACpB;;AAEA;AACA;AACA;AACA;AACA,MAAMktB,iBAAiB,CAAC;EACpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,YAAYA,CAAA,EAAG,CAAE;EACjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIF,MAAMA,CAAA,EAAG,CAAE;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI5I,aAAaA,CAAA,EAAG,CAAE;EAClB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,cAAcA,CAAA,EAAG,CAAE;EACnB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI8I,QAAQA,CAAA,EAAG,CAAE;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,SAASH,iBAAiB,CAAC;EACpC;AACJ;AACA;AACA;AACA;EACI9W,OAAOA,CAAA,EAAG,CAAE;EACZ;AACJ;AACA;AACA;EACIgJ,SAASA,CAAA,EAAG,CAAE;EACd;AACJ;AACA;AACA;AACA;EACI/I,SAASA,CAACC,QAAQ,EAAE,CAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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B,GAAGA,mBAAmB;EAClD;EACA;AACJ;AACA;AACA;EACI77C,MAAMA,CAACoZ,cAAc,EAAE;IACnB68B,oBAAoB,CAAC,CAAC;IACtB,MAAM,gBAAiBvX,GAAG,GAAG6C,iBAAiB,CAAC,IAAI,CAACsa,mBAAmB,CAAC;IACxE,OAAOnf,QAAQ,CAACI,iBAAiB,CAAC,IAAI,CAAClmB,UAAU,EAAEwC,cAAc,IAAI9R,QAAQ,CAACC,IAAI,EAAE,IAAI,CAAC8b,oBAAoB,EAAEqb,GAAG,CAAC;EACvod,SAASA,CAAC79C,IAAI,EAAE89C,WAAW,EAAE;EAClC,OAAO;IAAE/0C,IAAI,EAAE,CAAC,CAAC;IAAe/I,IAAI;IAAE89C,WAAW;IAAExkC,OAAO,EAAE,CAAC;EAAE,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASykC,SAASA,CAACC,OAAO,EAAEx2C,MAAM,GAAG,IAAI,EAAE;EACvC,OAAO;IAAEuB,IAAI,EAAE,CAAC,CAAC;IAAevB,MAAM;IAAEw2C;EAAQ,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,KAAK,EAAE5kC,OAAO,GAAG,IAAI,EAAE;EACpC,OAAO;IAAEvQ,IAAI,EAAE,CAAC,CAAC;IAAam1C,KAAK;IAAE5kC;EAAQ,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6kC,UAAUA,CAACD,KAAK,EAAE5kC,OAAO,GAAG,IAAI,EAAE;EACvC,OAAO;IAAEvQ,IAAI,EAAE,CAAC,CAAC;IAAgBm1C,KAAK;IAAE5kC;EAAQ,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8kC,OAAOA,CAAClC,MAAM,EAAE;EACrB,OAAO;IAAEnzC,IAAI,EAAE,CAAC,CAAC;IAAavB,MAAM,EAAE00C,MAAM;IAAEhlB,MAAM,EAAE;EAAK,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASmnB,OAAOA,CAACr+C,IAAI,EAAEwH,MAAM,EAAE8R,OAAO,EAAE;EACpC,OAAO;IAAEvQ,IAAI,EAAE,CAAC,CAAC;IAAa/I,IAAI;IAAEwH,MAAM;IAAE8R;EAAQ,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}