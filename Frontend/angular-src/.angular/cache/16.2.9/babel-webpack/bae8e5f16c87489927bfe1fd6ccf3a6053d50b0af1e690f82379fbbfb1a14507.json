{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nexport class AuthService {\n  constructor(http, jwtHelper) {\n    this.http = http;\n    this.jwtHelper = jwtHelper;\n    this.isloggedIn = false;\n  }\n  registerUser(user) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/users/signup', user, {\n      headers\n    });\n  }\n  isTokenExpired(token) {\n    return this.jwtHelper.isTokenExpired(token);\n  }\n  loggedIn() {\n    if (this.isTokenExpired(this.authToken)) {\n      this.isloggedIn = false;\n    } else {\n      this.isloggedIn = true;\n    }\n  }\n  authenticateUser(user) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/auth/login', user, {\n      headers\n    });\n  }\n  storeToken(token) {\n    localStorage.setItem('id_token', token);\n    this.authToken = token;\n  }\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n  logout() {\n    this.authToken = null;\n    localStorage.clear();\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtHelperService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AuthService","constructor","http","jwtHelper","isloggedIn","registerUser","user","headers","set","post","isTokenExpired","token","loggedIn","authToken","authenticateUser","storeToken","localStorage","setItem","loadToken","getItem","logout","clear","_","i0","ɵɵinject","i1","HttpClient","i2","JwtHelperService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Montg\\Documents\\Final Year\\APDS\\POE\\POE\\Frontend\\angular-src\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  public isloggedIn: Boolean=false;\n  constructor(private http: HttpClient, private jwtHelper: JwtHelperService) { }\n\n  registerUser(user: any) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/users/signup', user, { headers });\n  }\n\n  isTokenExpired(token: string): boolean {\n    return this.jwtHelper.isTokenExpired(token);\n  }\n\n  loggedIn()\n  {\n    if (this.isTokenExpired(this.authToken)) {\n      this.isloggedIn=false;\n    } else {\n      this.isloggedIn=true;\n    }\n  }\n\n  authenticateUser(user:any) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/auth/login', user, { headers });\n  }\n\n  storeToken(token:any)\n  {\n      localStorage.setItem('id_token',token);\n      this.authToken=token;\n  }\n\n  loadToken()\n  {\n    const token  = localStorage.getItem('id_token');\n    this.authToken=token;\n  }\n\n  logout()\n  {\n    this.authToken=null;\n    localStorage.clear();\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAQ9D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB,EAAUC,SAA2B;IAArD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,SAAS,GAATA,SAAS;IADhD,KAAAC,UAAU,GAAU,KAAK;EAC6C;EAE7EC,YAAYA,CAACC,IAAS;IACpB,MAAMC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzE,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,wCAAwC,EAAEH,IAAI,EAAE;MAAEC;IAAO,CAAE,CAAC;EACpF;EAEAG,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAACR,SAAS,CAACO,cAAc,CAACC,KAAK,CAAC;EAC7C;EAEAC,QAAQA,CAAA;IAEN,IAAI,IAAI,CAACF,cAAc,CAAC,IAAI,CAACG,SAAS,CAAC,EAAE;MACvC,IAAI,CAACT,UAAU,GAAC,KAAK;KACtB,MAAM;MACL,IAAI,CAACA,UAAU,GAAC,IAAI;;EAExB;EAEAU,gBAAgBA,CAACR,IAAQ;IACvB,MAAMC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzE,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,sCAAsC,EAAEH,IAAI,EAAE;MAAEC;IAAO,CAAE,CAAC;EAClF;EAEAQ,UAAUA,CAACJ,KAAS;IAEhBK,YAAY,CAACC,OAAO,CAAC,UAAU,EAACN,KAAK,CAAC;IACtC,IAAI,CAACE,SAAS,GAACF,KAAK;EACxB;EAEAO,SAASA,CAAA;IAEP,MAAMP,KAAK,GAAIK,YAAY,CAACG,OAAO,CAAC,UAAU,CAAC;IAC/C,IAAI,CAACN,SAAS,GAACF,KAAK;EACtB;EAEAS,MAAMA,CAAA;IAEJ,IAAI,CAACP,SAAS,GAAC,IAAI;IACnBG,YAAY,CAACK,KAAK,EAAE;EACtB;EAAC,QAAAC,CAAA,G;qBA7CUtB,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX7B,WAAW;IAAA8B,OAAA,EAAX9B,WAAW,CAAA+B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}