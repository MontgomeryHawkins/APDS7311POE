{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","loggedIn","navigate","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac"],"sources":["C:\\Users\\Montg\\Documents\\Final Year\\APDS\\POE\\Frontend\\angular-src\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate\r\n{\r\n    constructor(private authService:AuthService,private router:Router)\r\n    {\r\n        \r\n    }\r\n\r\n    canActivate()\r\n    {\r\n        if (this.authService.loggedIn())\r\n        {\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}"],"mappings":";;;AAKA,OAAM,MAAOA,SAAS;EAElBC,YAAoBC,WAAuB,EAASC,MAAa;IAA7C,KAAAD,WAAW,GAAXA,WAAW;IAAqB,KAAAC,MAAM,GAANA,MAAM;EAG1D;EAEAC,WAAWA,CAAA;IAEP,IAAI,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE,EAC/B;MACI,OAAO,IAAI;KACd,MAED;MACI,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEpB;EAAC,QAAAC,CAAA,G;qBAlBQP,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATd,SAAS;IAAAe,OAAA,EAATf,SAAS,CAAAgB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}