{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { tokenNotExpired } from 'angular2-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  registerUser(user) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/users/signup', user, {\n      headers\n    });\n  }\n  loggedIn() {\n    return tokenNotExpired();\n  }\n  authenticateUser(user) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/auth/login', user, {\n      headers\n    });\n  }\n  storeToken(token) {\n    localStorage.setItem('id_token', token);\n    this.authToken = token;\n  }\n  logout() {\n    this.authToken = null;\n    localStorage.clear();\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","tokenNotExpired","AuthService","constructor","http","registerUser","user","headers","set","post","loggedIn","authenticateUser","storeToken","token","localStorage","setItem","authToken","logout","clear","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Montg\\Documents\\Final Year\\APDS\\POE\\POE\\Frontend\\angular-src\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {tokenNotExpired} from 'angular2-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user: any) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/users/signup', user, { headers });\n  }\n\n  loggedIn()\n  {\n    return tokenNotExpired()\n  }\n\n  authenticateUser(user:any) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/auth/login', user, { headers });\n  }\n\n  storeToken(token:any)\n  {\n      localStorage.setItem('id_token',token);\n      this.authToken=token;\n  }\n\n  logout()\n  {\n    this.authToken=null;\n    localStorage.clear();\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAAQC,eAAe,QAAO,cAAc;;;AAK5C,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,YAAYA,CAACC,IAAS;IACpB,MAAMC,OAAO,GAAG,IAAIP,WAAW,EAAE,CAACQ,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzE,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,wCAAwC,EAAEH,IAAI,EAAE;MAAEC;IAAO,CAAE,CAAC;EACpF;EAEAG,QAAQA,CAAA;IAEN,OAAOT,eAAe,EAAE;EAC1B;EAEAU,gBAAgBA,CAACL,IAAQ;IACvB,MAAMC,OAAO,GAAG,IAAIP,WAAW,EAAE,CAACQ,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzE,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,sCAAsC,EAAEH,IAAI,EAAE;MAAEC;IAAO,CAAE,CAAC;EAClF;EAEAK,UAAUA,CAACC,KAAS;IAEhBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAACF,KAAK,CAAC;IACtC,IAAI,CAACG,SAAS,GAACH,KAAK;EACxB;EAEAI,MAAMA,CAAA;IAEJ,IAAI,CAACD,SAAS,GAAC,IAAI;IACnBF,YAAY,CAACI,KAAK,EAAE;EACtB;EAAC,QAAAC,CAAA,G;qBA/BUjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}