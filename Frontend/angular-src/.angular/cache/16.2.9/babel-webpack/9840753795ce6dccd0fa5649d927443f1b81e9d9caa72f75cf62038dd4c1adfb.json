{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = function (_super) {\n  __extends(DeferObservable, _super);\n  function DeferObservable(observableFactory) {\n    _super.call(this);\n    this.observableFactory = observableFactory;\n  }\n  /**\n   * Creates an Observable that, on subscribe, calls an Observable factory to\n   * make an Observable for each new Observer.\n   *\n   * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n   * is subscribed.\n   * </span>\n   *\n   * <img src=\"./img/defer.png\" width=\"100%\">\n   *\n   * `defer` allows you to create the Observable only when the Observer\n   * subscribes, and create a fresh Observable for each Observer. It waits until\n   * an Observer subscribes to it, and then it generates an Observable,\n   * typically with an Observable factory function. It does this afresh for each\n   * subscriber, so although each subscriber may think it is subscribing to the\n   * same Observable, in fact each subscriber gets its own individual\n   * Observable.\n   *\n   * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n   * var clicksOrInterval = Rx.Observable.defer(function () {\n   *   if (Math.random() > 0.5) {\n   *     return Rx.Observable.fromEvent(document, 'click');\n   *   } else {\n   *     return Rx.Observable.interval(1000);\n   *   }\n   * });\n   * clicksOrInterval.subscribe(x => console.log(x));\n   *\n   * // Results in the following behavior:\n   * // If the result of Math.random() is greater than 0.5 it will listen\n   * // for clicks anywhere on the \"document\"; when document is clicked it\n   * // will log a MouseEvent object to the console. If the result is less\n   * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n   *\n   * @see {@link create}\n   *\n   * @param {function(): SubscribableOrPromise} observableFactory The Observable\n   * factory function to invoke for each Observer that subscribes to the output\n   * Observable. May also return a Promise, which will be converted on the fly\n   * to an Observable.\n   * @return {Observable} An Observable whose Observers' subscriptions trigger\n   * an invocation of the given Observable factory function.\n   * @static true\n   * @name defer\n   * @owner Observable\n   */\n  DeferObservable.create = function (observableFactory) {\n    return new DeferObservable(observableFactory);\n  };\n  /** @deprecated internal use only */\n  DeferObservable.prototype._subscribe = function (subscriber) {\n    return new DeferSubscriber(subscriber, this.observableFactory);\n  };\n  return DeferObservable;\n}(Observable_1.Observable);\nexports.DeferObservable = DeferObservable;\nvar DeferSubscriber = function (_super) {\n  __extends(DeferSubscriber, _super);\n  function DeferSubscriber(destination, factory) {\n    _super.call(this, destination);\n    this.factory = factory;\n    this.tryDefer();\n  }\n  DeferSubscriber.prototype.tryDefer = function () {\n    try {\n      this._callFactory();\n    } catch (err) {\n      this._error(err);\n    }\n  };\n  DeferSubscriber.prototype._callFactory = function () {\n    var result = this.factory();\n    if (result) {\n      this.add(subscribeToResult_1.subscribeToResult(this, result));\n    }\n  };\n  return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Observable_1","require","subscribeToResult_1","OuterSubscriber_1","DeferObservable","_super","observableFactory","call","_subscribe","subscriber","DeferSubscriber","Observable","exports","destination","factory","tryDefer","_callFactory","err","_error","result","add","subscribeToResult","OuterSubscriber"],"sources":["C:/Users/Montg/Documents/Final Year/APDS/POE/POE/node_modules/rxjs/observable/DeferObservable.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = (function (_super) {\n    __extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    /** @deprecated internal use only */ DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_1.Observable));\nexports.DeferObservable = DeferObservable;\nvar DeferSubscriber = (function (_super) {\n    __extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}